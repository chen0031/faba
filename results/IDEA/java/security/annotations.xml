<root>
  <item name="java.security.Identity boolean identityEquals(java.security.Identity) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Identity boolean keyEquals(java.security.Key, java.security.Key) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Identity boolean keyEquals(java.security.Key, java.security.Key) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Identity void addCertificate(java.security.Certificate) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Policy void initPolicy(java.security.Policy) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider java.lang.Object implPut(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider java.lang.Object implPut(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider java.lang.Object implRemove(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider java.lang.Object put(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider java.lang.Object put(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider java.lang.Object remove(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider java.lang.String[] getTypeAndAlgorithm(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider void implPutAll(java.util.Map) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider void parseLegacyPut(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider void putAll(java.util.Map) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider void putPropertyStrings(java.security.Provider.Service) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider void putService(java.security.Provider.Service) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider void removeInvalidServices(java.util.Map&lt;java.security.Provider.ServiceKey,java.security.Provider.Service&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider void removePropertyStrings(java.security.Provider.Service) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider void removeService(java.security.Provider.Service) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security boolean isConstraintSatisfied(java.lang.String, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security boolean isCriterionSatisfied(java.security.Provider, java.lang.String, java.lang.String, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security boolean isStandardAttr(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security int addProvider(java.security.Provider) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security int insertProviderAt(java.security.Provider, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security java.lang.String getProperty(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security java.lang.String getProviderProperty(java.lang.String, java.security.Provider) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security java.lang.String getProviderProperty(java.lang.String, java.security.Provider) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security java.lang.String[] getFilterComponents(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security java.lang.String[] getFilterComponents(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security java.security.Provider[] getProviders(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security java.security.Provider[] getProviders(java.util.Map) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security java.util.LinkedHashSet getAllQualifyingCandidates(java.lang.String, java.lang.String, java.security.Provider[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security java.util.LinkedHashSet getAllQualifyingCandidates(java.lang.String, java.lang.String, java.security.Provider[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security java.util.LinkedHashSet getAllQualifyingCandidates(java.lang.String, java.lang.String, java.security.Provider[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security java.util.LinkedHashSet getProvidersNotUsingCache(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.security.Provider[]) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security void invalidateSMCache(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security void setProperty(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security void setProperty(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Signer void setKeyPair(java.security.KeyPair) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
