<root>
  <item name="com.sun.net.httpserver.Authenticator Authenticator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.net.httpserver.Authenticator com.sun.net.httpserver.Authenticator.Result authenticate(com.sun.net.httpserver.HttpExchange) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.net.httpserver.Authenticator com.sun.net.httpserver.Authenticator.Result authenticate(com.sun.net.httpserver.HttpExchange)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.httpserver.Authenticator.Failure int getResponseCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.net.httpserver.Authenticator.Result Result()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.net.httpserver.Authenticator.Retry int getResponseCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.net.httpserver.Authenticator.Success com.sun.net.httpserver.HttpPrincipal getPrincipal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="virtual com.sun.net.httpserver.Authenticator.Success com.sun.net.httpserver.HttpPrincipal getPrincipal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.net.httpserver.Base64 Base64()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.net.httpserver.Base64 byte[] altBase64ToByteArray(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.httpserver.Base64 byte[] altBase64ToByteArray(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.httpserver.Base64 byte[] base64ToByteArray(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.httpserver.Base64 byte[] base64ToByteArray(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.httpserver.Base64 byte[] base64ToByteArray(java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.httpserver.Base64 byte[] base64ToByteArray(java.lang.String, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.httpserver.Base64 int base64toInt(char, byte[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.httpserver.Base64 java.lang.String byteArrayToAltBase64(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.httpserver.Base64 java.lang.String byteArrayToAltBase64(byte[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.httpserver.Base64 java.lang.String byteArrayToBase64(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.httpserver.Base64 java.lang.String byteArrayToBase64(byte[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.httpserver.Base64 java.lang.String byteArrayToBase64(byte[], boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.httpserver.Base64 java.lang.String byteArrayToBase64(byte[], boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.net.httpserver.BasicAuthenticator com.sun.net.httpserver.Authenticator.Result authenticate(com.sun.net.httpserver.HttpExchange) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.httpserver.BasicAuthenticator com.sun.net.httpserver.Authenticator.Result authenticate(com.sun.net.httpserver.HttpExchange) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.httpserver.BasicAuthenticator com.sun.net.httpserver.Authenticator.Result authenticate(com.sun.net.httpserver.HttpExchange)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.net.httpserver.BasicAuthenticator com.sun.net.httpserver.Authenticator.Result authenticate(com.sun.net.httpserver.HttpExchange)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.httpserver.BasicAuthenticator java.lang.String getRealm()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="virtual com.sun.net.httpserver.BasicAuthenticator java.lang.String getRealm()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.net.httpserver.Filter Filter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.net.httpserver.Filter java.lang.String description()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.httpserver.Filter.Chain Chain(java.util.List&lt;com.sun.net.httpserver.Filter&gt;, com.sun.net.httpserver.HttpHandler) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.httpserver.Headers boolean containsKey(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.net.httpserver.Headers boolean containsKey(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.net.httpserver.Headers boolean containsValue(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.net.httpserver.Headers boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.net.httpserver.Headers boolean isEmpty()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.net.httpserver.Headers int size()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.net.httpserver.Headers java.lang.Object remove(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="virtual com.sun.net.httpserver.Headers java.lang.Object remove(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.net.httpserver.Headers java.lang.String getFirst(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.net.httpserver.Headers java.lang.String getFirst(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.net.httpserver.Headers java.lang.String normalize(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.net.httpserver.Headers java.lang.String normalize(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.net.httpserver.Headers java.util.Collection&lt;java.util.List&lt;java.lang.String&gt;&gt; values()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.net.httpserver.Headers java.util.Collection&lt;java.util.List&lt;java.lang.String&gt;&gt; values()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.httpserver.Headers java.util.List&lt;java.lang.String&gt; get(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.net.httpserver.Headers java.util.List&lt;java.lang.String&gt; put(java.lang.String, java.util.List&lt;java.lang.String&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="virtual com.sun.net.httpserver.Headers java.util.List&lt;java.lang.String&gt; remove(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.net.httpserver.Headers java.util.List&lt;java.lang.String&gt; remove(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="virtual com.sun.net.httpserver.Headers java.util.Set&lt;java.lang.String&gt; keySet()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.httpserver.Headers java.util.Set&lt;java.lang.String&gt; keySet()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.httpserver.Headers java.util.Set&lt;java.util.Map.Entry&lt;java.lang.String,java.util.List&lt;java.lang.String&gt;&gt;&gt; entrySet()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.net.httpserver.Headers java.util.Set&lt;java.util.Map.Entry&lt;java.lang.String,java.util.List&lt;java.lang.String&gt;&gt;&gt; entrySet()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.net.httpserver.Headers void add(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.net.httpserver.Headers void add(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.net.httpserver.Headers void putAll(java.util.Map&lt;? extends java.lang.String,? extends java.util.List&lt;java.lang.String&gt;&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.httpserver.HttpContext HttpContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.net.httpserver.HttpContext com.sun.net.httpserver.Authenticator getAuthenticator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.net.httpserver.HttpContext com.sun.net.httpserver.HttpHandler getHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.net.httpserver.HttpContext com.sun.net.httpserver.HttpServer getServer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.net.httpserver.HttpContext java.lang.String getPath()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.net.httpserver.HttpContext java.util.List&lt;com.sun.net.httpserver.Filter&gt; getFilters()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.net.httpserver.HttpContext java.util.Map&lt;java.lang.String,java.lang.Object&gt; getAttributes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.net.httpserver.HttpContext void setHandler(com.sun.net.httpserver.HttpHandler) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.httpserver.HttpExchange HttpExchange()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.net.httpserver.HttpExchange com.sun.net.httpserver.Headers getRequestHeaders()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.net.httpserver.HttpExchange com.sun.net.httpserver.Headers getResponseHeaders()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.net.httpserver.HttpExchange com.sun.net.httpserver.HttpContext getHttpContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.net.httpserver.HttpExchange com.sun.net.httpserver.HttpPrincipal getPrincipal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.net.httpserver.HttpExchange java.lang.Object getAttribute(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.net.httpserver.HttpExchange java.lang.String getProtocol()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.net.httpserver.HttpExchange java.lang.String getRequestMethod()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.net.httpserver.HttpExchange java.net.InetSocketAddress getLocalAddress()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.net.httpserver.HttpExchange java.net.InetSocketAddress getRemoteAddress()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.net.httpserver.HttpExchange java.net.URI getRequestURI()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.net.httpserver.HttpExchange void setAttribute(java.lang.String, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.net.httpserver.HttpExchange void setStreams(java.io.InputStream, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual com.sun.net.httpserver.HttpExchange void setStreams(java.io.InputStream, java.io.OutputStream) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.net.httpserver.HttpPrincipal HttpPrincipal(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.httpserver.HttpPrincipal HttpPrincipal(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.httpserver.HttpPrincipal boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="virtual com.sun.net.httpserver.HttpPrincipal boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.net.httpserver.HttpPrincipal boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;null-&gt;false&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="virtual com.sun.net.httpserver.HttpPrincipal java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.net.httpserver.HttpPrincipal java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.net.httpserver.HttpPrincipal java.lang.String getRealm()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="virtual com.sun.net.httpserver.HttpPrincipal java.lang.String getRealm()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.net.httpserver.HttpPrincipal java.lang.String getUsername()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="virtual com.sun.net.httpserver.HttpPrincipal java.lang.String getUsername()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="virtual com.sun.net.httpserver.HttpPrincipal java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.net.httpserver.HttpPrincipal java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.net.httpserver.HttpServer HttpServer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.net.httpserver.HttpServer com.sun.net.httpserver.HttpContext createContext(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.net.httpserver.HttpServer com.sun.net.httpserver.HttpContext createContext(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.net.httpserver.HttpServer com.sun.net.httpserver.HttpContext createContext(java.lang.String, com.sun.net.httpserver.HttpHandler) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.net.httpserver.HttpServer com.sun.net.httpserver.HttpContext createContext(java.lang.String, com.sun.net.httpserver.HttpHandler) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.net.httpserver.HttpServer com.sun.net.httpserver.HttpContext createContext(java.lang.String, com.sun.net.httpserver.HttpHandler)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.httpserver.HttpServer com.sun.net.httpserver.HttpServer create()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.httpserver.HttpServer com.sun.net.httpserver.HttpServer create(java.net.InetSocketAddress, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.net.httpserver.HttpServer java.util.concurrent.Executor getExecutor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.net.httpserver.HttpServer void bind(java.net.InetSocketAddress, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.net.httpserver.HttpServer void removeContext(com.sun.net.httpserver.HttpContext) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.net.httpserver.HttpServer void removeContext(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.httpserver.HttpsConfigurator HttpsConfigurator(javax.net.ssl.SSLContext) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.httpserver.HttpsConfigurator javax.net.ssl.SSLContext getSSLContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="virtual com.sun.net.httpserver.HttpsConfigurator javax.net.ssl.SSLContext getSSLContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="virtual com.sun.net.httpserver.HttpsConfigurator void configure(com.sun.net.httpserver.HttpsParameters) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.httpserver.HttpsConfigurator void configure(com.sun.net.httpserver.HttpsParameters) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.httpserver.HttpsExchange HttpsExchange()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.net.httpserver.HttpsParameters HttpsParameters()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.net.httpserver.HttpsParameters boolean getNeedClientAuth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.net.httpserver.HttpsParameters boolean getWantClientAuth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.net.httpserver.HttpsParameters com.sun.net.httpserver.HttpsConfigurator getHttpsConfigurator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.net.httpserver.HttpsParameters java.lang.String[] getCipherSuites()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.net.httpserver.HttpsParameters java.lang.String[] getProtocols()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual com.sun.net.httpserver.HttpsParameters java.net.InetSocketAddress getClientAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.net.httpserver.HttpsParameters void setCipherSuites(java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="virtual com.sun.net.httpserver.HttpsParameters void setCipherSuites(java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.net.httpserver.HttpsParameters void setProtocols(java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="virtual com.sun.net.httpserver.HttpsParameters void setProtocols(java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.net.httpserver.HttpsServer HttpsServer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.net.httpserver.HttpsServer com.sun.net.httpserver.HttpsConfigurator getHttpsConfigurator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.net.httpserver.HttpsServer com.sun.net.httpserver.HttpsServer create()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.httpserver.HttpsServer com.sun.net.httpserver.HttpsServer create(java.net.InetSocketAddress, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.net.httpserver.HttpsServer void setHttpsConfigurator(com.sun.net.httpserver.HttpsConfigurator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
