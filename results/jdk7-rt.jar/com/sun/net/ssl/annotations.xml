<root>
  <item name="com.sun.net.ssl.HttpsURLConnection void setDefaultHostnameVerifier(com.sun.net.ssl.HostnameVerifier) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.HttpsURLConnection void setDefaultSSLSocketFactory(javax.net.ssl.SSLSocketFactory) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.HttpsURLConnection void setHostnameVerifier(com.sun.net.ssl.HostnameVerifier) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.HttpsURLConnection void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.HttpsURLConnection.1 boolean verify(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;false;_,!null-&gt;false;_,null-&gt;false;null,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.net.ssl.KeyManagerFactory com.sun.net.ssl.KeyManagerFactory getInstance(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.KeyManagerFactory com.sun.net.ssl.KeyManagerFactory getInstance(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.KeyManagerFactory com.sun.net.ssl.KeyManagerFactory getInstance(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.KeyManagerFactory com.sun.net.ssl.KeyManagerFactory getInstance(java.lang.String, java.security.Provider) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.KeyManagerFactory com.sun.net.ssl.KeyManagerFactory getInstance(java.lang.String, java.security.Provider)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.KeyManagerFactorySpiWrapper KeyManagerFactorySpiWrapper(java.lang.String, java.security.Provider) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.SSLContext com.sun.net.ssl.SSLContext getInstance(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.SSLContext com.sun.net.ssl.SSLContext getInstance(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.SSLContext com.sun.net.ssl.SSLContext getInstance(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.SSLContext com.sun.net.ssl.SSLContext getInstance(java.lang.String, java.security.Provider) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.SSLContext com.sun.net.ssl.SSLContext getInstance(java.lang.String, java.security.Provider)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.SSLContextSpiWrapper SSLContextSpiWrapper(java.lang.String, java.security.Provider) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.SSLPermission SSLPermission(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.SSLPermission SSLPermission(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.SSLSecurity boolean checkSuperclass(java.lang.Class, java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;false;null,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.net.ssl.SSLSecurity java.lang.Object[] getImpl(java.lang.String, java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_-&gt;!null;_,!null,_-&gt;!null;_,_,!null-&gt;!null;_,_,null-&gt;!null;null,_,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.SSLSecurity java.lang.Object[] getImpl(java.lang.String, java.lang.String, java.security.Provider) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.SSLSecurity java.lang.Object[] getImpl(java.lang.String, java.lang.String, java.security.Provider)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_-&gt;!null;_,!null,_-&gt;!null;_,_,!null-&gt;!null;null,_,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.SSLSecurity java.lang.Object[] getImpl1(java.lang.String, java.lang.String, java.security.Provider.Service) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.SSLSecurity java.lang.Object[] getImpl1(java.lang.String, java.lang.String, java.security.Provider.Service)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_-&gt;!null;_,!null,_-&gt;!null;_,_,!null-&gt;!null;null,_,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.SSLSecurity java.lang.Object[] truncateArray(java.lang.Object[], java.lang.Object[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.SSLSecurity java.lang.Object[] truncateArray(java.lang.Object[], java.lang.Object[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.net.ssl.TrustManagerFactory com.sun.net.ssl.TrustManagerFactory getInstance(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.TrustManagerFactory com.sun.net.ssl.TrustManagerFactory getInstance(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.TrustManagerFactory com.sun.net.ssl.TrustManagerFactory getInstance(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.TrustManagerFactory com.sun.net.ssl.TrustManagerFactory getInstance(java.lang.String, java.security.Provider) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.TrustManagerFactory com.sun.net.ssl.TrustManagerFactory getInstance(java.lang.String, java.security.Provider)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.TrustManagerFactorySpiWrapper TrustManagerFactorySpiWrapper(java.lang.String, java.security.Provider) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.X509KeyManagerJavaxWrapper java.lang.String chooseClientAlias(java.lang.String[], java.security.Principal[], java.net.Socket)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.net.ssl.X509KeyManagerJavaxWrapper java.lang.String chooseEngineClientAlias(java.lang.String[], java.security.Principal[], javax.net.ssl.SSLEngine)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.net.ssl.X509KeyManagerJavaxWrapper java.lang.String chooseEngineServerAlias(java.lang.String, java.security.Principal[], javax.net.ssl.SSLEngine)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.net.ssl.X509KeyManagerJavaxWrapper java.lang.String chooseServerAlias(java.lang.String, java.security.Principal[], java.net.Socket)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
</root>
