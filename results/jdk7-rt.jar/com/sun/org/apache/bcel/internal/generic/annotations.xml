<root>
  <item name="com.sun.org.apache.bcel.internal.generic.AALOAD void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.AASTORE void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ACONST_NULL void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ALOAD void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ANEWARRAY java.lang.Class[] getExceptions()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ANEWARRAY void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ARETURN void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ARRAYLENGTH java.lang.Class[] getExceptions()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ARRAYLENGTH void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ASTORE void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ATHROW java.lang.Class[] getExceptions()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ATHROW void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ArrayType ArrayType(com.sun.org.apache.bcel.internal.generic.Type, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ArrayType ArrayType(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ArrayType boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.BALOAD void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.BASTORE void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.BIPUSH java.lang.Number getValue()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.BIPUSH java.lang.String toString(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.BIPUSH void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.BIPUSH void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.BIPUSH void initFromFile(com.sun.org.apache.bcel.internal.util.ByteSequence, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.BREAKPOINT void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.BasicType boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.BranchHandle void setInstruction(com.sun.org.apache.bcel.internal.generic.Instruction) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.BranchInstruction int getTargetOffset(com.sun.org.apache.bcel.internal.generic.InstructionHandle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.BranchInstruction java.lang.String toString(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.BranchInstruction void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.BranchInstruction void initFromFile(com.sun.org.apache.bcel.internal.util.ByteSequence, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.CALOAD void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.CASTORE void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.CHECKCAST java.lang.Class[] getExceptions()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.CHECKCAST void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.CPInstruction com.sun.org.apache.bcel.internal.generic.Type getType(com.sun.org.apache.bcel.internal.generic.ConstantPoolGen) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.CPInstruction java.lang.String toString(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.CPInstruction java.lang.String toString(com.sun.org.apache.bcel.internal.classfile.ConstantPool) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.CPInstruction java.lang.String toString(com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.CPInstruction void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.CPInstruction void initFromFile(com.sun.org.apache.bcel.internal.util.ByteSequence, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ClassGen ClassGen(com.sun.org.apache.bcel.internal.classfile.JavaClass) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ClassGen ClassGen(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String[], com.sun.org.apache.bcel.internal.generic.ConstantPoolGen) 5">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ClassGen com.sun.org.apache.bcel.internal.classfile.Attribute[] getAttributes()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ClassGen com.sun.org.apache.bcel.internal.classfile.Field[] getFields()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ClassGen com.sun.org.apache.bcel.internal.classfile.JavaClass getJavaClass()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ClassGen com.sun.org.apache.bcel.internal.classfile.Method[] getMethods()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ClassGen java.lang.String[] getInterfaceNames()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ClassGen void replaceField(com.sun.org.apache.bcel.internal.classfile.Field, com.sun.org.apache.bcel.internal.classfile.Field) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ClassGen void replaceMethod(com.sun.org.apache.bcel.internal.classfile.Method, com.sun.org.apache.bcel.internal.classfile.Method) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ClassGen void setClassName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ClassGen void setMethods(com.sun.org.apache.bcel.internal.classfile.Method[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ClassGen void setSuperclassName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.CodeExceptionGen com.sun.org.apache.bcel.internal.classfile.CodeException getCodeException(com.sun.org.apache.bcel.internal.generic.ConstantPoolGen)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.CodeExceptionGen java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ConstantPoolGen ConstantPoolGen(com.sun.org.apache.bcel.internal.classfile.ConstantPool) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ConstantPoolGen ConstantPoolGen(com.sun.org.apache.bcel.internal.classfile.Constant[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ConstantPoolGen com.sun.org.apache.bcel.internal.classfile.ConstantPool getConstantPool()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ConstantPoolGen com.sun.org.apache.bcel.internal.classfile.ConstantPool getFinalConstantPool()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ConstantPoolGen int addArrayClass(com.sun.org.apache.bcel.internal.generic.ArrayType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ConstantPoolGen int addClass(com.sun.org.apache.bcel.internal.generic.ObjectType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ConstantPoolGen int addClass(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ConstantPoolGen int addConstant(com.sun.org.apache.bcel.internal.classfile.Constant, com.sun.org.apache.bcel.internal.generic.ConstantPoolGen) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ConstantPoolGen int addConstant(com.sun.org.apache.bcel.internal.classfile.Constant, com.sun.org.apache.bcel.internal.generic.ConstantPoolGen) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ConstantPoolGen int addInterfaceMethodref(com.sun.org.apache.bcel.internal.generic.MethodGen) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ConstantPoolGen int addMethodref(com.sun.org.apache.bcel.internal.generic.MethodGen) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ConstantPoolGen int lookupClass(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ConstantPoolGen int lookupInterfaceMethodref(com.sun.org.apache.bcel.internal.generic.MethodGen) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ConstantPoolGen int lookupMethodref(com.sun.org.apache.bcel.internal.generic.MethodGen) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ConstantPoolGen java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.D2F void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.D2I void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.D2L void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.DADD void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.DALOAD void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.DASTORE void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.DCMPG void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.DCMPL void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.DCONST java.lang.Number getValue()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.DCONST void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.DDIV void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.DLOAD void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.DMUL void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.DNEG void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.DREM void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.DRETURN void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.DSTORE void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.DSUB void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.DUP void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.DUP2 void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.DUP2_X1 void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.DUP2_X2 void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.DUP_X1 void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.DUP_X2 void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.F2D void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.F2I void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.F2L void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.FADD void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.FALOAD void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.FASTORE void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.FCMPG void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.FCMPL void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.FCONST java.lang.Number getValue()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.FCONST void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.FDIV void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.FLOAD void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.FMUL void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.FNEG void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.FREM void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.FRETURN void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.FSTORE void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.FSUB void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.FieldGen FieldGen(com.sun.org.apache.bcel.internal.classfile.Field, com.sun.org.apache.bcel.internal.generic.ConstantPoolGen) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.FieldGen com.sun.org.apache.bcel.internal.classfile.Field getField()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.FieldGen java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.FieldGenOrMethodGen com.sun.org.apache.bcel.internal.classfile.Attribute[] getAttributes()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.FieldGenOrMethodGen void setType(com.sun.org.apache.bcel.internal.generic.Type) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.FieldInstruction java.lang.String toString(com.sun.org.apache.bcel.internal.classfile.ConstantPool) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.FieldInstruction java.lang.String toString(com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.FieldOrMethod com.sun.org.apache.bcel.internal.generic.ObjectType getClassType(com.sun.org.apache.bcel.internal.generic.ConstantPoolGen)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.FieldOrMethod java.lang.String getClassName(com.sun.org.apache.bcel.internal.generic.ConstantPoolGen) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.FieldOrMethod java.lang.String getName(com.sun.org.apache.bcel.internal.generic.ConstantPoolGen) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.FieldOrMethod java.lang.String getSignature(com.sun.org.apache.bcel.internal.generic.ConstantPoolGen) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.GETFIELD java.lang.Class[] getExceptions()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.GETFIELD void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.GETSTATIC java.lang.Class[] getExceptions()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.GETSTATIC void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.GOTO void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.GOTO_W void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.GOTO_W void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.GOTO_W void initFromFile(com.sun.org.apache.bcel.internal.util.ByteSequence, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.I2B void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.I2C void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.I2D void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.I2F void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.I2L void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.I2S void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IADD void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IALOAD void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IAND void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IASTORE void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ICONST java.lang.Number getValue()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ICONST void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IDIV java.lang.Class[] getExceptions()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IDIV void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IFEQ com.sun.org.apache.bcel.internal.generic.IfInstruction negate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IFEQ void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IFGE com.sun.org.apache.bcel.internal.generic.IfInstruction negate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IFGE void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IFGT com.sun.org.apache.bcel.internal.generic.IfInstruction negate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IFGT void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IFLE com.sun.org.apache.bcel.internal.generic.IfInstruction negate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IFLE void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IFLT com.sun.org.apache.bcel.internal.generic.IfInstruction negate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IFLT void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IFNE com.sun.org.apache.bcel.internal.generic.IfInstruction negate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IFNE void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IFNONNULL com.sun.org.apache.bcel.internal.generic.IfInstruction negate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IFNONNULL void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IFNULL com.sun.org.apache.bcel.internal.generic.IfInstruction negate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IFNULL void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IF_ACMPEQ com.sun.org.apache.bcel.internal.generic.IfInstruction negate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IF_ACMPEQ void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IF_ACMPNE com.sun.org.apache.bcel.internal.generic.IfInstruction negate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IF_ACMPNE void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IF_ICMPEQ com.sun.org.apache.bcel.internal.generic.IfInstruction negate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IF_ICMPEQ void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IF_ICMPGE com.sun.org.apache.bcel.internal.generic.IfInstruction negate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IF_ICMPGE void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IF_ICMPGT com.sun.org.apache.bcel.internal.generic.IfInstruction negate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IF_ICMPGT void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IF_ICMPLE com.sun.org.apache.bcel.internal.generic.IfInstruction negate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IF_ICMPLE void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IF_ICMPLT com.sun.org.apache.bcel.internal.generic.IfInstruction negate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IF_ICMPLT void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IF_ICMPNE com.sun.org.apache.bcel.internal.generic.IfInstruction negate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IF_ICMPNE void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IINC java.lang.String toString(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IINC void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IINC void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IINC void initFromFile(com.sun.org.apache.bcel.internal.util.ByteSequence, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ILOAD void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IMPDEP1 void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IMPDEP2 void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IMUL void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.INEG void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.INSTANCEOF void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.INVOKEINTERFACE java.lang.Class[] getExceptions()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.INVOKEINTERFACE java.lang.String toString(com.sun.org.apache.bcel.internal.classfile.ConstantPool) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.INVOKEINTERFACE java.lang.String toString(com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.INVOKEINTERFACE void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.INVOKEINTERFACE void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.INVOKEINTERFACE void initFromFile(com.sun.org.apache.bcel.internal.util.ByteSequence, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.INVOKESPECIAL java.lang.Class[] getExceptions()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.INVOKESPECIAL void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.INVOKESTATIC java.lang.Class[] getExceptions()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.INVOKESTATIC void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.INVOKEVIRTUAL java.lang.Class[] getExceptions()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.INVOKEVIRTUAL void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IOR void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IREM java.lang.Class[] getExceptions()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IREM void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IRETURN void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ISHL void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ISHR void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ISTORE void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ISUB void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IUSHR void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.IXOR void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.Instruction boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.Instruction com.sun.org.apache.bcel.internal.generic.Instruction readInstruction(com.sun.org.apache.bcel.internal.util.ByteSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.Instruction java.lang.String className(short)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.Instruction java.lang.String toString(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;true-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.Instruction void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionComparator.1 boolean equals(com.sun.org.apache.bcel.internal.generic.Instruction, com.sun.org.apache.bcel.internal.generic.Instruction) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionComparator.1 boolean equals(com.sun.org.apache.bcel.internal.generic.Instruction, com.sun.org.apache.bcel.internal.generic.Instruction) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionFactory InstructionFactory(com.sun.org.apache.bcel.internal.generic.ClassGen) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionFactory boolean isString(com.sun.org.apache.bcel.internal.generic.Type)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionFactory com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction createBinaryOperation(java.lang.String, com.sun.org.apache.bcel.internal.generic.Type) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionFactory com.sun.org.apache.bcel.internal.generic.ArithmeticInstruction createBinaryOperation(java.lang.String, com.sun.org.apache.bcel.internal.generic.Type) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionFactory com.sun.org.apache.bcel.internal.generic.ArrayInstruction createArrayLoad(com.sun.org.apache.bcel.internal.generic.Type) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionFactory com.sun.org.apache.bcel.internal.generic.ArrayInstruction createArrayStore(com.sun.org.apache.bcel.internal.generic.Type) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionFactory com.sun.org.apache.bcel.internal.generic.BranchInstruction createBranchInstruction(short, com.sun.org.apache.bcel.internal.generic.InstructionHandle)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionFactory com.sun.org.apache.bcel.internal.generic.CHECKCAST createCheckCast(com.sun.org.apache.bcel.internal.generic.ReferenceType)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionFactory com.sun.org.apache.bcel.internal.generic.FieldInstruction createFieldAccess(java.lang.String, java.lang.String, com.sun.org.apache.bcel.internal.generic.Type, short) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionFactory com.sun.org.apache.bcel.internal.generic.FieldInstruction createFieldAccess(java.lang.String, java.lang.String, com.sun.org.apache.bcel.internal.generic.Type, short)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionFactory com.sun.org.apache.bcel.internal.generic.GETFIELD createGetField(java.lang.String, java.lang.String, com.sun.org.apache.bcel.internal.generic.Type) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionFactory com.sun.org.apache.bcel.internal.generic.GETFIELD createGetField(java.lang.String, java.lang.String, com.sun.org.apache.bcel.internal.generic.Type)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionFactory com.sun.org.apache.bcel.internal.generic.GETSTATIC createGetStatic(java.lang.String, java.lang.String, com.sun.org.apache.bcel.internal.generic.Type) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionFactory com.sun.org.apache.bcel.internal.generic.GETSTATIC createGetStatic(java.lang.String, java.lang.String, com.sun.org.apache.bcel.internal.generic.Type)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionFactory com.sun.org.apache.bcel.internal.generic.INSTANCEOF createInstanceOf(com.sun.org.apache.bcel.internal.generic.ReferenceType)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionFactory com.sun.org.apache.bcel.internal.generic.Instruction createAppend(com.sun.org.apache.bcel.internal.generic.Type) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionFactory com.sun.org.apache.bcel.internal.generic.Instruction createCast(com.sun.org.apache.bcel.internal.generic.Type, com.sun.org.apache.bcel.internal.generic.Type) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionFactory com.sun.org.apache.bcel.internal.generic.Instruction createCast(com.sun.org.apache.bcel.internal.generic.Type, com.sun.org.apache.bcel.internal.generic.Type) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionFactory com.sun.org.apache.bcel.internal.generic.Instruction createConstant(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionFactory com.sun.org.apache.bcel.internal.generic.Instruction createNewArray(com.sun.org.apache.bcel.internal.generic.Type, short) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionFactory com.sun.org.apache.bcel.internal.generic.Instruction createNewArray(com.sun.org.apache.bcel.internal.generic.Type, short)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionFactory com.sun.org.apache.bcel.internal.generic.Instruction createNull(com.sun.org.apache.bcel.internal.generic.Type) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionFactory com.sun.org.apache.bcel.internal.generic.Instruction createThis()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionFactory com.sun.org.apache.bcel.internal.generic.InstructionList createPrintln(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionFactory com.sun.org.apache.bcel.internal.generic.InvokeInstruction createInvoke(com.sun.org.apache.bcel.internal.generic.InstructionFactory.MethodObject, short) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionFactory com.sun.org.apache.bcel.internal.generic.InvokeInstruction createInvoke(java.lang.String, java.lang.String, com.sun.org.apache.bcel.internal.generic.Type, com.sun.org.apache.bcel.internal.generic.Type[], short) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionFactory com.sun.org.apache.bcel.internal.generic.InvokeInstruction createInvoke(java.lang.String, java.lang.String, com.sun.org.apache.bcel.internal.generic.Type, com.sun.org.apache.bcel.internal.generic.Type[], short) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionFactory com.sun.org.apache.bcel.internal.generic.InvokeInstruction createInvoke(java.lang.String, java.lang.String, com.sun.org.apache.bcel.internal.generic.Type, com.sun.org.apache.bcel.internal.generic.Type[], short)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionFactory com.sun.org.apache.bcel.internal.generic.LocalVariableInstruction createLoad(com.sun.org.apache.bcel.internal.generic.Type, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionFactory com.sun.org.apache.bcel.internal.generic.LocalVariableInstruction createLoad(com.sun.org.apache.bcel.internal.generic.Type, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionFactory com.sun.org.apache.bcel.internal.generic.LocalVariableInstruction createStore(com.sun.org.apache.bcel.internal.generic.Type, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionFactory com.sun.org.apache.bcel.internal.generic.LocalVariableInstruction createStore(com.sun.org.apache.bcel.internal.generic.Type, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionFactory com.sun.org.apache.bcel.internal.generic.NEW createNew(com.sun.org.apache.bcel.internal.generic.ObjectType)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionFactory com.sun.org.apache.bcel.internal.generic.NEW createNew(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionFactory com.sun.org.apache.bcel.internal.generic.PUTFIELD createPutField(java.lang.String, java.lang.String, com.sun.org.apache.bcel.internal.generic.Type) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionFactory com.sun.org.apache.bcel.internal.generic.PUTFIELD createPutField(java.lang.String, java.lang.String, com.sun.org.apache.bcel.internal.generic.Type)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionFactory com.sun.org.apache.bcel.internal.generic.PUTSTATIC createPutStatic(java.lang.String, java.lang.String, com.sun.org.apache.bcel.internal.generic.Type) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionFactory com.sun.org.apache.bcel.internal.generic.PUTSTATIC createPutStatic(java.lang.String, java.lang.String, com.sun.org.apache.bcel.internal.generic.Type)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionFactory com.sun.org.apache.bcel.internal.generic.ReturnInstruction createReturn(com.sun.org.apache.bcel.internal.generic.Type) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionHandle java.lang.String toString(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionHandle void setInstruction(com.sun.org.apache.bcel.internal.generic.Instruction) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionList InstructionList(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionList InstructionList(com.sun.org.apache.bcel.internal.generic.CompoundInstruction) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionList boolean contains(com.sun.org.apache.bcel.internal.generic.InstructionHandle)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionList com.sun.org.apache.bcel.internal.generic.InstructionHandle access$000(com.sun.org.apache.bcel.internal.generic.InstructionList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionList com.sun.org.apache.bcel.internal.generic.InstructionHandle append(com.sun.org.apache.bcel.internal.generic.CompoundInstruction) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionList com.sun.org.apache.bcel.internal.generic.InstructionHandle append(com.sun.org.apache.bcel.internal.generic.Instruction, com.sun.org.apache.bcel.internal.generic.CompoundInstruction) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionList com.sun.org.apache.bcel.internal.generic.InstructionHandle append(com.sun.org.apache.bcel.internal.generic.InstructionHandle, com.sun.org.apache.bcel.internal.generic.CompoundInstruction) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionList com.sun.org.apache.bcel.internal.generic.InstructionHandle append(com.sun.org.apache.bcel.internal.generic.InstructionHandle, com.sun.org.apache.bcel.internal.generic.InstructionList) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionList com.sun.org.apache.bcel.internal.generic.InstructionHandle append(com.sun.org.apache.bcel.internal.generic.InstructionHandle, com.sun.org.apache.bcel.internal.generic.InstructionList)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionList com.sun.org.apache.bcel.internal.generic.InstructionHandle append(com.sun.org.apache.bcel.internal.generic.InstructionList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionList com.sun.org.apache.bcel.internal.generic.InstructionHandle findHandle(com.sun.org.apache.bcel.internal.generic.InstructionHandle[], int[], int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionList com.sun.org.apache.bcel.internal.generic.InstructionHandle findHandle(com.sun.org.apache.bcel.internal.generic.InstructionHandle[], int[], int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionList com.sun.org.apache.bcel.internal.generic.InstructionHandle insert(com.sun.org.apache.bcel.internal.generic.CompoundInstruction) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionList com.sun.org.apache.bcel.internal.generic.InstructionHandle insert(com.sun.org.apache.bcel.internal.generic.Instruction, com.sun.org.apache.bcel.internal.generic.CompoundInstruction) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionList com.sun.org.apache.bcel.internal.generic.InstructionHandle insert(com.sun.org.apache.bcel.internal.generic.InstructionHandle, com.sun.org.apache.bcel.internal.generic.CompoundInstruction) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionList com.sun.org.apache.bcel.internal.generic.InstructionHandle insert(com.sun.org.apache.bcel.internal.generic.InstructionHandle, com.sun.org.apache.bcel.internal.generic.InstructionList) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionList com.sun.org.apache.bcel.internal.generic.InstructionHandle insert(com.sun.org.apache.bcel.internal.generic.InstructionHandle, com.sun.org.apache.bcel.internal.generic.InstructionList)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionList com.sun.org.apache.bcel.internal.generic.Instruction[] getInstructions()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionList java.lang.String toString(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionList java.util.Iterator iterator()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionList void append(com.sun.org.apache.bcel.internal.generic.InstructionHandle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionList void delete(com.sun.org.apache.bcel.internal.generic.InstructionHandle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionList void delete(com.sun.org.apache.bcel.internal.generic.InstructionHandle, com.sun.org.apache.bcel.internal.generic.InstructionHandle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionList void delete(com.sun.org.apache.bcel.internal.generic.InstructionHandle, com.sun.org.apache.bcel.internal.generic.InstructionHandle) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionList void insert(com.sun.org.apache.bcel.internal.generic.InstructionHandle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionList void move(com.sun.org.apache.bcel.internal.generic.InstructionHandle, com.sun.org.apache.bcel.internal.generic.InstructionHandle, com.sun.org.apache.bcel.internal.generic.InstructionHandle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionList void move(com.sun.org.apache.bcel.internal.generic.InstructionHandle, com.sun.org.apache.bcel.internal.generic.InstructionHandle, com.sun.org.apache.bcel.internal.generic.InstructionHandle) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionList void redirectExceptionHandlers(com.sun.org.apache.bcel.internal.generic.CodeExceptionGen[], com.sun.org.apache.bcel.internal.generic.InstructionHandle, com.sun.org.apache.bcel.internal.generic.InstructionHandle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InstructionList void redirectLocalVariables(com.sun.org.apache.bcel.internal.generic.LocalVariableGen[], com.sun.org.apache.bcel.internal.generic.InstructionHandle, com.sun.org.apache.bcel.internal.generic.InstructionHandle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InvokeInstruction com.sun.org.apache.bcel.internal.generic.Type[] getArgumentTypes(com.sun.org.apache.bcel.internal.generic.ConstantPoolGen)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InvokeInstruction java.lang.String toString(com.sun.org.apache.bcel.internal.classfile.ConstantPool) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.InvokeInstruction java.lang.String toString(com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.JSR void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.JSR_W void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.JSR_W void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.JSR_W void initFromFile(com.sun.org.apache.bcel.internal.util.ByteSequence, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.JsrInstruction com.sun.org.apache.bcel.internal.generic.Type getType(com.sun.org.apache.bcel.internal.generic.ConstantPoolGen)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.L2D void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.L2F void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.L2I void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LADD void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LALOAD void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LAND void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LASTORE void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LCMP void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LCONST java.lang.Number getValue()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LCONST void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LDC com.sun.org.apache.bcel.internal.generic.Type getType(com.sun.org.apache.bcel.internal.generic.ConstantPoolGen) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LDC java.lang.Object getValue(com.sun.org.apache.bcel.internal.generic.ConstantPoolGen) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LDC void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LDC void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LDC void initFromFile(com.sun.org.apache.bcel.internal.util.ByteSequence, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LDC2_W com.sun.org.apache.bcel.internal.generic.Type getType(com.sun.org.apache.bcel.internal.generic.ConstantPoolGen) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LDC2_W java.lang.Number getValue(com.sun.org.apache.bcel.internal.generic.ConstantPoolGen) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LDC2_W java.lang.Number getValue(com.sun.org.apache.bcel.internal.generic.ConstantPoolGen)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LDC2_W void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LDC_W void initFromFile(com.sun.org.apache.bcel.internal.util.ByteSequence, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LDIV java.lang.Class[] getExceptions()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LDIV void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LLOAD void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LMUL void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LNEG void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LOOKUPSWITCH LOOKUPSWITCH(int[], com.sun.org.apache.bcel.internal.generic.InstructionHandle[], com.sun.org.apache.bcel.internal.generic.InstructionHandle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LOOKUPSWITCH LOOKUPSWITCH(int[], com.sun.org.apache.bcel.internal.generic.InstructionHandle[], com.sun.org.apache.bcel.internal.generic.InstructionHandle) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LOOKUPSWITCH void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LOOKUPSWITCH void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LOOKUPSWITCH void initFromFile(com.sun.org.apache.bcel.internal.util.ByteSequence, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LOR void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LREM java.lang.Class[] getExceptions()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LREM void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LRETURN void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LSHL void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LSHR void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LSTORE void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LSUB void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LUSHR void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LXOR void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LineNumberGen com.sun.org.apache.bcel.internal.classfile.LineNumber getLineNumber()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LoadInstruction void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LocalVariableGen com.sun.org.apache.bcel.internal.classfile.LocalVariable getLocalVariable(com.sun.org.apache.bcel.internal.generic.ConstantPoolGen) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LocalVariableGen com.sun.org.apache.bcel.internal.classfile.LocalVariable getLocalVariable(com.sun.org.apache.bcel.internal.generic.ConstantPoolGen)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LocalVariableGen java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LocalVariableInstruction java.lang.String toString(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;true-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.LocalVariableInstruction void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.MONITORENTER java.lang.Class[] getExceptions()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.MONITORENTER void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.MONITOREXIT java.lang.Class[] getExceptions()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.MONITOREXIT void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.MULTIANEWARRAY java.lang.Class[] getExceptions()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.MULTIANEWARRAY java.lang.String toString(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.MULTIANEWARRAY java.lang.String toString(com.sun.org.apache.bcel.internal.classfile.ConstantPool) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.MULTIANEWARRAY java.lang.String toString(com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.MULTIANEWARRAY void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.MULTIANEWARRAY void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.MULTIANEWARRAY void initFromFile(com.sun.org.apache.bcel.internal.util.ByteSequence, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.MethodGen MethodGen(com.sun.org.apache.bcel.internal.classfile.Method, java.lang.String, com.sun.org.apache.bcel.internal.generic.ConstantPoolGen) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.MethodGen com.sun.org.apache.bcel.internal.classfile.Attribute[] getCodeAttributes()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.MethodGen com.sun.org.apache.bcel.internal.classfile.ExceptionTable getExceptionTable(com.sun.org.apache.bcel.internal.generic.ConstantPoolGen) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.MethodGen com.sun.org.apache.bcel.internal.classfile.ExceptionTable getExceptionTable(com.sun.org.apache.bcel.internal.generic.ConstantPoolGen)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.MethodGen com.sun.org.apache.bcel.internal.classfile.LineNumberTable getLineNumberTable(com.sun.org.apache.bcel.internal.generic.ConstantPoolGen) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.MethodGen com.sun.org.apache.bcel.internal.classfile.LineNumberTable getLineNumberTable(com.sun.org.apache.bcel.internal.generic.ConstantPoolGen)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.MethodGen com.sun.org.apache.bcel.internal.classfile.LocalVariableTable getLocalVariableTable(com.sun.org.apache.bcel.internal.generic.ConstantPoolGen) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.MethodGen com.sun.org.apache.bcel.internal.classfile.LocalVariableTable getLocalVariableTable(com.sun.org.apache.bcel.internal.generic.ConstantPoolGen)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.MethodGen com.sun.org.apache.bcel.internal.classfile.Method getMethod()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.MethodGen com.sun.org.apache.bcel.internal.generic.CodeExceptionGen addExceptionHandler(com.sun.org.apache.bcel.internal.generic.InstructionHandle, com.sun.org.apache.bcel.internal.generic.InstructionHandle, com.sun.org.apache.bcel.internal.generic.InstructionHandle, com.sun.org.apache.bcel.internal.generic.ObjectType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.MethodGen com.sun.org.apache.bcel.internal.generic.CodeExceptionGen addExceptionHandler(com.sun.org.apache.bcel.internal.generic.InstructionHandle, com.sun.org.apache.bcel.internal.generic.InstructionHandle, com.sun.org.apache.bcel.internal.generic.InstructionHandle, com.sun.org.apache.bcel.internal.generic.ObjectType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.MethodGen com.sun.org.apache.bcel.internal.generic.CodeExceptionGen addExceptionHandler(com.sun.org.apache.bcel.internal.generic.InstructionHandle, com.sun.org.apache.bcel.internal.generic.InstructionHandle, com.sun.org.apache.bcel.internal.generic.InstructionHandle, com.sun.org.apache.bcel.internal.generic.ObjectType) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.MethodGen com.sun.org.apache.bcel.internal.generic.CodeExceptionGen addExceptionHandler(com.sun.org.apache.bcel.internal.generic.InstructionHandle, com.sun.org.apache.bcel.internal.generic.InstructionHandle, com.sun.org.apache.bcel.internal.generic.InstructionHandle, com.sun.org.apache.bcel.internal.generic.ObjectType)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.MethodGen com.sun.org.apache.bcel.internal.generic.CodeExceptionGen[] getExceptionHandlers()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.MethodGen com.sun.org.apache.bcel.internal.generic.LineNumberGen addLineNumber(com.sun.org.apache.bcel.internal.generic.InstructionHandle, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.MethodGen com.sun.org.apache.bcel.internal.generic.LineNumberGen[] getLineNumbers()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.MethodGen com.sun.org.apache.bcel.internal.generic.LocalVariableGen addLocalVariable(java.lang.String, com.sun.org.apache.bcel.internal.generic.Type, int, com.sun.org.apache.bcel.internal.generic.InstructionHandle, com.sun.org.apache.bcel.internal.generic.InstructionHandle) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.MethodGen com.sun.org.apache.bcel.internal.generic.LocalVariableGen addLocalVariable(java.lang.String, com.sun.org.apache.bcel.internal.generic.Type, int, com.sun.org.apache.bcel.internal.generic.InstructionHandle, com.sun.org.apache.bcel.internal.generic.InstructionHandle)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.MethodGen com.sun.org.apache.bcel.internal.generic.MethodGen copy(java.lang.String, com.sun.org.apache.bcel.internal.generic.ConstantPoolGen)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.MethodGen int getMaxStack(com.sun.org.apache.bcel.internal.generic.ConstantPoolGen, com.sun.org.apache.bcel.internal.generic.InstructionList, com.sun.org.apache.bcel.internal.generic.CodeExceptionGen[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.MethodGen int getMaxStack(com.sun.org.apache.bcel.internal.generic.ConstantPoolGen, com.sun.org.apache.bcel.internal.generic.InstructionList, com.sun.org.apache.bcel.internal.generic.CodeExceptionGen[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.MethodGen java.lang.String getSignature()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.MethodGen java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.MethodGen java.lang.String[] getExceptions()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.MethodGen void sort(com.sun.org.apache.bcel.internal.generic.LocalVariableGen[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.MethodGen.BranchStack com.sun.org.apache.bcel.internal.generic.MethodGen.BranchTarget visit(com.sun.org.apache.bcel.internal.generic.InstructionHandle, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.NEW java.lang.Class[] getExceptions()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.NEW void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.NEWARRAY NEWARRAY(com.sun.org.apache.bcel.internal.generic.BasicType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.NEWARRAY com.sun.org.apache.bcel.internal.generic.Type getType()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.NEWARRAY java.lang.Class[] getExceptions()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.NEWARRAY java.lang.String toString(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.NEWARRAY void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.NEWARRAY void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.NEWARRAY void initFromFile(com.sun.org.apache.bcel.internal.util.ByteSequence, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.NOP void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ObjectType ObjectType(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ObjectType boolean accessibleTo(com.sun.org.apache.bcel.internal.generic.ObjectType)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ObjectType boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ObjectType boolean subclassOf(com.sun.org.apache.bcel.internal.generic.ObjectType)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.POP void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.POP2 void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.PUSH PUSH(com.sun.org.apache.bcel.internal.generic.ConstantPoolGen, java.lang.Boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.PUSH PUSH(com.sun.org.apache.bcel.internal.generic.ConstantPoolGen, java.lang.Character) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.PUSH PUSH(com.sun.org.apache.bcel.internal.generic.ConstantPoolGen, java.lang.Number) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.PUSH com.sun.org.apache.bcel.internal.generic.InstructionList getInstructionList()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.PUSH java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.PUTFIELD java.lang.Class[] getExceptions()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.PUTFIELD void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.PUTSTATIC java.lang.Class[] getExceptions()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.PUTSTATIC void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.RET java.lang.String toString(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.RET void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.RET void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.RET void initFromFile(com.sun.org.apache.bcel.internal.util.ByteSequence, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.RETURN void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ReferenceType boolean isAssignmentCompatibleWith(com.sun.org.apache.bcel.internal.generic.Type)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ReferenceType com.sun.org.apache.bcel.internal.generic.ReferenceType firstCommonSuperclass(com.sun.org.apache.bcel.internal.generic.ReferenceType)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ReferenceType com.sun.org.apache.bcel.internal.generic.ReferenceType getFirstCommonSuperclass(com.sun.org.apache.bcel.internal.generic.ReferenceType)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ReturnInstruction java.lang.Class[] getExceptions()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.ReturnaddressType boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.SALOAD void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.SASTORE void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.SIPUSH java.lang.Number getValue()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.SIPUSH java.lang.String toString(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.SIPUSH void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.SIPUSH void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.SIPUSH void initFromFile(com.sun.org.apache.bcel.internal.util.ByteSequence, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.SWAP void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.SWITCH SWITCH(int[], com.sun.org.apache.bcel.internal.generic.InstructionHandle[], com.sun.org.apache.bcel.internal.generic.InstructionHandle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.SWITCH SWITCH(int[], com.sun.org.apache.bcel.internal.generic.InstructionHandle[], com.sun.org.apache.bcel.internal.generic.InstructionHandle) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.SWITCH SWITCH(int[], com.sun.org.apache.bcel.internal.generic.InstructionHandle[], com.sun.org.apache.bcel.internal.generic.InstructionHandle, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.SWITCH SWITCH(int[], com.sun.org.apache.bcel.internal.generic.InstructionHandle[], com.sun.org.apache.bcel.internal.generic.InstructionHandle, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.SWITCH com.sun.org.apache.bcel.internal.generic.InstructionList getInstructionList()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.Select Select(short, int[], com.sun.org.apache.bcel.internal.generic.InstructionHandle[], com.sun.org.apache.bcel.internal.generic.InstructionHandle) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.Select Select(short, int[], com.sun.org.apache.bcel.internal.generic.InstructionHandle[], com.sun.org.apache.bcel.internal.generic.InstructionHandle) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.Select java.lang.String toString(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.Select void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.Select void initFromFile(com.sun.org.apache.bcel.internal.util.ByteSequence, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.StoreInstruction void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.TABLESWITCH TABLESWITCH(int[], com.sun.org.apache.bcel.internal.generic.InstructionHandle[], com.sun.org.apache.bcel.internal.generic.InstructionHandle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.TABLESWITCH TABLESWITCH(int[], com.sun.org.apache.bcel.internal.generic.InstructionHandle[], com.sun.org.apache.bcel.internal.generic.InstructionHandle) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.TABLESWITCH void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.TABLESWITCH void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.TABLESWITCH void initFromFile(com.sun.org.apache.bcel.internal.util.ByteSequence, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.Type com.sun.org.apache.bcel.internal.generic.Type getReturnType(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.Type com.sun.org.apache.bcel.internal.generic.Type getType(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.Type com.sun.org.apache.bcel.internal.generic.Type getType(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.Type com.sun.org.apache.bcel.internal.generic.Type[] getArgumentTypes(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.Type com.sun.org.apache.bcel.internal.generic.Type[] getArgumentTypes(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.Type java.lang.String getMethodSignature(com.sun.org.apache.bcel.internal.generic.Type, com.sun.org.apache.bcel.internal.generic.Type[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.Type java.lang.String getMethodSignature(com.sun.org.apache.bcel.internal.generic.Type, com.sun.org.apache.bcel.internal.generic.Type[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.Type java.lang.String getSignature(java.lang.reflect.Method) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.generic.Type java.lang.String getSignature(java.lang.reflect.Method)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
