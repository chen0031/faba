<root>
  <item name="com.sun.org.apache.xml.internal.utils.CharKey boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.Context2 java.lang.String[] processName(java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.Context2 void declarePrefix(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.Context2 void declarePrefix(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.Context2 void setParent(com.sun.org.apache.xml.internal.utils.Context2) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.DOM2Helper java.lang.String getLocalNameOfNode(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.DOM2Helper java.lang.String getNamespaceOfNode(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.DOM2Helper org.w3c.dom.Element getElementByID(java.lang.String, org.w3c.dom.Document) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.DOM2Helper org.w3c.dom.Node getParentOfNode(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.DOMBuilder void comment(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.DOMBuilder void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.DOMHelper boolean isNamespaceNode(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.DOMHelper boolean isNodeAfterSibling(org.w3c.dom.Node, org.w3c.dom.Node, org.w3c.dom.Node) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.DOMHelper boolean isNodeAfterSibling(org.w3c.dom.Node, org.w3c.dom.Node, org.w3c.dom.Node) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.DOMHelper java.lang.String getExpandedAttributeName(org.w3c.dom.Attr) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.DOMHelper java.lang.String getExpandedElementName(org.w3c.dom.Element) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.DOMHelper java.lang.String getLocalNameOfNode(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.DOMHelper java.lang.String getNamespaceForPrefix(java.lang.String, org.w3c.dom.Element) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.DOMHelper java.lang.String getNamespaceOfNode(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.DOMHelper java.lang.String getNodeData(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.DOMHelper java.lang.String getUniqueID(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.DOMHelper java.lang.String getUnparsedEntityURI(java.lang.String, org.w3c.dom.Document) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.DOMHelper org.w3c.dom.Node getParentOfNode(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.DOMHelper org.w3c.dom.Node getRootNode(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.DOMHelper org.w3c.dom.Node locateAttrParent(org.w3c.dom.Element, org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.DOMHelper org.w3c.dom.Node locateAttrParent(org.w3c.dom.Element, org.w3c.dom.Node) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.DOMHelper short getLevel(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.DOMHelper void getNodeData(org.w3c.dom.Node, com.sun.org.apache.xml.internal.utils.FastStringBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.DefaultErrorHandler DefaultErrorHandler(java.io.PrintStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.DefaultErrorHandler void ensureLocationSet(javax.xml.transform.TransformerException) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.DefaultErrorHandler void error(javax.xml.transform.TransformerException) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.DefaultErrorHandler void fatalError(javax.xml.transform.TransformerException) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.DefaultErrorHandler void printLocation(java.io.PrintStream, javax.xml.transform.TransformerException) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.DefaultErrorHandler void printLocation(java.io.PrintStream, org.xml.sax.SAXParseException) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.DefaultErrorHandler void printLocation(java.io.PrintWriter, java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.DefaultErrorHandler void warning(javax.xml.transform.TransformerException) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.DefaultErrorHandler void warning(org.xml.sax.SAXParseException) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.ElemDesc void setAttr(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.FastStringBuffer FastStringBuffer(com.sun.org.apache.xml.internal.utils.FastStringBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.FastStringBuffer void sendSAXComment(org.xml.sax.ext.LexicalHandler, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.IntStack IntStack(com.sun.org.apache.xml.internal.utils.IntStack) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.IntVector IntVector(com.sun.org.apache.xml.internal.utils.IntVector) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.ListingErrorHandler java.lang.String getSourceLine(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.ListingErrorHandler void error(javax.xml.transform.TransformerException) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.ListingErrorHandler void error(org.xml.sax.SAXParseException) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.ListingErrorHandler void fatalError(javax.xml.transform.TransformerException) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.ListingErrorHandler void fatalError(org.xml.sax.SAXParseException) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.ListingErrorHandler void logExceptionLocation(java.io.PrintWriter, java.lang.Throwable) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.ListingErrorHandler void warning(javax.xml.transform.TransformerException) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.ListingErrorHandler void warning(org.xml.sax.SAXParseException) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.MutableAttrListImpl MutableAttrListImpl(org.xml.sax.Attributes) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.MutableAttrListImpl void addAttributes(org.xml.sax.Attributes) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.NamespaceSupport2 boolean declarePrefix(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.NamespaceSupport2 java.lang.String[] processName(java.lang.String, java.lang.String[], boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.NodeVector void appendNodes(com.sun.org.apache.xml.internal.utils.NodeVector) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.ObjectStack ObjectStack(com.sun.org.apache.xml.internal.utils.ObjectStack) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.ObjectVector ObjectVector(com.sun.org.apache.xml.internal.utils.ObjectVector) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.PrefixResolverDefault java.lang.String getNamespaceForPrefix(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.PrefixResolverDefault java.lang.String getNamespaceForPrefix(java.lang.String, org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.QName QName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.QName QName(java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.QName QName(java.lang.String, com.sun.org.apache.xml.internal.utils.PrefixResolver) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.QName QName(java.lang.String, com.sun.org.apache.xml.internal.utils.PrefixResolver, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.QName QName(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.QName QName(java.lang.String, java.lang.String, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.QName QName(java.lang.String, java.lang.String, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.QName QName(java.lang.String, java.lang.String, java.lang.String, boolean) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.QName QName(java.lang.String, java.util.Stack) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.QName QName(java.lang.String, java.util.Stack, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.QName QName(java.lang.String, org.w3c.dom.Element, com.sun.org.apache.xml.internal.utils.PrefixResolver) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.QName QName(java.lang.String, org.w3c.dom.Element, com.sun.org.apache.xml.internal.utils.PrefixResolver, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.QName boolean isXMLNSDecl(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.QName com.sun.org.apache.xml.internal.utils.QName getQNameFromString(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.QName java.lang.String getLocalPart(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.QName java.lang.String getPrefixFromXMLNSDecl(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.QName java.lang.String getPrefixPart(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.SAXSourceLocator SAXSourceLocator(javax.xml.transform.SourceLocator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.SAXSourceLocator SAXSourceLocator(org.xml.sax.Locator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.SAXSourceLocator SAXSourceLocator(org.xml.sax.SAXParseException) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.SerializableLocatorImpl SerializableLocatorImpl(org.xml.sax.Locator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.StringBufferPool void free(com.sun.org.apache.xml.internal.utils.FastStringBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.StringComparable int compareTo(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.StringComparable int getCaseDiff(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.StringComparable int getCaseDiff(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.StringComparable int[] getFirstCaseDiff(java.lang.String, java.lang.String, java.util.Locale) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.StringComparable int[] getFirstCaseDiff(java.lang.String, java.lang.String, java.util.Locale) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.StylesheetPIHandler void processingInstruction(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.SystemIDResolver java.lang.String getAbsolutePathFromRelativePath(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.SystemIDResolver java.lang.String replaceChars(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.ThreadControllerWrapper void waitThread(java.lang.Thread, java.lang.Runnable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.ThreadControllerWrapper.ThreadController void waitThread(java.lang.Thread, java.lang.Runnable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.TreeWalker void endNode(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.TreeWalker void startNode(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.Trie java.lang.Object get(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.Trie java.lang.Object put(java.lang.String, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.URI URI(com.sun.org.apache.xml.internal.utils.URI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.URI URI(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.URI URI(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.URI URI(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.URI URI(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.URI void initialize(com.sun.org.apache.xml.internal.utils.URI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.URI void initializeAuthority(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.URI void initializePath(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.URI void initializeScheme(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.URI void setScheme(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.WrappedRuntimeException WrappedRuntimeException(java.lang.Exception) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.XML11Char boolean isXML11ValidNCName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.XML11Char boolean isXML11ValidName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.XML11Char boolean isXML11ValidNmtoken(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.XML11Char boolean isXML11ValidQName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.XMLChar boolean isValidNCName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.XMLChar boolean isValidName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.XMLChar boolean isValidNmtoken(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.XMLChar boolean isValidQName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.XMLCharacterRecognizer boolean isWhiteSpace(java.lang.StringBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.XMLReaderManager java.lang.Object getProperty(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.XMLReaderManager void setFeature(java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.XMLReaderManager void setProperty(java.lang.String, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.XMLStringDefault boolean endsWith(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.XMLStringDefault boolean equals(com.sun.org.apache.xml.internal.utils.XMLString) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.XMLStringDefault boolean startsWith(com.sun.org.apache.xml.internal.utils.XMLString) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.XMLStringDefault boolean startsWith(com.sun.org.apache.xml.internal.utils.XMLString, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.XMLStringDefault boolean startsWith(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.XMLStringDefault boolean startsWith(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.XMLStringDefault com.sun.org.apache.xml.internal.utils.XMLString concat(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.XMLStringDefault com.sun.org.apache.xml.internal.utils.XMLString toLowerCase(java.util.Locale) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.XMLStringDefault com.sun.org.apache.xml.internal.utils.XMLString toUpperCase(java.util.Locale) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.XMLStringDefault int compareTo(com.sun.org.apache.xml.internal.utils.XMLString) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.XMLStringDefault int compareToIgnoreCase(com.sun.org.apache.xml.internal.utils.XMLString) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.XMLStringDefault int indexOf(com.sun.org.apache.xml.internal.utils.XMLString) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.XMLStringDefault int indexOf(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.XMLStringDefault int indexOf(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.XMLStringDefault int lastIndexOf(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.XMLStringDefault int lastIndexOf(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.XMLStringFactoryDefault com.sun.org.apache.xml.internal.utils.XMLString newstr(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xml.internal.utils.XMLStringFactoryDefault com.sun.org.apache.xml.internal.utils.XMLString newstr(com.sun.org.apache.xml.internal.utils.FastStringBuffer, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
