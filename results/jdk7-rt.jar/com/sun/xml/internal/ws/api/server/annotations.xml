<root>
  <item name="com.sun.xml.internal.ws.api.server.AbstractServerAsyncTransport com.sun.xml.internal.ws.api.message.Packet decodePacket(java.lang.Object, com.sun.xml.internal.ws.api.pipe.Codec)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;_,null-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.api.server.AbstractServerAsyncTransport com.sun.xml.internal.ws.api.server.AbstractServerAsyncTransport.CodecPool access$000(com.sun.xml.internal.ws.api.server.AbstractServerAsyncTransport) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.api.server.Adapter Adapter(com.sun.xml.internal.ws.api.server.WSEndpoint) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.api.server.Adapter java.lang.Object getSPI(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.api.server.Adapter.Toolkit Toolkit(com.sun.xml.internal.ws.api.server.Adapter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.api.server.Container.1 java.lang.Object getSPI(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.api.server.HttpEndpoint com.sun.xml.internal.ws.api.server.HttpEndpoint create(com.sun.xml.internal.ws.api.server.WSEndpoint)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.api.server.InstanceResolver com.sun.xml.internal.ws.api.server.InstanceResolver createDefault(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.api.server.InstanceResolver com.sun.xml.internal.ws.api.server.InstanceResolver createDefault(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.api.server.InstanceResolver com.sun.xml.internal.ws.api.server.InstanceResolver createDefault(java.lang.Class, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.api.server.InstanceResolver com.sun.xml.internal.ws.api.server.InstanceResolver createDefault(java.lang.Class, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.api.server.InstanceResolver com.sun.xml.internal.ws.api.server.InstanceResolver createFromInstanceResolverAnnotation(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.api.server.InstanceResolver com.sun.xml.internal.ws.api.server.InstanceResolver createSingleton(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.api.server.InstanceResolver com.sun.xml.internal.ws.api.server.Invoker createInvoker()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.api.server.InstanceResolver java.lang.Object createNewInstance(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.api.server.InstanceResolver.1 java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.api.server.MethodUtil java.lang.reflect.InvocationTargetException unwrapException(java.lang.reflect.InvocationTargetException) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.api.server.SDDocumentSource com.sun.xml.internal.ws.api.server.SDDocumentSource create(java.net.URL)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.api.server.SDDocumentSource com.sun.xml.internal.ws.api.server.SDDocumentSource create(java.net.URL, com.sun.xml.internal.stream.buffer.XMLStreamBuffer)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;_,null-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.api.server.SDDocumentSource.1 javax.xml.stream.XMLStreamReader read()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.api.server.SDDocumentSource.1 javax.xml.stream.XMLStreamReader read(javax.xml.stream.XMLInputFactory) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.api.server.SDDocumentSource.1 javax.xml.stream.XMLStreamReader read(javax.xml.stream.XMLInputFactory)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.api.server.SDDocumentSource.2 javax.xml.stream.XMLStreamReader read()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.api.server.SDDocumentSource.2 javax.xml.stream.XMLStreamReader read(javax.xml.stream.XMLInputFactory)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.api.server.ServerPipelineHook com.sun.xml.internal.ws.api.pipe.Pipe createMonitoringPipe(com.sun.xml.internal.ws.api.pipe.ServerPipeAssemblerContext, com.sun.xml.internal.ws.api.pipe.Pipe)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.api.server.ServerPipelineHook com.sun.xml.internal.ws.api.pipe.Pipe createSecurityPipe(com.sun.xml.internal.ws.api.pipe.ServerPipeAssemblerContext, com.sun.xml.internal.ws.api.pipe.Pipe)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.api.server.WSEndpoint com.sun.xml.internal.ws.api.server.WSEndpoint create(java.lang.Class, boolean, com.sun.xml.internal.ws.api.server.Invoker, javax.xml.namespace.QName, javax.xml.namespace.QName, com.sun.xml.internal.ws.api.server.Container, com.sun.xml.internal.ws.api.WSBinding, com.sun.xml.internal.ws.api.server.SDDocumentSource, java.util.Collection, java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.api.server.WSEndpoint com.sun.xml.internal.ws.api.server.WSEndpoint create(java.lang.Class, boolean, com.sun.xml.internal.ws.api.server.Invoker, javax.xml.namespace.QName, javax.xml.namespace.QName, com.sun.xml.internal.ws.api.server.Container, com.sun.xml.internal.ws.api.WSBinding, com.sun.xml.internal.ws.api.server.SDDocumentSource, java.util.Collection, org.xml.sax.EntityResolver) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.api.server.WSEndpoint com.sun.xml.internal.ws.api.server.WSEndpoint create(java.lang.Class, boolean, com.sun.xml.internal.ws.api.server.Invoker, javax.xml.namespace.QName, javax.xml.namespace.QName, com.sun.xml.internal.ws.api.server.Container, com.sun.xml.internal.ws.api.WSBinding, com.sun.xml.internal.ws.api.server.SDDocumentSource, java.util.Collection, org.xml.sax.EntityResolver, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.api.server.WSEndpoint javax.xml.namespace.QName getDefaultPortName(javax.xml.namespace.QName, java.lang.Class) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.api.server.WSEndpoint javax.xml.namespace.QName getDefaultPortName(javax.xml.namespace.QName, java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.api.server.WSEndpoint javax.xml.namespace.QName getDefaultServiceName(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.api.server.WSEndpoint javax.xml.namespace.QName getDefaultServiceName(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
