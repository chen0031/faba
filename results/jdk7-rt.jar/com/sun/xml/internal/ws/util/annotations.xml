<root>
  <item name="com.sun.xml.internal.ws.util.ASCIIUtility byte[] getBytes(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ASCIIUtility byte[] getBytes(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ASCIIUtility int parseInt(byte[], int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ASCIIUtility void copyStream(java.io.InputStream, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ByteArrayBuffer ByteArrayBuffer(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ByteArrayBuffer void write(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ByteArrayDataSource ByteArrayDataSource(byte[], java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.DOMUtil boolean isPrefixDeclared(javax.xml.stream.XMLStreamWriter, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.DOMUtil java.util.List&lt;org.w3c.dom.Element&gt; getChildElements(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.DOMUtil org.w3c.dom.Element getFirstChild(org.w3c.dom.Element, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.DOMUtil org.w3c.dom.Element getFirstElementChild(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.DOMUtil void serializeNode(org.w3c.dom.Element, javax.xml.stream.XMLStreamWriter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.DOMUtil void serializeNode(org.w3c.dom.Element, javax.xml.stream.XMLStreamWriter) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.DOMUtil void writeTagWithAttributes(org.w3c.dom.Element, javax.xml.stream.XMLStreamWriter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.DOMUtil void writeTagWithAttributes(org.w3c.dom.Element, javax.xml.stream.XMLStreamWriter) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.HandlerAnnotationProcessor com.sun.xml.internal.ws.util.HandlerAnnotationInfo buildHandlerInfo(java.lang.Class&lt;?&gt;, javax.xml.namespace.QName, javax.xml.namespace.QName, com.sun.xml.internal.ws.api.WSBinding) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.HandlerAnnotationProcessor java.io.InputStream getFileAsStream(java.lang.Class, javax.jws.HandlerChain) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.HandlerAnnotationProcessor java.io.InputStream getFileAsStream(java.lang.Class, javax.jws.HandlerChain) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.JAXWSUtils java.lang.String escapeSpace(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.JAXWSUtils java.net.URL getFileOrURL(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.NamespaceSupport NamespaceSupport(com.sun.xml.internal.ws.util.NamespaceSupport) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.NamespaceSupport boolean declarePrefix(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.NamespaceSupport.Context void declarePrefix(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.NamespaceSupport.Context void declarePrefix(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.NamespaceSupport.Context void setParent(com.sun.xml.internal.ws.util.NamespaceSupport.Context) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.Pool void recycle(T) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.Pool.TubePool TubePool(com.sun.xml.internal.ws.api.pipe.Tube) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap V get(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap V get(javax.xml.namespace.QName) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap boolean containsKey(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap com.sun.xml.internal.ws.util.QNameMap&lt;V&gt; putAll(com.sun.xml.internal.ws.util.QNameMap&lt;? extends V&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap com.sun.xml.internal.ws.util.QNameMap&lt;V&gt; putAll(java.util.Map&lt;javax.xml.namespace.QName,? extends V&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap com.sun.xml.internal.ws.util.QNameMap.Entry access$400(com.sun.xml.internal.ws.util.QNameMap, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap com.sun.xml.internal.ws.util.QNameMap.Entry access$400(com.sun.xml.internal.ws.util.QNameMap, java.lang.String, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap com.sun.xml.internal.ws.util.QNameMap.Entry&lt;V&gt; getEntry(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap int hash(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap java.util.Iterator access$300(com.sun.xml.internal.ws.util.QNameMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap void put(java.lang.String, java.lang.String, V) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap void put(javax.xml.namespace.QName, V) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap void transfer(com.sun.xml.internal.ws.util.QNameMap.Entry&lt;V&gt;[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap.EntryIterator EntryIterator(com.sun.xml.internal.ws.util.QNameMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap.EntryIterator EntryIterator(com.sun.xml.internal.ws.util.QNameMap, com.sun.xml.internal.ws.util.QNameMap.1) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap.HashIterator HashIterator(com.sun.xml.internal.ws.util.QNameMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap.ValueIterator ValueIterator(com.sun.xml.internal.ws.util.QNameMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap.ValueIterator ValueIterator(com.sun.xml.internal.ws.util.QNameMap, com.sun.xml.internal.ws.util.QNameMap.1) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ReadAllStream.FileStream void readAll(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ReadAllStream.MemoryStream int fill(java.io.InputStream, byte[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ServiceFinder int parseLine(java.lang.Class, java.net.URL, java.io.BufferedReader, int, java.util.List&lt;java.lang.String&gt;, java.util.Set&lt;java.lang.String&gt;) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ServiceFinder void access$100(java.lang.Class, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ServiceFinder void access$300(java.lang.Class, java.lang.String, java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ServiceFinder void fail(java.lang.Class, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ServiceFinder void fail(java.lang.Class, java.lang.String, java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ServiceFinder void fail(java.lang.Class, java.net.URL, int, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.UtilException UtilException(java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.VersionUtil int compare(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.VersionUtil int compare(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.VersionUtil int[] getCanonicalVersion(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
