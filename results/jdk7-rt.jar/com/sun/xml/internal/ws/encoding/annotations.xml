<root>
  <item name="com.sun.xml.internal.ws.encoding.DataSourceStreamingDataHandler void moveTo(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.ImageDataContentHandler java.awt.image.BufferedImage render(java.awt.Image) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.ImageDataContentHandler java.lang.Object getContent(javax.activation.DataSource) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.ImageDataContentHandler void writeTo(java.lang.Object, java.lang.String, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.ImageDataContentHandler void writeTo(java.lang.Object, java.lang.String, java.io.OutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.ImageDataContentHandler void writeTo(java.lang.Object, java.lang.String, java.io.OutputStream) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.MimeCodec MimeCodec(com.sun.xml.internal.ws.encoding.MimeCodec) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.MimeCodec com.sun.xml.internal.ws.api.pipe.ContentType encode(com.sun.xml.internal.ws.api.message.Packet, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.MimeCodec com.sun.xml.internal.ws.api.pipe.ContentType getStaticContentType(com.sun.xml.internal.ws.api.message.Packet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.MimeCodec void writeAsAscii(java.lang.String, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.MimeCodec void writeln(java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.MimeCodec void writeln(java.lang.String, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.MimeCodec void writeln(java.lang.String, java.io.OutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.MimeMultipartParser.PartAttachment void writeTo(javax.xml.soap.SOAPMessage) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.MtomCodec MtomCodec(com.sun.xml.internal.ws.api.SOAPVersion, com.sun.xml.internal.ws.api.pipe.StreamSOAPCodec, com.sun.xml.internal.ws.api.WSBinding, javax.xml.ws.WebServiceFeature) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.MtomCodec com.sun.xml.internal.ws.api.pipe.ContentType encode(com.sun.xml.internal.ws.api.message.Packet, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.MtomCodec java.lang.String access$000(com.sun.xml.internal.ws.encoding.MtomCodec) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.MtomCodec java.lang.String access$100(com.sun.xml.internal.ws.encoding.MtomCodec) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.MtomCodec javax.xml.ws.soap.MTOMFeature access$300(com.sun.xml.internal.ws.encoding.MtomCodec) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.MtomCodec void access$200(com.sun.xml.internal.ws.encoding.MtomCodec, java.lang.String, java.lang.String, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.MtomCodec void access$200(com.sun.xml.internal.ws.encoding.MtomCodec, java.lang.String, java.lang.String, java.io.OutputStream) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.MtomCodec void decode(com.sun.xml.internal.ws.encoding.MimeMultipartParser, com.sun.xml.internal.ws.api.message.Packet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.MtomCodec void decode(com.sun.xml.internal.ws.encoding.MimeMultipartParser, com.sun.xml.internal.ws.api.message.Packet) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.MtomCodec void writeAttachments(com.sun.xml.internal.ws.api.message.AttachmentSet, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.MtomCodec void writeMimeHeaders(java.lang.String, java.lang.String, java.io.OutputStream) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.MtomCodec.ByteArrayBuffer ByteArrayBuffer(com.sun.xml.internal.ws.encoding.MtomCodec, javax.activation.DataHandler) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.MtomCodec.ByteArrayBuffer void write(java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.MtomCodec.MtomStreamWriterImpl java.lang.Object getProperty(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.MtomCodec.MtomStreamWriterImpl java.util.List access$400(com.sun.xml.internal.ws.encoding.MtomCodec.MtomStreamWriterImpl) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.MtomCodec.MtomStreamWriterImpl void writeBinary(com.sun.xml.internal.ws.encoding.MtomCodec.ByteArrayBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.MtomCodec.MtomXMLStreamReaderEx com.sun.xml.internal.ws.api.message.Attachment getAttachment(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.ParameterList java.lang.String get(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.SOAPBindingCodec SOAPBindingCodec(com.sun.xml.internal.ws.api.WSBinding) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.SOAPBindingCodec SOAPBindingCodec(com.sun.xml.internal.ws.api.WSBinding, com.sun.xml.internal.ws.api.pipe.StreamSOAPCodec) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.SOAPBindingCodec SOAPBindingCodec(com.sun.xml.internal.ws.api.WSBinding, com.sun.xml.internal.ws.api.pipe.StreamSOAPCodec) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.SOAPBindingCodec boolean access$000(com.sun.xml.internal.ws.encoding.SOAPBindingCodec) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.SOAPBindingCodec boolean compareStrings(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.SOAPBindingCodec boolean compareStrings(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.SOAPBindingCodec boolean isApplicationXopXml(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.SOAPBindingCodec boolean isMultipartRelated(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.SOAPBindingCodec boolean isXml(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.SOAPBindingCodec java.lang.String access$100(com.sun.xml.internal.ws.encoding.SOAPBindingCodec) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.SOAPBindingCodec java.lang.String access$200(com.sun.xml.internal.ws.encoding.SOAPBindingCodec) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.SOAPBindingCodec void decode(com.sun.xml.internal.ws.encoding.MimeMultipartParser, com.sun.xml.internal.ws.api.message.Packet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.SOAPBindingCodec void decode(java.io.InputStream, java.lang.String, com.sun.xml.internal.ws.api.message.Packet) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.SOAPBindingCodec void decode(java.nio.channels.ReadableByteChannel, java.lang.String, com.sun.xml.internal.ws.api.message.Packet) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.SOAPBindingCodec void decode(java.nio.channels.ReadableByteChannel, java.lang.String, com.sun.xml.internal.ws.api.message.Packet) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.SOAPBindingCodec void preDecode(com.sun.xml.internal.ws.api.message.Packet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.StreamSOAP11Codec com.sun.xml.internal.ws.message.stream.StreamHeader createHeader(javax.xml.stream.XMLStreamReader, com.sun.xml.internal.stream.buffer.XMLStreamBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.StreamSOAP12Codec com.sun.xml.internal.ws.message.stream.StreamHeader createHeader(javax.xml.stream.XMLStreamReader, com.sun.xml.internal.stream.buffer.XMLStreamBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.StreamSOAP12Codec void decode(java.io.InputStream, java.lang.String, com.sun.xml.internal.ws.api.message.Packet, com.sun.xml.internal.ws.api.message.AttachmentSet) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.StreamSOAPCodec StreamSOAPCodec(com.sun.xml.internal.ws.api.SOAPVersion) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.StreamSOAPCodec boolean isContentTypeSupported(java.lang.String, java.util.List&lt;java.lang.String&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.StreamSOAPCodec com.sun.xml.internal.stream.buffer.XMLStreamBuffer cacheHeaders(javax.xml.stream.XMLStreamReader, java.util.Map&lt;java.lang.String,java.lang.String&gt;, com.sun.xml.internal.ws.api.message.HeaderList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.StreamSOAPCodec com.sun.xml.internal.ws.api.message.Message decode(javax.xml.stream.XMLStreamReader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.StreamSOAPCodec com.sun.xml.internal.ws.api.message.Message decode(javax.xml.stream.XMLStreamReader, com.sun.xml.internal.ws.api.message.AttachmentSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.StreamSOAPCodec com.sun.xml.internal.ws.api.pipe.ContentType encode(com.sun.xml.internal.ws.api.message.Packet, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.StreamSOAPCodec com.sun.xml.internal.ws.api.pipe.ContentType getStaticContentType(com.sun.xml.internal.ws.api.message.Packet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.StreamSOAPCodec com.sun.xml.internal.ws.encoding.StreamSOAPCodec create(com.sun.xml.internal.ws.api.SOAPVersion) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.StreamSOAPCodec void decode(java.io.InputStream, java.lang.String, com.sun.xml.internal.ws.api.message.Packet) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.StreamSOAPCodec void decode(java.io.InputStream, java.lang.String, com.sun.xml.internal.ws.api.message.Packet, com.sun.xml.internal.ws.api.message.AttachmentSet) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.StringDataContentHandler java.lang.Object getContent(javax.activation.DataSource) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.StringDataContentHandler java.lang.Object getTransferData(java.awt.datatransfer.DataFlavor, javax.activation.DataSource) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.StringDataContentHandler void writeTo(java.lang.Object, java.lang.String, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.StringDataContentHandler void writeTo(java.lang.Object, java.lang.String, java.io.OutputStream) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.SwACodec SwACodec(com.sun.xml.internal.ws.encoding.SwACodec) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.SwACodec com.sun.xml.internal.ws.api.pipe.ContentType encode(com.sun.xml.internal.ws.api.message.Packet, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.SwACodec com.sun.xml.internal.ws.api.pipe.ContentType getStaticContentType(com.sun.xml.internal.ws.api.message.Packet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.SwACodec void decode(com.sun.xml.internal.ws.encoding.MimeMultipartParser, com.sun.xml.internal.ws.api.message.Packet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.TagInfoset TagInfoset(javax.xml.stream.XMLStreamReader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.TagInfoset void writeEnd(org.xml.sax.ContentHandler) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.TagInfoset void writeStart(javax.xml.stream.XMLStreamWriter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.TagInfoset void writeStart(org.xml.sax.ContentHandler) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.XMLHTTPBindingCodec boolean compareStrings(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.XMLHTTPBindingCodec boolean compareStrings(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.XMLHTTPBindingCodec boolean isApplicationXopXml(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.XMLHTTPBindingCodec boolean isFastInfoset(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.XMLHTTPBindingCodec boolean isMultipartRelated(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.XMLHTTPBindingCodec boolean isXml(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.XMLHTTPBindingCodec com.sun.xml.internal.ws.api.pipe.ContentType encode(com.sun.xml.internal.ws.api.message.Packet, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.XMLHTTPBindingCodec com.sun.xml.internal.ws.api.pipe.ContentType encode(com.sun.xml.internal.ws.encoding.xml.XMLMessage.MessageDataSource, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.XMLHTTPBindingCodec com.sun.xml.internal.ws.api.pipe.ContentType getStaticContentType(com.sun.xml.internal.ws.api.message.Packet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.XMLHTTPBindingCodec com.sun.xml.internal.ws.api.pipe.ContentType getStaticContentType(com.sun.xml.internal.ws.encoding.xml.XMLMessage.MessageDataSource) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.XMLHTTPBindingCodec void decode(java.io.InputStream, java.lang.String, com.sun.xml.internal.ws.api.message.Packet) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.XMLHTTPBindingCodec void setRootCodec(com.sun.xml.internal.ws.api.message.Packet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.XMLHTTPBindingCodec.AcceptContentType com.sun.xml.internal.ws.encoding.XMLHTTPBindingCodec.AcceptContentType set(com.sun.xml.internal.ws.api.message.Packet, com.sun.xml.internal.ws.api.pipe.ContentType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.XmlDataContentHandler boolean isXml(com.sun.xml.internal.ws.encoding.ContentType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.XmlDataContentHandler java.lang.Object getContent(javax.activation.DataSource) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.encoding.XmlDataContentHandler void writeTo(java.lang.Object, java.lang.String, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
