<root>
  <item name="com.sun.xml.internal.ws.policy.privateutil.MethodUtil java.lang.reflect.InvocationTargetException unwrapException(java.lang.reflect.InvocationTargetException) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyLogger PolicyLogger(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyLogger com.sun.xml.internal.ws.policy.privateutil.PolicyLogger getLogger(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.ConfigFile java.lang.String generateFullName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.ConfigFile java.net.URL loadFromContext(java.lang.String, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.Reflection T invoke(java.lang.Object, java.lang.String, java.lang.Class&lt;T&gt;, java.lang.Object...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.Reflection T invoke(java.lang.Object, java.lang.String, java.lang.Class&lt;T&gt;, java.lang.Object...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.Reflection T invoke(java.lang.Object, java.lang.String, java.lang.Class&lt;T&gt;, java.lang.Object...) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.Reflection T invoke(java.lang.Object, java.lang.String, java.lang.Class&lt;T&gt;, java.lang.Object[], java.lang.Class[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.Reflection T invoke(java.lang.Object, java.lang.String, java.lang.Class&lt;T&gt;, java.lang.Object[], java.lang.Class[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.Reflection T invoke(java.lang.Object, java.lang.String, java.lang.Class&lt;T&gt;, java.lang.Object[], java.lang.Class[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.Reflection java.lang.String createExceptionMessage(java.lang.Object, java.lang.Object[], java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.ServiceFinder int parseLine(java.lang.Class, java.net.URL, java.io.BufferedReader, int, java.util.List&lt;java.lang.String&gt;, java.util.Set&lt;java.lang.String&gt;) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.ServiceFinder void access$100(java.lang.Class, java.lang.String, java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.ServiceFinder void fail(java.lang.Class, java.lang.String, java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.ServiceFinder void fail(java.lang.Class, java.net.URL, int, java.lang.String, java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
