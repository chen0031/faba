<root>
  <item name="com.sun.xml.internal.ws.policy.privateutil.MethodUtil java.lang.reflect.InvocationTargetException unwrapException(java.lang.reflect.InvocationTargetException) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyLogger com.sun.xml.internal.ws.policy.privateutil.PolicyLogger getLogger(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyLogger com.sun.xml.internal.ws.policy.privateutil.PolicyLogger getLogger(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyLogger java.lang.String getLoggingSubsystemName()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.ConfigFile java.lang.String generateFullName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.ConfigFile java.lang.String generateFullName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.ConfigFile java.net.URL loadFromContext(java.lang.String, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.Reflection java.lang.Object invoke(java.lang.Object, java.lang.String, java.lang.Class, java.lang.Object[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.Reflection java.lang.Object invoke(java.lang.Object, java.lang.String, java.lang.Class, java.lang.Object[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.Reflection java.lang.Object invoke(java.lang.Object, java.lang.String, java.lang.Class, java.lang.Object[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.Reflection java.lang.Object invoke(java.lang.Object, java.lang.String, java.lang.Class, java.lang.Object[], java.lang.Class[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.Reflection java.lang.Object invoke(java.lang.Object, java.lang.String, java.lang.Class, java.lang.Object[], java.lang.Class[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.Reflection java.lang.Object invoke(java.lang.Object, java.lang.String, java.lang.Class, java.lang.Object[], java.lang.Class[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.Reflection java.lang.String createExceptionMessage(java.lang.Object, java.lang.Object[], java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.Text java.lang.String createIndent(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.ServiceFinder com.sun.xml.internal.ws.policy.privateutil.ServiceFinder find(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.ServiceFinder com.sun.xml.internal.ws.policy.privateutil.ServiceFinder find(java.lang.Class, java.lang.ClassLoader)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;_,null-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.ServiceFinder int parseLine(java.lang.Class, java.net.URL, java.io.BufferedReader, int, java.util.List, java.util.Set) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.ServiceFinder java.util.Iterator iterator()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.ServiceFinder void access$100(java.lang.Class, java.lang.String, java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.ServiceFinder void fail(java.lang.Class, java.lang.String, java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.ServiceFinder void fail(java.lang.Class, java.net.URL, int, java.lang.String, java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
