<root>
  <item name="com.sun.xml.internal.bind.v2.model.core.Adapter Adapter(ClassDeclT, com.sun.xml.internal.bind.v2.model.nav.Navigator&lt;TypeT,ClassDeclT,?,?&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.core.Adapter Adapter(javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter, com.sun.xml.internal.bind.v2.model.annotation.AnnotationReader&lt;TypeT,ClassDeclT,?,?&gt;, com.sun.xml.internal.bind.v2.model.nav.Navigator&lt;TypeT,ClassDeclT,?,?&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.core.Adapter Adapter(javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter, com.sun.xml.internal.bind.v2.model.annotation.AnnotationReader&lt;TypeT,ClassDeclT,?,?&gt;, com.sun.xml.internal.bind.v2.model.nav.Navigator&lt;TypeT,ClassDeclT,?,?&gt;) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.ArrayInfo com.sun.xml.internal.bind.v2.model.core.NonElement&lt;T,C&gt; getItemType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.AttributePropertyInfo com.sun.xml.internal.bind.v2.model.core.Adapter&lt;T,C&gt; getAdapter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.AttributePropertyInfo javax.xml.namespace.QName getXmlName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.BuiltinLeafInfo javax.xml.namespace.QName getTypeName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.ClassInfo C getClazz()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.ClassInfo com.sun.xml.internal.bind.v2.model.core.PropertyInfo&lt;T,C&gt; getProperty(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.ClassInfo com.sun.xml.internal.bind.v2.model.core.PropertyInfo&lt;T,C&gt; getProperty(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.Element com.sun.xml.internal.bind.v2.model.core.ClassInfo&lt;T,C&gt; getScope()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.Element com.sun.xml.internal.bind.v2.model.core.Element&lt;T,C&gt; getSubstitutionHead()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.Element javax.xml.namespace.QName getElementName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.ElementInfo T getContentInMemoryType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.ElementInfo com.sun.xml.internal.bind.v2.model.core.ElementInfo&lt;T,C&gt; getSubstitutionHead()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.ElementInfo com.sun.xml.internal.bind.v2.model.core.ElementPropertyInfo&lt;T,C&gt; getProperty()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.ElementInfo com.sun.xml.internal.bind.v2.model.core.NonElement&lt;T,C&gt; getContentType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.ElementInfo java.util.Collection&lt;? extends com.sun.xml.internal.bind.v2.model.core.ElementInfo&lt;T,C&gt;&gt; getSubstitutionMembers()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.ElementPropertyInfo com.sun.xml.internal.bind.v2.model.core.Adapter&lt;T,C&gt; getAdapter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.ElementPropertyInfo javax.xml.namespace.QName getXmlName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.EnumConstant com.sun.xml.internal.bind.v2.model.core.EnumLeafInfo&lt;T,C&gt; getEnclosingClass()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.EnumConstant java.lang.String getLexicalValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.EnumConstant java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.EnumLeafInfo C getClazz()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.EnumLeafInfo com.sun.xml.internal.bind.v2.model.core.NonElement&lt;T,C&gt; getBaseType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.EnumLeafInfo java.lang.Iterable&lt;? extends com.sun.xml.internal.bind.v2.model.core.EnumConstant&gt; getConstants()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.MapPropertyInfo javax.xml.namespace.QName getXmlName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.MaybeElement com.sun.xml.internal.bind.v2.model.core.Element&lt;T,C&gt; asElement()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.MaybeElement javax.xml.namespace.QName getElementName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.NonElement javax.xml.namespace.QName getTypeName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.NonElementRef com.sun.xml.internal.bind.v2.model.core.PropertyInfo&lt;T,C&gt; getSource()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.PropertyInfo com.sun.xml.internal.bind.v2.model.core.Adapter&lt;T,C&gt; getAdapter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.PropertyInfo com.sun.xml.internal.bind.v2.model.core.ID id()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.PropertyInfo com.sun.xml.internal.bind.v2.model.core.PropertyKind kind()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.PropertyInfo com.sun.xml.internal.bind.v2.model.core.TypeInfo&lt;T,C&gt; parent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.PropertyInfo java.lang.String displayName()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.PropertyInfo javax.activation.MimeType getExpectedMimeType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.PropertyInfo javax.xml.namespace.QName getSchemaType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.core.Ref Ref(com.sun.xml.internal.bind.v2.model.annotation.AnnotationReader&lt;T,C,?,?&gt;, com.sun.xml.internal.bind.v2.model.nav.Navigator&lt;T,C,?,?&gt;, T, javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter, javax.xml.bind.annotation.XmlList) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.core.Ref Ref(com.sun.xml.internal.bind.v2.model.annotation.AnnotationReader&lt;T,C,?,?&gt;, com.sun.xml.internal.bind.v2.model.nav.Navigator&lt;T,C,?,?&gt;, T, javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter, javax.xml.bind.annotation.XmlList) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.core.Ref Ref(com.sun.xml.internal.bind.v2.model.impl.ModelBuilder&lt;T,C,?,?&gt;, T, javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter, javax.xml.bind.annotation.XmlList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.core.Ref Ref(com.sun.xml.internal.bind.v2.model.impl.ModelBuilder&lt;T,C,?,?&gt;, T, javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter, javax.xml.bind.annotation.XmlList) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.core.Ref Ref(com.sun.xml.internal.bind.v2.model.impl.ModelBuilder&lt;T,C,?,?&gt;, T, javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter, javax.xml.bind.annotation.XmlList) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.ReferencePropertyInfo C getDOMHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.ReferencePropertyInfo com.sun.xml.internal.bind.v2.model.core.Adapter&lt;T,C&gt; getAdapter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.ReferencePropertyInfo com.sun.xml.internal.bind.v2.model.core.WildcardMode getWildcard()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.ReferencePropertyInfo javax.xml.namespace.QName getXmlName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.RegistryInfo C getClazz()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.RegistryInfo java.util.Set&lt;com.sun.xml.internal.bind.v2.model.core.TypeInfo&lt;T,C&gt;&gt; getReferences()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.TypeInfoSet com.sun.xml.internal.bind.v2.model.core.ElementInfo&lt;T,C&gt; getElementInfo(C, javax.xml.namespace.QName) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.TypeInfoSet com.sun.xml.internal.bind.v2.model.core.NonElement&lt;T,C&gt; getAnyTypeInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.TypeInfoSet com.sun.xml.internal.bind.v2.model.core.NonElement&lt;T,C&gt; getTypeInfo(T) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.TypeInfoSet com.sun.xml.internal.bind.v2.model.core.NonElement&lt;T,C&gt; getTypeInfo(T)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.TypeInfoSet com.sun.xml.internal.bind.v2.model.core.NonElement&lt;T,C&gt; getTypeInfo(com.sun.xml.internal.bind.v2.model.core.Ref&lt;T,C&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.TypeInfoSet com.sun.xml.internal.bind.v2.model.core.NonElement&lt;T,C&gt; getTypeInfo(com.sun.xml.internal.bind.v2.model.core.Ref&lt;T,C&gt;)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.TypeInfoSet com.sun.xml.internal.bind.v2.model.nav.Navigator&lt;T,C,F,M&gt; getNavigator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.TypeInfoSet java.lang.Iterable&lt;? extends com.sun.xml.internal.bind.v2.model.core.ElementInfo&lt;T,C&gt;&gt; getAllElements()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.TypeInfoSet java.util.Map&lt;? extends T,? extends com.sun.xml.internal.bind.v2.model.core.ArrayInfo&lt;T,C&gt;&gt; arrays()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.TypeInfoSet java.util.Map&lt;C,? extends com.sun.xml.internal.bind.v2.model.core.ClassInfo&lt;T,C&gt;&gt; beans()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.TypeInfoSet java.util.Map&lt;C,? extends com.sun.xml.internal.bind.v2.model.core.EnumLeafInfo&lt;T,C&gt;&gt; enums()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.TypeInfoSet java.util.Map&lt;T,? extends com.sun.xml.internal.bind.v2.model.core.BuiltinLeafInfo&lt;T,C&gt;&gt; builtins()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.TypeInfoSet java.util.Map&lt;java.lang.String,java.lang.String&gt; getSchemaLocations()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.TypeInfoSet javax.xml.bind.annotation.XmlNsForm getAttributeFormDefault(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.TypeInfoSet javax.xml.bind.annotation.XmlNsForm getElementFormDefault(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.TypeRef java.lang.String getDefaultValue()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.TypeRef javax.xml.namespace.QName getTagName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.core.ValuePropertyInfo com.sun.xml.internal.bind.v2.model.core.Adapter&lt;T,C&gt; getAdapter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
</root>
