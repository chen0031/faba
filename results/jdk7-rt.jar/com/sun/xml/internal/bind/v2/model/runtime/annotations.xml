<root>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.runtime.RuntimeArrayInfo com.sun.xml.internal.bind.v2.model.runtime.RuntimeNonElement getItemType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.runtime.RuntimeArrayInfo java.lang.Class getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.runtime.RuntimeClassInfo com.sun.xml.internal.bind.v2.model.runtime.RuntimePropertyInfo getProperty(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.runtime.RuntimeClassInfo com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,org.xml.sax.Locator&gt; getLocatorField()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.runtime.RuntimeClassInfo java.lang.reflect.Method getFactoryMethod()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.runtime.RuntimeElementInfo com.sun.xml.internal.bind.v2.model.runtime.RuntimeClassInfo getScope()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.runtime.RuntimeElementInfo com.sun.xml.internal.bind.v2.model.runtime.RuntimeElementPropertyInfo getProperty()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.runtime.RuntimeElementInfo com.sun.xml.internal.bind.v2.model.runtime.RuntimeNonElement getContentType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.runtime.RuntimeLeafInfo com.sun.xml.internal.bind.v2.runtime.Transducer&lt;V&gt; getTransducer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.runtime.RuntimeLeafInfo java.lang.Class getClazz()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.runtime.RuntimeNonElementRef com.sun.xml.internal.bind.v2.model.runtime.RuntimePropertyInfo getSource()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.runtime.RuntimeTypeInfoSet com.sun.xml.internal.bind.v2.model.nav.ReflectionNavigator getNavigator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.runtime.RuntimeTypeInfoSet com.sun.xml.internal.bind.v2.model.runtime.RuntimeElementInfo getElementInfo(java.lang.Class, javax.xml.namespace.QName) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.runtime.RuntimeTypeInfoSet com.sun.xml.internal.bind.v2.model.runtime.RuntimeNonElement getAnyTypeInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.runtime.RuntimeTypeInfoSet com.sun.xml.internal.bind.v2.model.runtime.RuntimeNonElement getTypeInfo(java.lang.reflect.Type) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.runtime.RuntimeTypeInfoSet java.lang.Iterable&lt;? extends com.sun.xml.internal.bind.v2.model.runtime.RuntimeElementInfo&gt; getAllElements()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.runtime.RuntimeTypeInfoSet java.util.Map&lt;java.lang.Class,? extends com.sun.xml.internal.bind.v2.model.runtime.RuntimeArrayInfo&gt; arrays()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.runtime.RuntimeTypeInfoSet java.util.Map&lt;java.lang.Class,? extends com.sun.xml.internal.bind.v2.model.runtime.RuntimeClassInfo&gt; beans()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.runtime.RuntimeTypeInfoSet java.util.Map&lt;java.lang.Class,? extends com.sun.xml.internal.bind.v2.model.runtime.RuntimeEnumLeafInfo&gt; enums()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.runtime.RuntimeTypeInfoSet java.util.Map&lt;java.lang.reflect.Type,? extends com.sun.xml.internal.bind.v2.model.runtime.RuntimeBuiltinLeafInfo&gt; builtins()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.v2.model.runtime.RuntimeTypeRef com.sun.xml.internal.bind.v2.model.runtime.RuntimePropertyInfo getSource()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
</root>
