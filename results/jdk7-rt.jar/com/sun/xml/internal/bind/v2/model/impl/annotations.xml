<root>
  <item name="com.sun.xml.internal.bind.v2.model.impl.AnyTypeImpl AnyTypeImpl(com.sun.xml.internal.bind.v2.model.nav.Navigator&lt;T,C,?,?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.AnyTypeImpl T getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.AnyTypeImpl boolean canBeReferencedByIDREF()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.AnyTypeImpl boolean isSimpleType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.AnyTypeImpl com.sun.xml.internal.bind.v2.model.annotation.Locatable getUpstream()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.AnyTypeImpl javax.xml.namespace.QName getTypeName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ArrayInfoImpl ArrayInfoImpl(com.sun.xml.internal.bind.v2.model.impl.ModelBuilder&lt;TypeT,ClassDeclT,FieldT,MethodT&gt;, com.sun.xml.internal.bind.v2.model.annotation.Locatable, TypeT) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ArrayInfoImpl TypeT getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ArrayInfoImpl boolean canBeReferencedByIDREF()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ArrayInfoImpl boolean isSimpleType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ArrayInfoImpl com.sun.xml.internal.bind.v2.model.core.NonElement&lt;TypeT,ClassDeclT&gt; getItemType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ArrayInfoImpl com.sun.xml.internal.bind.v2.runtime.Location getLocation()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ArrayInfoImpl javax.xml.namespace.QName calcArrayTypeName(javax.xml.namespace.QName)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ArrayInfoImpl javax.xml.namespace.QName calcArrayTypeName(javax.xml.namespace.QName) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ArrayInfoImpl javax.xml.namespace.QName getTypeName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.AttributePropertyInfoImpl AttributePropertyInfoImpl(com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl&lt;TypeT,ClassDeclT,FieldT,MethodT&gt;, com.sun.xml.internal.bind.v2.model.impl.PropertySeed&lt;TypeT,ClassDeclT,FieldT,MethodT&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.AttributePropertyInfoImpl AttributePropertyInfoImpl(com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl&lt;TypeT,ClassDeclT,FieldT,MethodT&gt;, com.sun.xml.internal.bind.v2.model.impl.PropertySeed&lt;TypeT,ClassDeclT,FieldT,MethodT&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.AttributePropertyInfoImpl boolean isRequired()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.AttributePropertyInfoImpl com.sun.xml.internal.bind.v2.model.core.PropertyKind kind()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.AttributePropertyInfoImpl javax.xml.namespace.QName calcXmlName(javax.xml.bind.annotation.XmlAttribute)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.AttributePropertyInfoImpl javax.xml.namespace.QName calcXmlName(javax.xml.bind.annotation.XmlAttribute) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.AttributePropertyInfoImpl javax.xml.namespace.QName getXmlName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.BuiltinLeafInfoImpl BuiltinLeafInfoImpl(TypeT, javax.xml.namespace.QName...)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.BuiltinLeafInfoImpl BuiltinLeafInfoImpl(TypeT, javax.xml.namespace.QName...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.BuiltinLeafInfoImpl boolean isElement()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.BuiltinLeafInfoImpl com.sun.xml.internal.bind.v2.model.core.Element&lt;TypeT,ClassDeclT&gt; asElement()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.BuiltinLeafInfoImpl javax.xml.namespace.QName getElementName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.BuiltinLeafInfoImpl javax.xml.namespace.QName[] getTypeNames()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl C getClazz()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl ClassInfoImpl(com.sun.xml.internal.bind.v2.model.impl.ModelBuilder&lt;T,C,F,M&gt;, com.sun.xml.internal.bind.v2.model.annotation.Locatable, C) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl T pickOne(T...)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl T pickOne(T...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl boolean declaresAttributeWildcard()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl boolean hasFactoryConstructor(javax.xml.bind.annotation.XmlType)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl boolean hasFactoryConstructor(javax.xml.bind.annotation.XmlType) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl boolean hasJAXBAnnotation(java.lang.annotation.Annotation[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl boolean hasSubClasses()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl boolean isConsideredPublic(M)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl boolean isConsideredPublic(M) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl boolean isElement()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl boolean isJAXBAnnotation(java.lang.annotation.Annotation) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl boolean isOrdered()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl boolean shouldRecurseSuperClass(C)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl boolean shouldRecurseSuperClass(C) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl com.sun.xml.internal.bind.v2.model.core.Element&lt;T,C&gt; asElement()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl com.sun.xml.internal.bind.v2.model.core.PropertyInfo&lt;T,C&gt; getProperty(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl com.sun.xml.internal.bind.v2.model.core.PropertyInfo&lt;T,C&gt; getProperty(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl com.sun.xml.internal.bind.v2.model.impl.AttributePropertyInfoImpl&lt;T,C,F,M&gt; createAttributeProperty(com.sun.xml.internal.bind.v2.model.impl.PropertySeed&lt;T,C,F,M&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl com.sun.xml.internal.bind.v2.model.impl.AttributePropertyInfoImpl&lt;T,C,F,M&gt; createAttributeProperty(com.sun.xml.internal.bind.v2.model.impl.PropertySeed&lt;T,C,F,M&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl&lt;T,C,F,M&gt; getScope()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl com.sun.xml.internal.bind.v2.model.impl.ElementPropertyInfoImpl&lt;T,C,F,M&gt; createElementProperty(com.sun.xml.internal.bind.v2.model.impl.PropertySeed&lt;T,C,F,M&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl com.sun.xml.internal.bind.v2.model.impl.MapPropertyInfoImpl&lt;T,C,F,M&gt; createMapProperty(com.sun.xml.internal.bind.v2.model.impl.PropertySeed&lt;T,C,F,M&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl com.sun.xml.internal.bind.v2.model.impl.MapPropertyInfoImpl&lt;T,C,F,M&gt; createMapProperty(com.sun.xml.internal.bind.v2.model.impl.PropertySeed&lt;T,C,F,M&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl com.sun.xml.internal.bind.v2.model.impl.PropertySeed&lt;T,C,F,M&gt; createAccessorSeed(M, M)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl com.sun.xml.internal.bind.v2.model.impl.PropertySeed&lt;T,C,F,M&gt; createFieldSeed(F)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl com.sun.xml.internal.bind.v2.model.impl.PropertySeed&lt;T,C,F,M&gt; getInheritedAttributeWildcard()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl com.sun.xml.internal.bind.v2.model.impl.ReferencePropertyInfoImpl&lt;T,C,F,M&gt; createReferenceProperty(com.sun.xml.internal.bind.v2.model.impl.PropertySeed&lt;T,C,F,M&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl com.sun.xml.internal.bind.v2.model.impl.ReferencePropertyInfoImpl&lt;T,C,F,M&gt; createReferenceProperty(com.sun.xml.internal.bind.v2.model.impl.PropertySeed&lt;T,C,F,M&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl com.sun.xml.internal.bind.v2.model.impl.ValuePropertyInfoImpl&lt;T,C,F,M&gt; createValueProperty(com.sun.xml.internal.bind.v2.model.impl.PropertySeed&lt;T,C,F,M&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl java.lang.String getPropertyNameFromGetMethod(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl java.lang.String getPropertyNameFromGetMethod(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl java.lang.String getPropertyNameFromSetMethod(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl java.lang.String getPropertyNameFromSetMethod(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl java.lang.annotation.Annotation getSomeJAXBAnnotation(java.lang.annotation.Annotation[])">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl java.lang.annotation.Annotation getSomeJAXBAnnotation(java.lang.annotation.Annotation[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl java.lang.reflect.Method getFactoryMethod()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl java.util.List&lt;T&gt; makeSet(T...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl javax.xml.namespace.QName getElementName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl javax.xml.namespace.QName getTypeName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl void checkConflict(java.lang.annotation.Annotation, java.lang.annotation.Annotation)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl void checkConflict(java.lang.annotation.Annotation, java.lang.annotation.Annotation) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl void checkFieldXmlLocation(F)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl void checkFieldXmlLocation(F) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl void collectGetterSetters(C, java.util.Map&lt;java.lang.String,M&gt;, java.util.Map&lt;java.lang.String,M&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl void findGetterSetterProperties(javax.xml.bind.annotation.XmlAccessType) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl void resurrect(java.util.Map&lt;java.lang.String,M&gt;, java.util.Set&lt;java.lang.String&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl.ConflictException ConflictException(java.util.List&lt;java.lang.annotation.Annotation&gt;)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl.DuplicateException DuplicateException(java.lang.annotation.Annotation, java.lang.annotation.Annotation)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl.PropertyGroup PropertyGroup(boolean...)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl.PropertyGroup PropertyGroup(boolean...) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl.PropertyGroup boolean allows(com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl.SecondaryAnnotation)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl.PropertyGroup boolean allows(com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl.SecondaryAnnotation) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl.PropertySorter PropertySorter(com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl.PropertySorter int checkedGet(com.sun.xml.internal.bind.v2.model.impl.PropertyInfoImpl) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl.PropertySorter int compare(com.sun.xml.internal.bind.v2.model.impl.PropertyInfoImpl, com.sun.xml.internal.bind.v2.model.impl.PropertyInfoImpl) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl.PropertySorter int compare(com.sun.xml.internal.bind.v2.model.impl.PropertyInfoImpl, com.sun.xml.internal.bind.v2.model.impl.PropertyInfoImpl) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl.SecondaryAnnotation SecondaryAnnotation(int, java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;...)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ERPropertyInfoImpl ERPropertyInfoImpl(com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl&lt;TypeT,ClassDeclT,FieldT,MethodT&gt;, com.sun.xml.internal.bind.v2.model.impl.PropertySeed&lt;TypeT,ClassDeclT,FieldT,MethodT&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ERPropertyInfoImpl boolean isCollectionNillable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ERPropertyInfoImpl boolean isCollectionRequired()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ERPropertyInfoImpl javax.xml.namespace.QName getXmlName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl ElementInfoImpl(com.sun.xml.internal.bind.v2.model.impl.ModelBuilder&lt;T,C,F,M&gt;, com.sun.xml.internal.bind.v2.model.impl.RegistryInfoImpl&lt;T,C,F,M&gt;, M) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl ElementInfoImpl(com.sun.xml.internal.bind.v2.model.impl.ModelBuilder&lt;T,C,F,M&gt;, com.sun.xml.internal.bind.v2.model.impl.RegistryInfoImpl&lt;T,C,F,M&gt;, M) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl T getContentInMemoryType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl T getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl boolean canBeReferencedByIDREF()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl com.sun.xml.internal.bind.v2.model.core.ClassInfo&lt;T,C&gt; getScope()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl com.sun.xml.internal.bind.v2.model.core.ElementInfo&lt;T,C&gt; getSubstitutionHead()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl com.sun.xml.internal.bind.v2.model.core.ElementPropertyInfo&lt;T,C&gt; getProperty()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl com.sun.xml.internal.bind.v2.model.core.NonElement&lt;T,C&gt; getContentType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl&lt;T,C,F,M&gt;.PropertyImpl createPropertyImpl()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl java.util.Collection&lt;? extends com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl&lt;T,C,F,M&gt;&gt; getSubstitutionMembers()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl javax.xml.namespace.QName getElementName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl javax.xml.namespace.QName parseElementName(javax.xml.bind.annotation.XmlElementDecl)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl javax.xml.namespace.QName parseElementName(javax.xml.bind.annotation.XmlElementDecl) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl.PropertyImpl PropertyImpl(com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl.PropertyImpl boolean inlineBinaryData()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl.PropertyImpl boolean isCollection()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl.PropertyImpl boolean isCollectionNillable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl.PropertyImpl boolean isCollectionRequired()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl.PropertyImpl boolean isNillable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl.PropertyImpl boolean isRequired()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl.PropertyImpl boolean isValueList()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl.PropertyImpl com.sun.xml.internal.bind.v2.model.core.Adapter&lt;T,C&gt; getAdapter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl.PropertyImpl com.sun.xml.internal.bind.v2.model.core.ID id()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl.PropertyImpl com.sun.xml.internal.bind.v2.model.core.NonElement&lt;T,C&gt; getTarget()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl.PropertyImpl com.sun.xml.internal.bind.v2.model.core.PropertyInfo&lt;T,C&gt; getSource()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl.PropertyImpl com.sun.xml.internal.bind.v2.model.core.PropertyKind kind()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl.PropertyImpl com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl&lt;T,C,F,M&gt; parent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl.PropertyImpl java.lang.String displayName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl.PropertyImpl java.lang.String getDefaultValue()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl.PropertyImpl java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl.PropertyImpl java.util.List&lt;? extends com.sun.xml.internal.bind.v2.model.core.NonElement&lt;T,C&gt;&gt; ref()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl.PropertyImpl java.util.List&lt;? extends com.sun.xml.internal.bind.v2.model.core.TypeRef&lt;T,C&gt;&gt; getTypes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl.PropertyImpl javax.activation.MimeType getExpectedMimeType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl.PropertyImpl javax.xml.namespace.QName getSchemaType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl.PropertyImpl javax.xml.namespace.QName getTagName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl.PropertyImpl javax.xml.namespace.QName getXmlName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementPropertyInfoImpl ElementPropertyInfoImpl(com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl&lt;TypeT,ClassDeclT,FieldT,MethodT&gt;, com.sun.xml.internal.bind.v2.model.impl.PropertySeed&lt;TypeT,ClassDeclT,FieldT,MethodT&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementPropertyInfoImpl boolean isValueList()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementPropertyInfoImpl com.sun.xml.internal.bind.v2.model.core.PropertyKind kind()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementPropertyInfoImpl com.sun.xml.internal.bind.v2.model.impl.TypeRefImpl&lt;TypeT,ClassDeclT&gt; createTypeRef(javax.xml.namespace.QName, TypeT, boolean, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementPropertyInfoImpl java.lang.String getDefaultValue(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementPropertyInfoImpl java.lang.String getDefaultValue(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ElementPropertyInfoImpl java.util.List&lt;? extends com.sun.xml.internal.bind.v2.model.core.TypeInfo&lt;TypeT,ClassDeclT&gt;&gt; ref()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.EnumConstantImpl EnumConstantImpl(com.sun.xml.internal.bind.v2.model.impl.EnumLeafInfoImpl&lt;T,C,F,M&gt;, java.lang.String, java.lang.String, com.sun.xml.internal.bind.v2.model.impl.EnumConstantImpl&lt;T,C,F,M&gt;)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.EnumConstantImpl com.sun.xml.internal.bind.v2.model.core.EnumLeafInfo&lt;T,C&gt; getEnclosingClass()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.EnumConstantImpl java.lang.String getLexicalValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.EnumConstantImpl java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.EnumLeafInfoImpl C getClazz()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.EnumLeafInfoImpl EnumLeafInfoImpl(com.sun.xml.internal.bind.v2.model.impl.ModelBuilder&lt;T,C,F,M&gt;, com.sun.xml.internal.bind.v2.model.annotation.Locatable, C, T) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.EnumLeafInfoImpl T getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.EnumLeafInfoImpl boolean canBeReferencedByIDREF()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.EnumLeafInfoImpl boolean isElement()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.EnumLeafInfoImpl boolean isSimpleType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.EnumLeafInfoImpl boolean isToken()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.EnumLeafInfoImpl com.sun.xml.internal.bind.v2.model.core.ClassInfo&lt;T,C&gt; getScope()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.EnumLeafInfoImpl com.sun.xml.internal.bind.v2.model.core.Element&lt;T,C&gt; asElement()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.EnumLeafInfoImpl com.sun.xml.internal.bind.v2.model.core.Element&lt;T,C&gt; getSubstitutionHead()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.EnumLeafInfoImpl com.sun.xml.internal.bind.v2.model.core.NonElement&lt;T,C&gt; getBaseType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.EnumLeafInfoImpl com.sun.xml.internal.bind.v2.model.impl.EnumConstantImpl&lt;T,C,F,M&gt; createEnumConstant(java.lang.String, java.lang.String, F, com.sun.xml.internal.bind.v2.model.impl.EnumConstantImpl&lt;T,C,F,M&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.EnumLeafInfoImpl com.sun.xml.internal.bind.v2.model.impl.EnumConstantImpl&lt;T,C,F,M&gt; createEnumConstant(java.lang.String, java.lang.String, F, com.sun.xml.internal.bind.v2.model.impl.EnumConstantImpl&lt;T,C,F,M&gt;) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.EnumLeafInfoImpl java.lang.Iterable&lt;? extends com.sun.xml.internal.bind.v2.model.impl.EnumConstantImpl&lt;T,C,F,M&gt;&gt; getConstants()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.EnumLeafInfoImpl java.util.Iterator&lt;com.sun.xml.internal.bind.v2.model.impl.EnumConstantImpl&lt;T,C,F,M&gt;&gt; iterator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.EnumLeafInfoImpl javax.xml.namespace.QName getElementName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.EnumLeafInfoImpl javax.xml.namespace.QName getTypeName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.FieldPropertySeed FieldPropertySeed(com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl&lt;TypeT,ClassDeclT,FieldT,MethodT&gt;, FieldT)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.FieldPropertySeed com.sun.xml.internal.bind.v2.model.annotation.Locatable getUpstream()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.GetterSetterPropertySeed GetterSetterPropertySeed(com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl&lt;TypeT,ClassDeclT,FieldT,MethodT&gt;, MethodT, MethodT)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.GetterSetterPropertySeed com.sun.xml.internal.bind.v2.model.annotation.Locatable getUpstream()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.GetterSetterPropertySeed java.lang.String camelize(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.LeafInfoImpl LeafInfoImpl(TypeT, javax.xml.namespace.QName)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.LeafInfoImpl TypeT getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.LeafInfoImpl boolean canBeReferencedByIDREF()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.LeafInfoImpl boolean isSimpleType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.LeafInfoImpl com.sun.xml.internal.bind.v2.model.annotation.Locatable getUpstream()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.LeafInfoImpl com.sun.xml.internal.bind.v2.runtime.Location getLocation()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.LeafInfoImpl javax.xml.namespace.QName getTypeName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.MapPropertyInfoImpl MapPropertyInfoImpl(com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl&lt;T,C,F,M&gt;, com.sun.xml.internal.bind.v2.model.impl.PropertySeed&lt;T,C,F,M&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.MapPropertyInfoImpl MapPropertyInfoImpl(com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl&lt;T,C,F,M&gt;, com.sun.xml.internal.bind.v2.model.impl.PropertySeed&lt;T,C,F,M&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.MapPropertyInfoImpl boolean isCollectionNillable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.MapPropertyInfoImpl com.sun.xml.internal.bind.v2.model.core.PropertyKind kind()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.MapPropertyInfoImpl java.util.Collection&lt;? extends com.sun.xml.internal.bind.v2.model.core.TypeInfo&lt;T,C&gt;&gt; ref()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.MapPropertyInfoImpl javax.xml.namespace.QName getXmlName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.Messages Messages(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ModelBuilder ModelBuilder(com.sun.xml.internal.bind.v2.model.annotation.AnnotationReader&lt;T,C,F,M&gt;, com.sun.xml.internal.bind.v2.model.nav.Navigator&lt;T,C,F,M&gt;, java.util.Map&lt;C,C&gt;, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ModelBuilder ModelBuilder(com.sun.xml.internal.bind.v2.model.annotation.AnnotationReader&lt;T,C,F,M&gt;, com.sun.xml.internal.bind.v2.model.nav.Navigator&lt;T,C,F,M&gt;, java.util.Map&lt;C,C&gt;, java.lang.String) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ModelBuilder com.sun.xml.internal.bind.v2.model.core.NonElement&lt;T,C&gt; getTypeInfo(com.sun.xml.internal.bind.v2.model.core.Ref&lt;T,C&gt;)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ModelBuilder com.sun.xml.internal.bind.v2.model.core.NonElement&lt;T,C&gt; getTypeInfo(com.sun.xml.internal.bind.v2.model.core.Ref&lt;T,C&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ModelBuilder com.sun.xml.internal.bind.v2.model.core.RegistryInfo&lt;T,C&gt; addRegistry(C, com.sun.xml.internal.bind.v2.model.annotation.Locatable)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ModelBuilder com.sun.xml.internal.bind.v2.model.core.TypeInfoSet&lt;T,C,F,M&gt; link()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ModelBuilder com.sun.xml.internal.bind.v2.model.impl.ArrayInfoImpl&lt;T,C,F,M&gt; createArrayInfo(com.sun.xml.internal.bind.v2.model.annotation.Locatable, T)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ModelBuilder com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl&lt;T,C,F,M&gt; createClassInfo(C, com.sun.xml.internal.bind.v2.model.annotation.Locatable)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ModelBuilder com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl&lt;T,C,F,M&gt; createElementInfo(com.sun.xml.internal.bind.v2.model.impl.RegistryInfoImpl&lt;T,C,F,M&gt;, M)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ModelBuilder com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl&lt;T,C,F,M&gt; createElementInfo(com.sun.xml.internal.bind.v2.model.impl.RegistryInfoImpl&lt;T,C,F,M&gt;, M) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ModelBuilder com.sun.xml.internal.bind.v2.model.impl.EnumLeafInfoImpl&lt;T,C,F,M&gt; createEnumLeafInfo(C, com.sun.xml.internal.bind.v2.model.annotation.Locatable)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ModelBuilder com.sun.xml.internal.bind.v2.model.impl.TypeInfoSetImpl&lt;T,C,F,M&gt; createTypeInfoSet()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ModelBuilder void addTypeName(com.sun.xml.internal.bind.v2.model.core.NonElement&lt;T,C&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ModelBuilder void setErrorHandler(com.sun.xml.internal.bind.v2.model.core.ErrorHandler)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.PropertyInfoImpl PropertyInfoImpl(com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl&lt;T,C,F,M&gt;, com.sun.xml.internal.bind.v2.model.impl.PropertySeed&lt;T,C,F,M&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.PropertyInfoImpl boolean inlineBinaryData()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.PropertyInfoImpl boolean isApplicable(javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter, T)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;false;null,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.PropertyInfoImpl boolean isApplicable(javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter, T) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.PropertyInfoImpl boolean isCollection()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.PropertyInfoImpl com.sun.xml.internal.bind.v2.model.annotation.Locatable getUpstream()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.PropertyInfoImpl com.sun.xml.internal.bind.v2.model.core.Adapter&lt;T,C&gt; getAdapter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.PropertyInfoImpl com.sun.xml.internal.bind.v2.model.core.ID id()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.PropertyInfoImpl com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl&lt;T,C,F,M&gt; parent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.PropertyInfoImpl int compareTo(com.sun.xml.internal.bind.v2.model.impl.PropertyInfoImpl) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.PropertyInfoImpl java.lang.String displayName()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.PropertyInfoImpl javax.activation.MimeType getExpectedMimeType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.PropertyInfoImpl javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter getApplicableAdapter(T)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.PropertyInfoImpl javax.xml.namespace.QName calcXmlName(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.PropertyInfoImpl javax.xml.namespace.QName calcXmlName(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.PropertyInfoImpl javax.xml.namespace.QName calcXmlName(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.PropertyInfoImpl javax.xml.namespace.QName calcXmlName(javax.xml.bind.annotation.XmlElement)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.PropertyInfoImpl javax.xml.namespace.QName calcXmlName(javax.xml.bind.annotation.XmlElement) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.PropertyInfoImpl javax.xml.namespace.QName calcXmlName(javax.xml.bind.annotation.XmlElementWrapper)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.PropertyInfoImpl javax.xml.namespace.QName calcXmlName(javax.xml.bind.annotation.XmlElementWrapper) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.PropertyInfoImpl javax.xml.namespace.QName getSchemaType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ReferencePropertyInfoImpl C getDOMHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ReferencePropertyInfoImpl ReferencePropertyInfoImpl(com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl&lt;T,C,F,M&gt;, com.sun.xml.internal.bind.v2.model.impl.PropertySeed&lt;T,C,F,M&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ReferencePropertyInfoImpl ReferencePropertyInfoImpl(com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl&lt;T,C,F,M&gt;, com.sun.xml.internal.bind.v2.model.impl.PropertySeed&lt;T,C,F,M&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ReferencePropertyInfoImpl boolean addGenericElement(com.sun.xml.internal.bind.v2.model.core.ElementInfo&lt;T,C&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;true;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ReferencePropertyInfoImpl boolean addGenericElement(com.sun.xml.internal.bind.v2.model.core.ElementInfo&lt;T,C&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ReferencePropertyInfoImpl boolean addGenericElement(javax.xml.bind.annotation.XmlElementRef) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ReferencePropertyInfoImpl boolean addGenericElement(javax.xml.bind.annotation.XmlElementRef, com.sun.xml.internal.bind.v2.model.impl.ReferencePropertyInfoImpl&lt;T,C,F,M&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;true;_,!null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ReferencePropertyInfoImpl boolean addGenericElement(javax.xml.bind.annotation.XmlElementRef, com.sun.xml.internal.bind.v2.model.impl.ReferencePropertyInfoImpl&lt;T,C,F,M&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ReferencePropertyInfoImpl boolean addGenericElement(javax.xml.bind.annotation.XmlElementRef, com.sun.xml.internal.bind.v2.model.impl.ReferencePropertyInfoImpl&lt;T,C,F,M&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ReferencePropertyInfoImpl boolean isMixed()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ReferencePropertyInfoImpl boolean isRequired(javax.xml.bind.annotation.XmlElementRef)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ReferencePropertyInfoImpl com.sun.xml.internal.bind.v2.model.core.PropertyKind kind()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ReferencePropertyInfoImpl com.sun.xml.internal.bind.v2.model.core.WildcardMode getWildcard()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ReferencePropertyInfoImpl java.lang.String getEffectiveNamespaceFor(javax.xml.bind.annotation.XmlElementRef) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RegistryInfoImpl C getClazz()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RegistryInfoImpl RegistryInfoImpl(com.sun.xml.internal.bind.v2.model.impl.ModelBuilder&lt;T,C,F,M&gt;, com.sun.xml.internal.bind.v2.model.annotation.Locatable, C) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RegistryInfoImpl com.sun.xml.internal.bind.v2.model.annotation.Locatable getUpstream()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RegistryInfoImpl java.util.Set&lt;com.sun.xml.internal.bind.v2.model.core.TypeInfo&lt;T,C&gt;&gt; getReferences()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeAnyTypeImpl com.sun.xml.internal.bind.v2.runtime.Transducer&lt;V&gt; getTransducer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeArrayInfoImpl RuntimeArrayInfoImpl(com.sun.xml.internal.bind.v2.model.impl.RuntimeModelBuilder, com.sun.xml.internal.bind.v2.model.annotation.Locatable, java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeArrayInfoImpl com.sun.xml.internal.bind.v2.model.runtime.RuntimeNonElement getItemType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeArrayInfoImpl com.sun.xml.internal.bind.v2.runtime.Transducer&lt;V&gt; getTransducer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeArrayInfoImpl java.lang.Class getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeAttributePropertyInfoImpl RuntimeAttributePropertyInfoImpl(com.sun.xml.internal.bind.v2.model.impl.RuntimeClassInfoImpl, com.sun.xml.internal.bind.v2.model.impl.PropertySeed&lt;java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Field,java.lang.reflect.Method&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeAttributePropertyInfoImpl RuntimeAttributePropertyInfoImpl(com.sun.xml.internal.bind.v2.model.impl.RuntimeClassInfoImpl, com.sun.xml.internal.bind.v2.model.impl.PropertySeed&lt;java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Field,java.lang.reflect.Method&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeAttributePropertyInfoImpl boolean elementOnlyContent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeAttributePropertyInfoImpl com.sun.xml.internal.bind.v2.model.runtime.RuntimePropertyInfo getSource()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl RuntimeBuiltinLeafInfoImpl(java.lang.Class, javax.xml.namespace.QName...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl boolean isDefault()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl boolean useNamespace()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl byte[] decodeBase64(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl com.sun.xml.internal.bind.v2.runtime.Transducer getTransducer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl javax.xml.namespace.QName createXS(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl javax.xml.namespace.QName createXS(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl javax.xml.namespace.QName getTypeName(T)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="value" val="&quot;!null-&gt;null;null-&gt;null&quot;"/>
      <val name="pure" val="true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl javax.xml.namespace.QName getTypeName(T) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl void declareNamespace(T, com.sun.xml.internal.bind.v2.runtime.XMLSerializer)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl void declareNamespace(T, com.sun.xml.internal.bind.v2.runtime.XMLSerializer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl void declareNamespace(T, com.sun.xml.internal.bind.v2.runtime.XMLSerializer) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl.PcdataImpl PcdataImpl(java.lang.Class, javax.xml.namespace.QName...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl.PcdataImpl void writeLeafElement(com.sun.xml.internal.bind.v2.runtime.XMLSerializer, com.sun.xml.internal.bind.v2.runtime.Name, T, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl.PcdataImpl void writeLeafElement(com.sun.xml.internal.bind.v2.runtime.XMLSerializer, com.sun.xml.internal.bind.v2.runtime.Name, T, java.lang.String) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl.PcdataImpl void writeText(com.sun.xml.internal.bind.v2.runtime.XMLSerializer, T, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl.StringImpl StringImpl(java.lang.Class, javax.xml.namespace.QName...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl.StringImpl void writeLeafElement(com.sun.xml.internal.bind.v2.runtime.XMLSerializer, com.sun.xml.internal.bind.v2.runtime.Name, T, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl.StringImpl void writeLeafElement(com.sun.xml.internal.bind.v2.runtime.XMLSerializer, com.sun.xml.internal.bind.v2.runtime.Name, T, java.lang.String) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl.StringImpl void writeText(com.sun.xml.internal.bind.v2.runtime.XMLSerializer, T, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl.StringImplImpl StringImplImpl(java.lang.Class, javax.xml.namespace.QName[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl.StringImplImpl java.lang.String parse(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl.StringImplImpl java.lang.String print(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="value" val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl.StringImplImpl void writeLeafElement(com.sun.xml.internal.bind.v2.runtime.XMLSerializer, com.sun.xml.internal.bind.v2.runtime.Name, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl.StringImplImpl void writeLeafElement(com.sun.xml.internal.bind.v2.runtime.XMLSerializer, com.sun.xml.internal.bind.v2.runtime.Name, java.lang.String, java.lang.String) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl.StringImplImpl void writeText(com.sun.xml.internal.bind.v2.runtime.XMLSerializer, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl.StringImplImpl void writeText(com.sun.xml.internal.bind.v2.runtime.XMLSerializer, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl.UUIDImpl java.lang.String print(java.util.UUID)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl.UUIDImpl java.lang.String print(java.util.UUID) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl.UUIDImpl java.util.UUID parse(java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeClassInfoImpl RuntimeClassInfoImpl(com.sun.xml.internal.bind.v2.model.impl.RuntimeModelBuilder, com.sun.xml.internal.bind.v2.model.annotation.Locatable, java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeClassInfoImpl com.sun.xml.internal.bind.v2.model.impl.AttributePropertyInfoImpl createAttributeProperty(com.sun.xml.internal.bind.v2.model.impl.PropertySeed&lt;java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Field,java.lang.reflect.Method&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeClassInfoImpl com.sun.xml.internal.bind.v2.model.impl.AttributePropertyInfoImpl createAttributeProperty(com.sun.xml.internal.bind.v2.model.impl.PropertySeed&lt;java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Field,java.lang.reflect.Method&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeClassInfoImpl com.sun.xml.internal.bind.v2.model.impl.ElementPropertyInfoImpl createElementProperty(com.sun.xml.internal.bind.v2.model.impl.PropertySeed&lt;java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Field,java.lang.reflect.Method&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeClassInfoImpl com.sun.xml.internal.bind.v2.model.impl.ElementPropertyInfoImpl createElementProperty(com.sun.xml.internal.bind.v2.model.impl.PropertySeed&lt;java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Field,java.lang.reflect.Method&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeClassInfoImpl com.sun.xml.internal.bind.v2.model.impl.MapPropertyInfoImpl createMapProperty(com.sun.xml.internal.bind.v2.model.impl.PropertySeed&lt;java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Field,java.lang.reflect.Method&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeClassInfoImpl com.sun.xml.internal.bind.v2.model.impl.MapPropertyInfoImpl createMapProperty(com.sun.xml.internal.bind.v2.model.impl.PropertySeed&lt;java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Field,java.lang.reflect.Method&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeClassInfoImpl com.sun.xml.internal.bind.v2.model.impl.ReferencePropertyInfoImpl createReferenceProperty(com.sun.xml.internal.bind.v2.model.impl.PropertySeed&lt;java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Field,java.lang.reflect.Method&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeClassInfoImpl com.sun.xml.internal.bind.v2.model.impl.ReferencePropertyInfoImpl createReferenceProperty(com.sun.xml.internal.bind.v2.model.impl.PropertySeed&lt;java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Field,java.lang.reflect.Method&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeClassInfoImpl com.sun.xml.internal.bind.v2.model.impl.RuntimeClassInfoImpl.RuntimePropertySeed createAccessorSeed(java.lang.reflect.Method, java.lang.reflect.Method)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeClassInfoImpl com.sun.xml.internal.bind.v2.model.impl.RuntimeClassInfoImpl.RuntimePropertySeed createFieldSeed(java.lang.reflect.Field)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeClassInfoImpl com.sun.xml.internal.bind.v2.model.impl.RuntimeClassInfoImpl.RuntimePropertySeed createFieldSeed(java.lang.reflect.Field) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeClassInfoImpl com.sun.xml.internal.bind.v2.model.impl.ValuePropertyInfoImpl createValueProperty(com.sun.xml.internal.bind.v2.model.impl.PropertySeed&lt;java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Field,java.lang.reflect.Method&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeClassInfoImpl com.sun.xml.internal.bind.v2.model.runtime.RuntimePropertyInfo getProperty(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeClassInfoImpl com.sun.xml.internal.bind.v2.runtime.Transducer calcTransducer()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeClassInfoImpl com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;?,java.util.Map&lt;javax.xml.namespace.QName,java.lang.String&gt;&gt; createAttributeWildcardAccessor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeClassInfoImpl com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;?,org.xml.sax.Locator&gt; getLocatorField()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeClassInfoImpl com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;B,java.util.Map&lt;javax.xml.namespace.QName,java.lang.String&gt;&gt; getAttributeWildcard()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeClassInfoImpl java.lang.reflect.Method getFactoryMethod()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeClassInfoImpl.RuntimePropertySeed RuntimePropertySeed(com.sun.xml.internal.bind.v2.model.impl.PropertySeed&lt;java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Field,java.lang.reflect.Method&gt;, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeClassInfoImpl.RuntimePropertySeed com.sun.xml.internal.bind.v2.runtime.reflect.Accessor getAccessor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeClassInfoImpl.TransducerImpl TransducerImpl(java.lang.Class&lt;BeanT&gt;, com.sun.xml.internal.bind.v2.runtime.reflect.TransducedAccessor&lt;BeanT&gt;)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeClassInfoImpl.TransducerImpl boolean isDefault()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeClassInfoImpl.TransducerImpl javax.xml.namespace.QName getTypeName(BeanT)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="value" val="&quot;!null-&gt;null;null-&gt;null&quot;"/>
      <val name="pure" val="true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeClassInfoImpl.TransducerImpl javax.xml.namespace.QName getTypeName(BeanT) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeElementInfoImpl RuntimeElementInfoImpl(com.sun.xml.internal.bind.v2.model.impl.RuntimeModelBuilder, com.sun.xml.internal.bind.v2.model.impl.RegistryInfoImpl, java.lang.reflect.Method) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeElementInfoImpl RuntimeElementInfoImpl(com.sun.xml.internal.bind.v2.model.impl.RuntimeModelBuilder, com.sun.xml.internal.bind.v2.model.impl.RegistryInfoImpl, java.lang.reflect.Method) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeElementInfoImpl com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl&lt;java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Field,java.lang.reflect.Method&gt;.PropertyImpl createPropertyImpl()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeElementInfoImpl com.sun.xml.internal.bind.v2.model.runtime.RuntimeClassInfo getScope()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeElementInfoImpl com.sun.xml.internal.bind.v2.model.runtime.RuntimeElementPropertyInfo getProperty()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeElementInfoImpl com.sun.xml.internal.bind.v2.model.runtime.RuntimeNonElement getContentType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeElementInfoImpl.RuntimePropertyImpl RuntimePropertyImpl(com.sun.xml.internal.bind.v2.model.impl.RuntimeElementInfoImpl)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeElementInfoImpl.RuntimePropertyImpl boolean elementOnlyContent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeElementInfoImpl.RuntimePropertyImpl com.sun.xml.internal.bind.v2.model.runtime.RuntimeNonElement getTarget()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeElementInfoImpl.RuntimePropertyImpl com.sun.xml.internal.bind.v2.model.runtime.RuntimePropertyInfo getSource()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeElementInfoImpl.RuntimePropertyImpl java.lang.reflect.Type getRawType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeElementInfoImpl.RuntimePropertyImpl java.util.List&lt;? extends com.sun.xml.internal.bind.v2.model.runtime.RuntimeNonElement&gt; ref()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeElementInfoImpl.RuntimePropertyImpl java.util.List&lt;? extends com.sun.xml.internal.bind.v2.model.runtime.RuntimeTypeRef&gt; getTypes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeElementPropertyInfoImpl RuntimeElementPropertyInfoImpl(com.sun.xml.internal.bind.v2.model.impl.RuntimeClassInfoImpl, com.sun.xml.internal.bind.v2.model.impl.PropertySeed&lt;java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Field,java.lang.reflect.Method&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeElementPropertyInfoImpl RuntimeElementPropertyInfoImpl(com.sun.xml.internal.bind.v2.model.impl.RuntimeClassInfoImpl, com.sun.xml.internal.bind.v2.model.impl.PropertySeed&lt;java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Field,java.lang.reflect.Method&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeElementPropertyInfoImpl boolean elementOnlyContent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeElementPropertyInfoImpl com.sun.xml.internal.bind.v2.model.impl.RuntimeTypeRefImpl createTypeRef(javax.xml.namespace.QName, java.lang.reflect.Type, boolean, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeElementPropertyInfoImpl com.sun.xml.internal.bind.v2.runtime.reflect.Accessor getAccessor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeElementPropertyInfoImpl java.util.List&lt;? extends com.sun.xml.internal.bind.v2.model.runtime.RuntimeTypeInfo&gt; ref()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeEnumConstantImpl RuntimeEnumConstantImpl(com.sun.xml.internal.bind.v2.model.impl.RuntimeEnumLeafInfoImpl, java.lang.String, java.lang.String, com.sun.xml.internal.bind.v2.model.impl.EnumConstantImpl&lt;java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Field,java.lang.reflect.Method&gt;)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeEnumLeafInfoImpl RuntimeEnumLeafInfoImpl(com.sun.xml.internal.bind.v2.model.impl.RuntimeModelBuilder, com.sun.xml.internal.bind.v2.model.annotation.Locatable, java.lang.Class&lt;T&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeEnumLeafInfoImpl boolean isDefault()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeEnumLeafInfoImpl com.sun.xml.internal.bind.v2.model.impl.RuntimeEnumConstantImpl createEnumConstant(java.lang.String, java.lang.String, java.lang.reflect.Field, com.sun.xml.internal.bind.v2.model.impl.EnumConstantImpl&lt;java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Field,java.lang.reflect.Method&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeEnumLeafInfoImpl com.sun.xml.internal.bind.v2.model.impl.RuntimeEnumConstantImpl createEnumConstant(java.lang.String, java.lang.String, java.lang.reflect.Field, com.sun.xml.internal.bind.v2.model.impl.EnumConstantImpl&lt;java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Field,java.lang.reflect.Method&gt;) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeEnumLeafInfoImpl com.sun.xml.internal.bind.v2.runtime.Transducer&lt;T&gt; getTransducer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeEnumLeafInfoImpl java.lang.Class getClazz()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeEnumLeafInfoImpl javax.xml.namespace.QName getTypeName(T)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="value" val="&quot;!null-&gt;null;null-&gt;null&quot;"/>
      <val name="pure" val="true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeEnumLeafInfoImpl javax.xml.namespace.QName getTypeName(T) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeEnumLeafInfoImpl javax.xml.namespace.QName[] getTypeNames()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeMapPropertyInfoImpl RuntimeMapPropertyInfoImpl(com.sun.xml.internal.bind.v2.model.impl.RuntimeClassInfoImpl, com.sun.xml.internal.bind.v2.model.impl.PropertySeed&lt;java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Field,java.lang.reflect.Method&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeMapPropertyInfoImpl RuntimeMapPropertyInfoImpl(com.sun.xml.internal.bind.v2.model.impl.RuntimeClassInfoImpl, com.sun.xml.internal.bind.v2.model.impl.PropertySeed&lt;java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Field,java.lang.reflect.Method&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeMapPropertyInfoImpl boolean elementOnlyContent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeMapPropertyInfoImpl com.sun.xml.internal.bind.v2.runtime.reflect.Accessor getAccessor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeModelBuilder RuntimeModelBuilder(com.sun.xml.internal.bind.v2.runtime.JAXBContextImpl, com.sun.xml.internal.bind.v2.model.annotation.RuntimeAnnotationReader, java.util.Map&lt;java.lang.Class,java.lang.Class&gt;, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeModelBuilder RuntimeModelBuilder(com.sun.xml.internal.bind.v2.runtime.JAXBContextImpl, com.sun.xml.internal.bind.v2.model.annotation.RuntimeAnnotationReader, java.util.Map&lt;java.lang.Class,java.lang.Class&gt;, java.lang.String) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeModelBuilder com.sun.xml.internal.bind.v2.model.impl.RuntimeArrayInfoImpl createArrayInfo(com.sun.xml.internal.bind.v2.model.annotation.Locatable, java.lang.reflect.Type)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeModelBuilder com.sun.xml.internal.bind.v2.model.impl.RuntimeClassInfoImpl createClassInfo(java.lang.Class, com.sun.xml.internal.bind.v2.model.annotation.Locatable)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeModelBuilder com.sun.xml.internal.bind.v2.model.impl.RuntimeElementInfoImpl createElementInfo(com.sun.xml.internal.bind.v2.model.impl.RegistryInfoImpl&lt;java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Field,java.lang.reflect.Method&gt;, java.lang.reflect.Method)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeModelBuilder com.sun.xml.internal.bind.v2.model.impl.RuntimeElementInfoImpl createElementInfo(com.sun.xml.internal.bind.v2.model.impl.RegistryInfoImpl&lt;java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Field,java.lang.reflect.Method&gt;, java.lang.reflect.Method) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeModelBuilder com.sun.xml.internal.bind.v2.model.impl.RuntimeEnumLeafInfoImpl createEnumLeafInfo(java.lang.Class, com.sun.xml.internal.bind.v2.model.annotation.Locatable)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeModelBuilder com.sun.xml.internal.bind.v2.model.impl.RuntimeTypeInfoSetImpl createTypeInfoSet()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeModelBuilder com.sun.xml.internal.bind.v2.runtime.Transducer createTransducer(com.sun.xml.internal.bind.v2.model.runtime.RuntimeNonElementRef) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeModelBuilder javax.xml.namespace.QName createXSSimpleType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeModelBuilder.IDTransducerImpl IDTransducerImpl(com.sun.xml.internal.bind.v2.runtime.Transducer&lt;ValueT&gt;)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeModelBuilder.IDTransducerImpl ValueT parse(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeReferencePropertyInfoImpl RuntimeReferencePropertyInfoImpl(com.sun.xml.internal.bind.v2.model.impl.RuntimeClassInfoImpl, com.sun.xml.internal.bind.v2.model.impl.PropertySeed&lt;java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Field,java.lang.reflect.Method&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeReferencePropertyInfoImpl RuntimeReferencePropertyInfoImpl(com.sun.xml.internal.bind.v2.model.impl.RuntimeClassInfoImpl, com.sun.xml.internal.bind.v2.model.impl.PropertySeed&lt;java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Field,java.lang.reflect.Method&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeReferencePropertyInfoImpl com.sun.xml.internal.bind.v2.runtime.reflect.Accessor getAccessor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeTypeInfoSetImpl com.sun.xml.internal.bind.v2.model.impl.RuntimeElementInfoImpl getElementInfo(java.lang.Class, javax.xml.namespace.QName) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeTypeInfoSetImpl com.sun.xml.internal.bind.v2.model.runtime.RuntimeNonElement createAnyType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeTypeInfoSetImpl com.sun.xml.internal.bind.v2.model.runtime.RuntimeNonElement getAnyTypeInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeTypeInfoSetImpl java.lang.Iterable&lt;com.sun.xml.internal.bind.v2.model.impl.RuntimeElementInfoImpl&gt; getAllElements()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeTypeInfoSetImpl java.util.Map&lt;java.lang.Class,com.sun.xml.internal.bind.v2.model.impl.RuntimeArrayInfoImpl&gt; arrays()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeTypeInfoSetImpl java.util.Map&lt;java.lang.Class,com.sun.xml.internal.bind.v2.model.impl.RuntimeClassInfoImpl&gt; beans()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeTypeInfoSetImpl java.util.Map&lt;java.lang.Class,com.sun.xml.internal.bind.v2.model.impl.RuntimeEnumLeafInfoImpl&lt;?,?&gt;&gt; enums()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeTypeInfoSetImpl java.util.Map&lt;java.lang.reflect.Type,com.sun.xml.internal.bind.v2.model.impl.RuntimeBuiltinLeafInfoImpl&lt;?&gt;&gt; builtins()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeTypeRefImpl RuntimeTypeRefImpl(com.sun.xml.internal.bind.v2.model.impl.RuntimeElementPropertyInfoImpl, javax.xml.namespace.QName, java.lang.reflect.Type, boolean, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeTypeRefImpl com.sun.xml.internal.bind.v2.model.runtime.RuntimePropertyInfo getSource()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeValuePropertyInfoImpl RuntimeValuePropertyInfoImpl(com.sun.xml.internal.bind.v2.model.impl.RuntimeClassInfoImpl, com.sun.xml.internal.bind.v2.model.impl.PropertySeed&lt;java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Field,java.lang.reflect.Method&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.RuntimeValuePropertyInfoImpl boolean elementOnlyContent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.SingleTypePropertyInfoImpl SingleTypePropertyInfoImpl(com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl&lt;T,C,F,M&gt;, com.sun.xml.internal.bind.v2.model.impl.PropertySeed&lt;T,C,F,M&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.SingleTypePropertyInfoImpl com.sun.xml.internal.bind.v2.model.core.PropertyInfo&lt;T,C&gt; getSource()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.SingleTypePropertyInfoImpl com.sun.xml.internal.bind.v2.runtime.reflect.Accessor getAccessor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.SingleTypePropertyInfoImpl java.util.List&lt;? extends com.sun.xml.internal.bind.v2.model.core.NonElement&lt;T,C&gt;&gt; ref()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.TypeInfoImpl TypeInfoImpl(com.sun.xml.internal.bind.v2.model.impl.ModelBuilder&lt;TypeT,ClassDeclT,FieldT,MethodT&gt;, com.sun.xml.internal.bind.v2.model.annotation.Locatable)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.TypeInfoImpl TypeInfoImpl(com.sun.xml.internal.bind.v2.model.impl.ModelBuilder&lt;TypeT,ClassDeclT,FieldT,MethodT&gt;, com.sun.xml.internal.bind.v2.model.annotation.Locatable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.TypeInfoImpl com.sun.xml.internal.bind.v2.model.annotation.AnnotationReader&lt;TypeT,ClassDeclT,FieldT,MethodT&gt; reader()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.TypeInfoImpl com.sun.xml.internal.bind.v2.model.annotation.Locatable getUpstream()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.TypeInfoImpl com.sun.xml.internal.bind.v2.model.nav.Navigator&lt;TypeT,ClassDeclT,FieldT,MethodT&gt; nav()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.TypeInfoImpl javax.xml.namespace.QName parseElementName(ClassDeclT)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.TypeInfoImpl javax.xml.namespace.QName parseTypeName(ClassDeclT)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.TypeInfoImpl javax.xml.namespace.QName parseTypeName(ClassDeclT, javax.xml.bind.annotation.XmlType)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.TypeInfoImpl javax.xml.namespace.QName parseTypeName(ClassDeclT, javax.xml.bind.annotation.XmlType) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.TypeInfoImpl void link()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.TypeInfoSetImpl com.sun.xml.internal.bind.v2.model.core.NonElement&lt;T,C&gt; createAnyType()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.TypeInfoSetImpl com.sun.xml.internal.bind.v2.model.core.NonElement&lt;T,C&gt; getAnyTypeInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.TypeInfoSetImpl com.sun.xml.internal.bind.v2.model.core.NonElement&lt;T,C&gt; getTypeInfo(T)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.TypeInfoSetImpl com.sun.xml.internal.bind.v2.model.core.NonElement&lt;T,C&gt; getTypeInfo(com.sun.xml.internal.bind.v2.model.core.Ref&lt;T,C&gt;)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.TypeInfoSetImpl com.sun.xml.internal.bind.v2.model.core.NonElement&lt;T,C&gt; getTypeInfo(com.sun.xml.internal.bind.v2.model.core.Ref&lt;T,C&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.TypeInfoSetImpl com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl&lt;T,C,F,M&gt; getElementInfo(C, javax.xml.namespace.QName) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.TypeInfoSetImpl com.sun.xml.internal.bind.v2.model.nav.Navigator&lt;T,C,F,M&gt; getNavigator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.TypeInfoSetImpl java.lang.Iterable&lt;? extends com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl&lt;T,C,F,M&gt;&gt; getAllElements()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.TypeInfoSetImpl java.util.Map&lt;? extends T,? extends com.sun.xml.internal.bind.v2.model.impl.ArrayInfoImpl&lt;T,C,F,M&gt;&gt; arrays()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.TypeInfoSetImpl java.util.Map&lt;C,? extends com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl&lt;T,C,F,M&gt;&gt; beans()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.TypeInfoSetImpl java.util.Map&lt;C,? extends com.sun.xml.internal.bind.v2.model.impl.EnumLeafInfoImpl&lt;T,C,F,M&gt;&gt; enums()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.TypeInfoSetImpl java.util.Map&lt;T,? extends com.sun.xml.internal.bind.v2.model.core.BuiltinLeafInfo&lt;T,C&gt;&gt; builtins()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.TypeInfoSetImpl javax.xml.bind.annotation.XmlNsForm getAttributeFormDefault(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.TypeInfoSetImpl javax.xml.bind.annotation.XmlNsForm getElementFormDefault(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.TypeInfoSetImpl void add(com.sun.xml.internal.bind.v2.model.impl.ArrayInfoImpl&lt;T,C,F,M&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.TypeInfoSetImpl void add(com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl&lt;T,C,F,M&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.TypeInfoSetImpl void add(com.sun.xml.internal.bind.v2.model.impl.ElementInfoImpl&lt;T,C,F,M&gt;, com.sun.xml.internal.bind.v2.model.impl.ModelBuilder&lt;T,C,F,M&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.TypeInfoSetImpl void add(com.sun.xml.internal.bind.v2.model.impl.EnumLeafInfoImpl&lt;T,C,F,M&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.TypeRefImpl TypeRefImpl(com.sun.xml.internal.bind.v2.model.impl.ElementPropertyInfoImpl&lt;TypeT,ClassDeclT,?,?&gt;, javax.xml.namespace.QName, TypeT, boolean, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.TypeRefImpl boolean isNillable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.TypeRefImpl com.sun.xml.internal.bind.v2.model.core.PropertyInfo&lt;TypeT,ClassDeclT&gt; getSource()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.TypeRefImpl java.lang.String getDefaultValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.TypeRefImpl javax.xml.namespace.QName getTagName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.Util Util()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.Util javax.activation.MimeType calcExpectedMediaType(com.sun.xml.internal.bind.v2.model.annotation.AnnotationSource, com.sun.xml.internal.bind.v2.model.impl.ModelBuilder)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.Util javax.activation.MimeType calcExpectedMediaType(com.sun.xml.internal.bind.v2.model.annotation.AnnotationSource, com.sun.xml.internal.bind.v2.model.impl.ModelBuilder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.Util javax.xml.namespace.QName calcSchemaType(com.sun.xml.internal.bind.v2.model.annotation.AnnotationReader&lt;T,C,F,M&gt;, com.sun.xml.internal.bind.v2.model.annotation.AnnotationSource, C, T, com.sun.xml.internal.bind.v2.model.annotation.Locatable)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_,_,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.Util javax.xml.namespace.QName calcSchemaType(com.sun.xml.internal.bind.v2.model.annotation.AnnotationReader&lt;T,C,F,M&gt;, com.sun.xml.internal.bind.v2.model.annotation.AnnotationSource, C, T, com.sun.xml.internal.bind.v2.model.annotation.Locatable) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.Utils Utils()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ValuePropertyInfoImpl ValuePropertyInfoImpl(com.sun.xml.internal.bind.v2.model.impl.ClassInfoImpl&lt;TypeT,ClassDeclT,FieldT,MethodT&gt;, com.sun.xml.internal.bind.v2.model.impl.PropertySeed&lt;TypeT,ClassDeclT,FieldT,MethodT&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.impl.ValuePropertyInfoImpl com.sun.xml.internal.bind.v2.model.core.PropertyKind kind()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
</root>
