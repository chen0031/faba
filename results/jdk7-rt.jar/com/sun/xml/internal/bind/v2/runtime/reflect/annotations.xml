<root>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor boolean access$002(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;false-&gt;false;true-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor com.sun.xml.internal.bind.v2.runtime.reflect.Accessor adapt(com.sun.xml.internal.bind.v2.model.core.Adapter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor com.sun.xml.internal.bind.v2.runtime.reflect.Accessor adapt(com.sun.xml.internal.bind.v2.model.core.Adapter)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor com.sun.xml.internal.bind.v2.runtime.reflect.Accessor adapt(java.lang.Class, java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;_,null-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor com.sun.xml.internal.bind.v2.runtime.reflect.Accessor optimize(com.sun.xml.internal.bind.v2.runtime.JAXBContextImpl)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor.1 java.lang.Object get(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor.2 java.lang.Object get(javax.xml.bind.JAXBElement) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor.2 void set(javax.xml.bind.JAXBElement, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor.FieldReflection FieldReflection(java.lang.reflect.Field) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor.FieldReflection FieldReflection(java.lang.reflect.Field, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor.GetterSetterReflection com.sun.xml.internal.bind.api.AccessorException handleInvocationTargetException(java.lang.reflect.InvocationTargetException) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor.GetterSetterReflection com.sun.xml.internal.bind.api.AccessorException handleInvocationTargetException(java.lang.reflect.InvocationTargetException)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor.GetterSetterReflection void makeAccessible(java.lang.reflect.Method) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor.ReadOnlyFieldReflection ReadOnlyFieldReflection(java.lang.reflect.Field) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor.ReadOnlyFieldReflection ReadOnlyFieldReflection(java.lang.reflect.Field, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor.ReadOnlyFieldReflection com.sun.xml.internal.bind.v2.runtime.reflect.Accessor optimize(com.sun.xml.internal.bind.v2.runtime.JAXBContextImpl)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.AdaptedLister com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator iterator(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.XMLSerializer)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;_,null-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.AdaptedLister javax.xml.bind.annotation.adapters.XmlAdapter access$000(com.sun.xml.internal.bind.v2.runtime.reflect.AdaptedLister) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.DefaultTransducedAccessor void writeLeafElement(com.sun.xml.internal.bind.v2.runtime.XMLSerializer, com.sun.xml.internal.bind.v2.runtime.Name, java.lang.Object, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.DefaultTransducedAccessor void writeText(com.sun.xml.internal.bind.v2.runtime.XMLSerializer, java.lang.Object, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.ListTransducedAccessorImpl void parse(java.lang.Object, java.lang.CharSequence) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.ListTransducedAccessorImpl void processValue(java.lang.Object, java.lang.CharSequence) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister com.sun.xml.internal.bind.v2.runtime.reflect.Lister getArrayLister(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister java.lang.Class getImplClass(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.1 java.lang.Object startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;null;_,!null-&gt;null;_,null-&gt;null;null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.ArrayLister com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator iterator(java.lang.Object[], com.sun.xml.internal.bind.v2.runtime.XMLSerializer)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;_,null-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.ArrayLister com.sun.xml.internal.bind.v2.runtime.reflect.Lister.Pack startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;_,null-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.ArrayLister void addToPack(com.sun.xml.internal.bind.v2.runtime.reflect.Lister.Pack, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.ArrayLister void endPacking(com.sun.xml.internal.bind.v2.runtime.reflect.Lister.Pack, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.ArrayLister void endPacking(com.sun.xml.internal.bind.v2.runtime.reflect.Lister.Pack, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.ArrayLister void reset(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.CollectionLister com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator iterator(java.util.Collection, com.sun.xml.internal.bind.v2.runtime.XMLSerializer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.CollectionLister com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator iterator(java.util.Collection, com.sun.xml.internal.bind.v2.runtime.XMLSerializer)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;_,null-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.CollectionLister java.util.Collection startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.CollectionLister void addToPack(java.util.Collection, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.CollectionLister void endPacking(java.util.Collection, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.CollectionLister void reset(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.IDREFS com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator iterator(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.XMLSerializer)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;_,null-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.IDREFS com.sun.xml.internal.bind.v2.runtime.reflect.Lister access$100(com.sun.xml.internal.bind.v2.runtime.reflect.Lister.IDREFS) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.IDREFS com.sun.xml.internal.bind.v2.runtime.reflect.Lister.IDREFS.Pack startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;_,null-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.IDREFS java.lang.Class access$200(com.sun.xml.internal.bind.v2.runtime.reflect.Lister.IDREFS) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.IDREFS void addToPack(com.sun.xml.internal.bind.v2.runtime.reflect.Lister.IDREFS.Pack, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.NullSafeAccessor NullSafeAccessor(com.sun.xml.internal.bind.v2.runtime.reflect.Accessor, com.sun.xml.internal.bind.v2.runtime.reflect.Lister) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator iterator(boolean[], com.sun.xml.internal.bind.v2.runtime.XMLSerializer)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;_,null-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean.BooleanArrayPack startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;_,null-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean void addToPack(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean.BooleanArrayPack, java.lang.Boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean void endPacking(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean.BooleanArrayPack, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean void endPacking(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean.BooleanArrayPack, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean void reset(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerByte com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator iterator(byte[], com.sun.xml.internal.bind.v2.runtime.XMLSerializer)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;_,null-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerByte com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerByte.ByteArrayPack startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;_,null-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerByte void addToPack(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerByte.ByteArrayPack, java.lang.Byte) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerByte void endPacking(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerByte.ByteArrayPack, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerByte void endPacking(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerByte.ByteArrayPack, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerByte void reset(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator iterator(char[], com.sun.xml.internal.bind.v2.runtime.XMLSerializer)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;_,null-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter.CharacterArrayPack startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;_,null-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter void addToPack(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter.CharacterArrayPack, java.lang.Character) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter void endPacking(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter.CharacterArrayPack, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter void endPacking(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter.CharacterArrayPack, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter void reset(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerDouble com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator iterator(double[], com.sun.xml.internal.bind.v2.runtime.XMLSerializer)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;_,null-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerDouble com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerDouble.DoubleArrayPack startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;_,null-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerDouble void addToPack(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerDouble.DoubleArrayPack, java.lang.Double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerDouble void endPacking(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerDouble.DoubleArrayPack, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerDouble void endPacking(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerDouble.DoubleArrayPack, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerDouble void reset(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerDouble.1 java.lang.Double next()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerFloat com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator iterator(float[], com.sun.xml.internal.bind.v2.runtime.XMLSerializer)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;_,null-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerFloat com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerFloat.FloatArrayPack startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;_,null-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerFloat void addToPack(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerFloat.FloatArrayPack, java.lang.Float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerFloat void endPacking(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerFloat.FloatArrayPack, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerFloat void endPacking(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerFloat.FloatArrayPack, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerFloat void reset(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerFloat.1 java.lang.Float next()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerInteger com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator iterator(int[], com.sun.xml.internal.bind.v2.runtime.XMLSerializer)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;_,null-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerInteger com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerInteger.IntegerArrayPack startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;_,null-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerInteger void addToPack(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerInteger.IntegerArrayPack, java.lang.Integer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerInteger void endPacking(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerInteger.IntegerArrayPack, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerInteger void endPacking(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerInteger.IntegerArrayPack, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerInteger void reset(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerLong com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator iterator(long[], com.sun.xml.internal.bind.v2.runtime.XMLSerializer)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;_,null-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerLong com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerLong.LongArrayPack startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;_,null-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerLong void addToPack(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerLong.LongArrayPack, java.lang.Long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerLong void endPacking(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerLong.LongArrayPack, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerLong void endPacking(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerLong.LongArrayPack, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerLong void reset(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerShort com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator iterator(short[], com.sun.xml.internal.bind.v2.runtime.XMLSerializer)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;_,null-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerShort com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerShort.ShortArrayPack startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;_,null-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerShort void addToPack(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerShort.ShortArrayPack, java.lang.Short) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerShort void endPacking(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerShort.ShortArrayPack, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerShort void endPacking(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerShort.ShortArrayPack, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerShort void reset(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.TransducedAccessor com.sun.xml.internal.bind.v2.runtime.reflect.TransducedAccessor get(com.sun.xml.internal.bind.v2.runtime.JAXBContextImpl, com.sun.xml.internal.bind.v2.model.runtime.RuntimeNonElementRef) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.TransducedAccessor com.sun.xml.internal.bind.v2.runtime.reflect.TransducedAccessor get(com.sun.xml.internal.bind.v2.runtime.JAXBContextImpl, com.sun.xml.internal.bind.v2.model.runtime.RuntimeNonElementRef)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.TransducedAccessor.CompositeContextDependentTransducedAccessorImpl CompositeContextDependentTransducedAccessorImpl(com.sun.xml.internal.bind.v2.runtime.JAXBContextImpl, com.sun.xml.internal.bind.v2.runtime.Transducer, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.TransducedAccessor.CompositeContextDependentTransducedAccessorImpl void writeLeafElement(com.sun.xml.internal.bind.v2.runtime.XMLSerializer, com.sun.xml.internal.bind.v2.runtime.Name, java.lang.Object, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.TransducedAccessor.CompositeTransducedAccessorImpl CompositeTransducedAccessorImpl(com.sun.xml.internal.bind.v2.runtime.JAXBContextImpl, com.sun.xml.internal.bind.v2.runtime.Transducer, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.TransducedAccessor.IDREFTransducedAccessorImpl IDREFTransducedAccessorImpl(com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.TransducedAccessor.IDREFTransducedAccessorImpl void access$000(com.sun.xml.internal.bind.v2.runtime.reflect.TransducedAccessor.IDREFTransducedAccessorImpl, java.lang.Object, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.unmarshaller.UnmarshallingContext) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.TransducedAccessor.IDREFTransducedAccessorImpl void parse(java.lang.Object, java.lang.CharSequence) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
