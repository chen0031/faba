<root>
  <item name="abstract virtual com.sun.xml.internal.bind.AccessorFactory com.sun.xml.internal.bind.v2.runtime.reflect.Accessor createFieldAccessor(java.lang.Class, java.lang.reflect.Field, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.xml.internal.bind.AccessorFactoryImpl com.sun.xml.internal.bind.v2.runtime.reflect.Accessor createFieldAccessor(java.lang.Class, java.lang.reflect.Field, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.AccessorFactoryImpl com.sun.xml.internal.bind.v2.runtime.reflect.Accessor createFieldAccessor(java.lang.Class, java.lang.reflect.Field, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.xml.internal.bind.AccessorFactoryImpl com.sun.xml.internal.bind.v2.runtime.reflect.Accessor createFieldAccessor(java.lang.Class, java.lang.reflect.Field, boolean, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.AccessorFactoryImpl com.sun.xml.internal.bind.v2.runtime.reflect.Accessor createFieldAccessor(java.lang.Class, java.lang.reflect.Field, boolean, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl byte _parseByte(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl byte[] _parseBase64Binary(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl double _parseDouble(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl float _parseFloat(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl int _parseInt(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl int guessLength(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl java.lang.CharSequence removeOptionalPlus(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl java.lang.String _printBase64Binary(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl java.lang.String _printDecimal(java.math.BigDecimal) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl java.lang.String _printInteger(java.math.BigInteger) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl java.lang.String _printQName(javax.xml.namespace.QName, javax.xml.namespace.NamespaceContext) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl java.lang.String _printQName(javax.xml.namespace.QName, javax.xml.namespace.NamespaceContext) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl java.math.BigDecimal _parseDecimal(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl java.math.BigInteger _parseInteger(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl java.util.GregorianCalendar _parseDateTime(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl javax.xml.namespace.QName _parseQName(java.lang.CharSequence, javax.xml.namespace.NamespaceContext) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl javax.xml.namespace.QName _parseQName(java.lang.CharSequence, javax.xml.namespace.NamespaceContext) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl long _parseLong(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl short _parseShort(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl.CalendarFormatter java.lang.String doFormat(java.lang.String, java.util.Calendar) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl.CalendarFormatter void formatDays(java.util.Calendar, java.lang.StringBuilder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl.CalendarFormatter void formatDays(java.util.Calendar, java.lang.StringBuilder) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl.CalendarFormatter void formatHours(java.util.Calendar, java.lang.StringBuilder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl.CalendarFormatter void formatHours(java.util.Calendar, java.lang.StringBuilder) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl.CalendarFormatter void formatMinutes(java.util.Calendar, java.lang.StringBuilder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl.CalendarFormatter void formatMinutes(java.util.Calendar, java.lang.StringBuilder) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl.CalendarFormatter void formatMonth(java.util.Calendar, java.lang.StringBuilder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl.CalendarFormatter void formatMonth(java.util.Calendar, java.lang.StringBuilder) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl.CalendarFormatter void formatSeconds(java.util.Calendar, java.lang.StringBuilder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl.CalendarFormatter void formatSeconds(java.util.Calendar, java.lang.StringBuilder) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl.CalendarFormatter void formatTimeZone(java.util.Calendar, java.lang.StringBuilder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl.CalendarFormatter void formatTwoDigits(int, java.lang.StringBuilder) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl.CalendarFormatter void formatYear(java.util.Calendar, java.lang.StringBuilder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl.CalendarFormatter void formatYear(java.util.Calendar, java.lang.StringBuilder) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.xml.internal.bind.InternalAccessorFactory com.sun.xml.internal.bind.v2.runtime.reflect.Accessor createFieldAccessor(java.lang.Class, java.lang.reflect.Field, boolean, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.WhiteSpaceProcessor boolean isWhiteSpace(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.WhiteSpaceProcessor java.lang.CharSequence collapse(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.WhiteSpaceProcessor java.lang.CharSequence replace(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.WhiteSpaceProcessor java.lang.CharSequence trim(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.WhiteSpaceProcessor java.lang.String collapse(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.WhiteSpaceProcessor java.lang.String replace(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
