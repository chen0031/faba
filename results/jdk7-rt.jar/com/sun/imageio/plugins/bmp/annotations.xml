<root>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader java.awt.image.BufferedImage readEmbedded(int, java.awt.image.BufferedImage, javax.imageio.ImageReadParam) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader void access$100(com.sun.imageio.plugins.bmp.BMPImageReader, float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader void access$200(com.sun.imageio.plugins.bmp.BMPImageReader, java.awt.image.BufferedImage, int, int, int, int, int, int, int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader void access$300(com.sun.imageio.plugins.bmp.BMPImageReader, java.awt.image.BufferedImage) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader void access$400(com.sun.imageio.plugins.bmp.BMPImageReader, java.awt.image.BufferedImage, int, int, int, int, int, int, int, int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader void access$500(com.sun.imageio.plugins.bmp.BMPImageReader, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter boolean canEncodeImage(int, java.awt.image.ColorModel, java.awt.image.SampleModel) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter boolean canEncodeImage(int, java.awt.image.ColorModel, java.awt.image.SampleModel) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter int getPreferredCompressionType(java.awt.image.ColorModel, java.awt.image.SampleModel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter int getPreferredCompressionType(java.awt.image.ColorModel, java.awt.image.SampleModel) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter int getPreferredCompressionType(javax.imageio.ImageTypeSpecifier) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter javax.imageio.metadata.IIOMetadata getDefaultImageMetadata(javax.imageio.ImageTypeSpecifier, javax.imageio.ImageWriteParam) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter void access$100(com.sun.imageio.plugins.bmp.BMPImageWriter, float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter void access$200(com.sun.imageio.plugins.bmp.BMPImageWriter, int, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter void encodeRLE4(byte[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter void encodeRLE8(byte[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter void write(javax.imageio.metadata.IIOMetadata, javax.imageio.IIOImage, javax.imageio.ImageWriteParam) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter void writeEmbedded(javax.imageio.IIOImage, javax.imageio.ImageWriteParam) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter void writeMaskToPalette(int, int, byte[], byte[], byte[], byte[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter void writeMaskToPalette(int, int, byte[], byte[], byte[], byte[]) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter void writeMaskToPalette(int, int, byte[], byte[], byte[], byte[]) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter void writeMaskToPalette(int, int, byte[], byte[], byte[], byte[]) 5">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriterSpi boolean canEncodeImage(javax.imageio.ImageTypeSpecifier) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPMetadata javax.imageio.metadata.IIOMetadataNode addChildNode(javax.imageio.metadata.IIOMetadataNode, java.lang.String, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPMetadata org.w3c.dom.Node getAsTree(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPMetadata void addXYZPoints(javax.imageio.metadata.IIOMetadataNode, java.lang.String, double, double, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
