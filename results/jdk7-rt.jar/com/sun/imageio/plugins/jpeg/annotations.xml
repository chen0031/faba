<root>
  <item name="com.sun.imageio.plugins.jpeg.AdobeMarkerSegment AdobeMarkerSegment(com.sun.imageio.plugins.jpeg.JPEGBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.AdobeMarkerSegment AdobeMarkerSegment(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.AdobeMarkerSegment void updateFromNativeNode(org.w3c.dom.Node, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.AdobeMarkerSegment void updateFromNativeNode(org.w3c.dom.Node, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.AdobeMarkerSegment void write(javax.imageio.stream.ImageOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.AdobeMarkerSegment void write(javax.imageio.stream.ImageOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.AdobeMarkerSegment void writeAdobeSegment(javax.imageio.stream.ImageOutputStream, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.COMMarkerSegment COMMarkerSegment(com.sun.imageio.plugins.jpeg.JPEGBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.COMMarkerSegment COMMarkerSegment(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.COMMarkerSegment void write(javax.imageio.stream.ImageOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.COMMarkerSegment void write(javax.imageio.stream.ImageOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.DHTMarkerSegment DHTMarkerSegment(com.sun.imageio.plugins.jpeg.JPEGBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.DHTMarkerSegment DHTMarkerSegment(javax.imageio.plugins.jpeg.JPEGHuffmanTable[], javax.imageio.plugins.jpeg.JPEGHuffmanTable[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.DHTMarkerSegment DHTMarkerSegment(javax.imageio.plugins.jpeg.JPEGHuffmanTable[], javax.imageio.plugins.jpeg.JPEGHuffmanTable[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.DHTMarkerSegment DHTMarkerSegment(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.DHTMarkerSegment com.sun.imageio.plugins.jpeg.DHTMarkerSegment.Htable getHtableFromNode(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.DHTMarkerSegment com.sun.imageio.plugins.jpeg.DHTMarkerSegment.Htable getHtableFromNode(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.DHTMarkerSegment void addHtable(javax.imageio.plugins.jpeg.JPEGHuffmanTable, boolean, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.DHTMarkerSegment void addHtable(javax.imageio.plugins.jpeg.JPEGHuffmanTable, boolean, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.DHTMarkerSegment.Htable Htable(com.sun.imageio.plugins.jpeg.DHTMarkerSegment, com.sun.imageio.plugins.jpeg.JPEGBuffer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.DHTMarkerSegment.Htable Htable(com.sun.imageio.plugins.jpeg.DHTMarkerSegment, javax.imageio.plugins.jpeg.JPEGHuffmanTable, boolean, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.DHTMarkerSegment.Htable Htable(com.sun.imageio.plugins.jpeg.DHTMarkerSegment, org.w3c.dom.Node) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.DQTMarkerSegment DQTMarkerSegment(com.sun.imageio.plugins.jpeg.JPEGBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.DQTMarkerSegment DQTMarkerSegment(javax.imageio.plugins.jpeg.JPEGQTable[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.DQTMarkerSegment DQTMarkerSegment(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.DQTMarkerSegment com.sun.imageio.plugins.jpeg.DQTMarkerSegment.Qtable getChromaForLuma(com.sun.imageio.plugins.jpeg.DQTMarkerSegment.Qtable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.DQTMarkerSegment com.sun.imageio.plugins.jpeg.DQTMarkerSegment.Qtable getChromaForLuma(com.sun.imageio.plugins.jpeg.DQTMarkerSegment.Qtable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.DQTMarkerSegment com.sun.imageio.plugins.jpeg.DQTMarkerSegment.Qtable getQtableFromNode(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.DQTMarkerSegment com.sun.imageio.plugins.jpeg.DQTMarkerSegment.Qtable getQtableFromNode(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.DQTMarkerSegment.Qtable Qtable(com.sun.imageio.plugins.jpeg.DQTMarkerSegment, com.sun.imageio.plugins.jpeg.JPEGBuffer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.DQTMarkerSegment.Qtable Qtable(com.sun.imageio.plugins.jpeg.DQTMarkerSegment, javax.imageio.plugins.jpeg.JPEGQTable, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.DQTMarkerSegment.Qtable Qtable(com.sun.imageio.plugins.jpeg.DQTMarkerSegment, org.w3c.dom.Node) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.DRIMarkerSegment DRIMarkerSegment(com.sun.imageio.plugins.jpeg.JPEGBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment JFIFMarkerSegment(com.sun.imageio.plugins.jpeg.JPEGBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment JFIFMarkerSegment(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment boolean access$102(com.sun.imageio.plugins.jpeg.JFIFMarkerSegment, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment java.awt.image.BufferedImage expandGrayThumb(java.awt.image.BufferedImage) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.JFIFMarkerSegment java.awt.image.BufferedImage getThumbnail(javax.imageio.stream.ImageInputStream, int, com.sun.imageio.plugins.jpeg.JPEGImageReader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment java.awt.image.BufferedImage getThumbnail(javax.imageio.stream.ImageInputStream, int, com.sun.imageio.plugins.jpeg.JPEGImageReader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment java.awt.image.BufferedImage getThumbnail(javax.imageio.stream.ImageInputStream, int, com.sun.imageio.plugins.jpeg.JPEGImageReader) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.JFIFMarkerSegment java.awt.image.BufferedImage getThumbnail(javax.imageio.stream.ImageInputStream, int, com.sun.imageio.plugins.jpeg.JPEGImageReader) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment void addICC(com.sun.imageio.plugins.jpeg.JPEGBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.JFIFMarkerSegment void addICC(com.sun.imageio.plugins.jpeg.JPEGBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.JFIFMarkerSegment void addICC(java.awt.color.ICC_ColorSpace) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment void addICC(java.awt.color.ICC_ColorSpace) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment void addJFXX(com.sun.imageio.plugins.jpeg.JPEGBuffer, com.sun.imageio.plugins.jpeg.JPEGImageReader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.JFIFMarkerSegment void addJFXX(com.sun.imageio.plugins.jpeg.JPEGBuffer, com.sun.imageio.plugins.jpeg.JPEGImageReader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.JFIFMarkerSegment void updateFromNativeNode(org.w3c.dom.Node, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment void updateFromNativeNode(org.w3c.dom.Node, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.JFIFMarkerSegment void write(javax.imageio.stream.ImageOutputStream, com.sun.imageio.plugins.jpeg.JPEGImageWriter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment void write(javax.imageio.stream.ImageOutputStream, com.sun.imageio.plugins.jpeg.JPEGImageWriter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment void write(javax.imageio.stream.ImageOutputStream, java.awt.image.BufferedImage, com.sun.imageio.plugins.jpeg.JPEGImageWriter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.JFIFMarkerSegment void write(javax.imageio.stream.ImageOutputStream, java.awt.image.BufferedImage, com.sun.imageio.plugins.jpeg.JPEGImageWriter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment void writeICC(java.awt.color.ICC_Profile, javax.imageio.stream.ImageOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment void writeJFXXSegment(int, java.awt.image.BufferedImage, javax.imageio.stream.ImageOutputStream, com.sun.imageio.plugins.jpeg.JPEGImageWriter) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment void writeThumb(javax.imageio.stream.ImageOutputStream, java.awt.image.BufferedImage, com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.JFIFExtensionMarkerSegment, int, boolean, com.sun.imageio.plugins.jpeg.JPEGImageWriter) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment void writeThumbnailData(javax.imageio.stream.ImageOutputStream, int[], com.sun.imageio.plugins.jpeg.JPEGImageWriter) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.JFIFMarkerSegment void writeThumbnailData(javax.imageio.stream.ImageOutputStream, int[], com.sun.imageio.plugins.jpeg.JPEGImageWriter) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.ICCMarkerSegment ICCMarkerSegment(com.sun.imageio.plugins.jpeg.JFIFMarkerSegment, com.sun.imageio.plugins.jpeg.JPEGBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.ICCMarkerSegment ICCMarkerSegment(com.sun.imageio.plugins.jpeg.JFIFMarkerSegment, com.sun.imageio.plugins.jpeg.JPEGBuffer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.ICCMarkerSegment ICCMarkerSegment(com.sun.imageio.plugins.jpeg.JFIFMarkerSegment, java.awt.color.ICC_ColorSpace) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.ICCMarkerSegment boolean addData(com.sun.imageio.plugins.jpeg.JPEGBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.ICCMarkerSegment boolean addData(com.sun.imageio.plugins.jpeg.JPEGBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.JFIFExtensionMarkerSegment JFIFExtensionMarkerSegment(com.sun.imageio.plugins.jpeg.JFIFMarkerSegment, com.sun.imageio.plugins.jpeg.JPEGBuffer, com.sun.imageio.plugins.jpeg.JPEGImageReader) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.JFIFExtensionMarkerSegment JFIFExtensionMarkerSegment(com.sun.imageio.plugins.jpeg.JFIFMarkerSegment, java.awt.image.BufferedImage) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.JFIFExtensionMarkerSegment JFIFExtensionMarkerSegment(com.sun.imageio.plugins.jpeg.JFIFMarkerSegment, org.w3c.dom.Node) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.JFIFExtensionMarkerSegment void write(javax.imageio.stream.ImageOutputStream, com.sun.imageio.plugins.jpeg.JPEGImageWriter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.JFIFExtensionMarkerSegment void write(javax.imageio.stream.ImageOutputStream, com.sun.imageio.plugins.jpeg.JPEGImageWriter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.JFIFThumb JFIFThumb(com.sun.imageio.plugins.jpeg.JFIFMarkerSegment, com.sun.imageio.plugins.jpeg.JPEGBuffer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.JFIFThumb java.awt.image.BufferedImage getThumbnail(javax.imageio.stream.ImageInputStream, com.sun.imageio.plugins.jpeg.JPEGImageReader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.JFIFThumbJPEG JFIFThumbJPEG(com.sun.imageio.plugins.jpeg.JFIFMarkerSegment, com.sun.imageio.plugins.jpeg.JPEGBuffer, int, com.sun.imageio.plugins.jpeg.JPEGImageReader) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.JFIFThumbJPEG JFIFThumbJPEG(com.sun.imageio.plugins.jpeg.JFIFMarkerSegment, java.awt.image.BufferedImage) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.JFIFThumbJPEG JFIFThumbJPEG(com.sun.imageio.plugins.jpeg.JFIFMarkerSegment, org.w3c.dom.Node) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.JFIFThumbJPEG java.awt.image.BufferedImage getThumbnail(javax.imageio.stream.ImageInputStream, com.sun.imageio.plugins.jpeg.JPEGImageReader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.JFIFThumbJPEG java.awt.image.BufferedImage getThumbnail(javax.imageio.stream.ImageInputStream, com.sun.imageio.plugins.jpeg.JPEGImageReader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.JFIFThumbPalette JFIFThumbPalette(com.sun.imageio.plugins.jpeg.JFIFMarkerSegment, com.sun.imageio.plugins.jpeg.JPEGBuffer, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.JFIFThumbPalette JFIFThumbPalette(com.sun.imageio.plugins.jpeg.JFIFMarkerSegment, java.awt.image.BufferedImage) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.JFIFThumbPalette JFIFThumbPalette(com.sun.imageio.plugins.jpeg.JFIFMarkerSegment, org.w3c.dom.Node) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.JFIFThumbPalette java.awt.image.BufferedImage getThumbnail(javax.imageio.stream.ImageInputStream, com.sun.imageio.plugins.jpeg.JPEGImageReader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.JFIFThumbPalette java.awt.image.BufferedImage getThumbnail(javax.imageio.stream.ImageInputStream, com.sun.imageio.plugins.jpeg.JPEGImageReader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.JFIFThumbPalette void write(javax.imageio.stream.ImageOutputStream, com.sun.imageio.plugins.jpeg.JPEGImageWriter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.JFIFThumbPalette void write(javax.imageio.stream.ImageOutputStream, com.sun.imageio.plugins.jpeg.JPEGImageWriter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.JFIFThumbRGB JFIFThumbRGB(com.sun.imageio.plugins.jpeg.JFIFMarkerSegment, com.sun.imageio.plugins.jpeg.JPEGBuffer, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.JFIFThumbRGB JFIFThumbRGB(com.sun.imageio.plugins.jpeg.JFIFMarkerSegment, java.awt.image.BufferedImage) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.JFIFThumbRGB JFIFThumbRGB(com.sun.imageio.plugins.jpeg.JFIFMarkerSegment, org.w3c.dom.Node) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.JFIFThumbRGB java.awt.image.BufferedImage getThumbnail(javax.imageio.stream.ImageInputStream, com.sun.imageio.plugins.jpeg.JPEGImageReader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.JFIFThumbRGB java.awt.image.BufferedImage getThumbnail(javax.imageio.stream.ImageInputStream, com.sun.imageio.plugins.jpeg.JPEGImageReader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.JFIFThumbRGB void write(javax.imageio.stream.ImageOutputStream, com.sun.imageio.plugins.jpeg.JPEGImageWriter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.JFIFThumbRGB void write(javax.imageio.stream.ImageOutputStream, com.sun.imageio.plugins.jpeg.JPEGImageWriter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.JFIFThumbUncompressed JFIFThumbUncompressed(com.sun.imageio.plugins.jpeg.JFIFMarkerSegment, com.sun.imageio.plugins.jpeg.JPEGBuffer, int, int, int, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.JFIFThumbUncompressed JFIFThumbUncompressed(com.sun.imageio.plugins.jpeg.JFIFMarkerSegment, java.awt.image.BufferedImage) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.JFIFThumbUncompressed JFIFThumbUncompressed(com.sun.imageio.plugins.jpeg.JFIFMarkerSegment, org.w3c.dom.Node, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.JFIFThumbUncompressed void readByteBuffer(javax.imageio.stream.ImageInputStream, byte[], com.sun.imageio.plugins.jpeg.JPEGImageReader, float, float) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.JFIFThumbUncompressed void readByteBuffer(javax.imageio.stream.ImageInputStream, byte[], com.sun.imageio.plugins.jpeg.JPEGImageReader, float, float) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.JFIFThumbUncompressed void write(javax.imageio.stream.ImageOutputStream, com.sun.imageio.plugins.jpeg.JPEGImageWriter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.JFIFThumbUncompressed void write(javax.imageio.stream.ImageOutputStream, com.sun.imageio.plugins.jpeg.JPEGImageWriter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEG boolean isJFIFcompliant(javax.imageio.ImageTypeSpecifier, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEG int transformForType(javax.imageio.ImageTypeSpecifier, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGBuffer void readData(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.JPEGBuffer void readData(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGImageMetadataFormat boolean canNodeAppear(java.lang.String, javax.imageio.ImageTypeSpecifier) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.JPEGImageMetadataFormat boolean canNodeAppear(java.lang.String, javax.imageio.ImageTypeSpecifier) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGImageReader java.awt.color.ColorSpace access$200(com.sun.imageio.plugins.jpeg.JPEGImageReader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGImageReader.CallBackLock void access$000(com.sun.imageio.plugins.jpeg.JPEGImageReader.CallBackLock) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGImageReader.CallBackLock void access$100(com.sun.imageio.plugins.jpeg.JPEGImageReader.CallBackLock) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGImageWriter boolean isSubsampled(com.sun.imageio.plugins.jpeg.SOFMarkerSegment.ComponentSpec[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGImageWriter int getDefaultDestCSType(java.awt.image.RenderedImage) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGImageWriter int getDefaultDestCSType(javax.imageio.ImageTypeSpecifier) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGImageWriter int getDestCSType(javax.imageio.ImageTypeSpecifier) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGImageWriter int getSrcCSType(java.awt.image.RenderedImage) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGImageWriter int getSrcCSType(javax.imageio.ImageTypeSpecifier) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGImageWriter int[] collectScans(com.sun.imageio.plugins.jpeg.JPEGMetadata, com.sun.imageio.plugins.jpeg.SOFMarkerSegment) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.JPEGImageWriter javax.imageio.metadata.IIOMetadata convertImageMetadata(javax.imageio.metadata.IIOMetadata, javax.imageio.ImageTypeSpecifier, javax.imageio.ImageWriteParam) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGImageWriter javax.imageio.metadata.IIOMetadata convertImageMetadata(javax.imageio.metadata.IIOMetadata, javax.imageio.ImageTypeSpecifier, javax.imageio.ImageWriteParam) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGImageWriter javax.imageio.metadata.IIOMetadata convertImageMetadataOnThread(javax.imageio.metadata.IIOMetadata, javax.imageio.ImageTypeSpecifier, javax.imageio.ImageWriteParam) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGImageWriter javax.imageio.plugins.jpeg.JPEGHuffmanTable[] collectHTablesFromMetadata(com.sun.imageio.plugins.jpeg.JPEGMetadata, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGImageWriter javax.imageio.plugins.jpeg.JPEGQTable[] collectQTablesFromMetadata(com.sun.imageio.plugins.jpeg.JPEGMetadata) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGImageWriter void write(javax.imageio.metadata.IIOMetadata, javax.imageio.IIOImage, javax.imageio.ImageWriteParam) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.JPEGImageWriter void write(javax.imageio.metadata.IIOMetadata, javax.imageio.IIOImage, javax.imageio.ImageWriteParam) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGImageWriter void writeOnThread(javax.imageio.metadata.IIOMetadata, javax.imageio.IIOImage, javax.imageio.ImageWriteParam) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.JPEGImageWriter void writeToSequence(javax.imageio.IIOImage, javax.imageio.ImageWriteParam) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGImageWriter void writeToSequence(javax.imageio.IIOImage, javax.imageio.ImageWriteParam) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGImageWriter.CallBackLock void access$000(com.sun.imageio.plugins.jpeg.JPEGImageWriter.CallBackLock) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGImageWriter.CallBackLock void access$100(com.sun.imageio.plugins.jpeg.JPEGImageWriter.CallBackLock) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.JPEGImageWriterSpi boolean canEncodeImage(javax.imageio.ImageTypeSpecifier) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGImageWriterSpi boolean canEncodeImage(javax.imageio.ImageTypeSpecifier) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGMetadata boolean wantAlpha(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.JPEGMetadata org.w3c.dom.Node getAsTree(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGMetadata org.w3c.dom.Node getAsTree(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGMetadata void mergeAdobeNode(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGMetadata void mergeDHTNode(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGMetadata void mergeDQTNode(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGMetadata void mergeJFIFsubtree(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGMetadata void mergeNativeTree(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGMetadata void mergeSOFNode(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGMetadata void mergeSOSNode(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGMetadata void mergeSequenceSubtree(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGMetadata void mergeStandardChromaNode(org.w3c.dom.Node, org.w3c.dom.NodeList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGMetadata void mergeStandardTextNode(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGMetadata void mergeStandardTree(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGMetadata void mergeTree(java.lang.String, org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.JPEGMetadata void mergeTree(java.lang.String, org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.JPEGMetadata void mergeTree(java.lang.String, org.w3c.dom.Node) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGMetadata void mergeTree(java.lang.String, org.w3c.dom.Node) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGMetadata void mergeUnknownNode(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.JPEGMetadata void setFromMarkerSequenceNode(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGMetadata void setFromMarkerSequenceNode(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGMetadata void setFromNativeTree(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGMetadata void setFromTree(java.lang.String, org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.JPEGMetadata void setFromTree(java.lang.String, org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.JPEGMetadata void setFromTree(java.lang.String, org.w3c.dom.Node) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGMetadata void setFromTree(java.lang.String, org.w3c.dom.Node) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGMetadataFormat JPEGMetadataFormat(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGMetadataFormat boolean canNodeAppear(java.lang.String, javax.imageio.ImageTypeSpecifier) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.JPEGMetadataFormat boolean canNodeAppear(java.lang.String, javax.imageio.ImageTypeSpecifier) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGMetadataFormat boolean isInSubtree(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.JPEGMetadataFormat boolean isInSubtree(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.JPEGStreamMetadataFormat boolean canNodeAppear(java.lang.String, javax.imageio.ImageTypeSpecifier) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.JPEGStreamMetadataFormat boolean canNodeAppear(java.lang.String, javax.imageio.ImageTypeSpecifier) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.MarkerSegment MarkerSegment(com.sun.imageio.plugins.jpeg.JPEGBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.MarkerSegment MarkerSegment(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.MarkerSegment void loadData(com.sun.imageio.plugins.jpeg.JPEGBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.MarkerSegment void loadData(com.sun.imageio.plugins.jpeg.JPEGBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.MarkerSegment void write(javax.imageio.stream.ImageOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.MarkerSegment void write2bytes(javax.imageio.stream.ImageOutputStream, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.MarkerSegment void writeTag(javax.imageio.stream.ImageOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.MarkerSegment void writeTag(javax.imageio.stream.ImageOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.SOFMarkerSegment SOFMarkerSegment(com.sun.imageio.plugins.jpeg.JPEGBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.SOFMarkerSegment SOFMarkerSegment(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.SOFMarkerSegment void updateFromNativeNode(org.w3c.dom.Node, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.SOFMarkerSegment void updateFromNativeNode(org.w3c.dom.Node, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.SOFMarkerSegment.ComponentSpec ComponentSpec(com.sun.imageio.plugins.jpeg.SOFMarkerSegment, com.sun.imageio.plugins.jpeg.JPEGBuffer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.SOFMarkerSegment.ComponentSpec ComponentSpec(com.sun.imageio.plugins.jpeg.SOFMarkerSegment, org.w3c.dom.Node) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.SOSMarkerSegment SOSMarkerSegment(com.sun.imageio.plugins.jpeg.JPEGBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.SOSMarkerSegment SOSMarkerSegment(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.imageio.plugins.jpeg.SOSMarkerSegment void updateFromNativeNode(org.w3c.dom.Node, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.SOSMarkerSegment void updateFromNativeNode(org.w3c.dom.Node, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.SOSMarkerSegment.ScanComponentSpec ScanComponentSpec(com.sun.imageio.plugins.jpeg.SOSMarkerSegment, com.sun.imageio.plugins.jpeg.JPEGBuffer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.jpeg.SOSMarkerSegment.ScanComponentSpec ScanComponentSpec(com.sun.imageio.plugins.jpeg.SOSMarkerSegment, org.w3c.dom.Node) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
