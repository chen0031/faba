<root>
  <item name="com.sun.beans.TypeResolver java.lang.Class erase(java.lang.reflect.Type) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.beans.TypeResolver java.lang.Class[] erase(java.lang.reflect.Type[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.beans.TypeResolver java.lang.reflect.Type fixGenericArray(java.lang.reflect.Type)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.beans.TypeResolver java.lang.reflect.Type getActualType(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.beans.TypeResolver java.lang.reflect.Type getActualType(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.beans.TypeResolver java.lang.reflect.Type resolve(java.lang.reflect.Type, java.lang.reflect.Type) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.beans.TypeResolver java.lang.reflect.Type resolveInClass(java.lang.Class, java.lang.reflect.Type) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.beans.TypeResolver java.lang.reflect.Type resolveInClass(java.lang.Class, java.lang.reflect.Type) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.beans.TypeResolver java.lang.reflect.Type[] resolve(java.lang.reflect.Type, java.lang.reflect.Type[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.beans.TypeResolver java.lang.reflect.Type[] resolveInClass(java.lang.Class, java.lang.reflect.Type[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.beans.TypeResolver java.lang.reflect.Type[] resolveInClass(java.lang.Class, java.lang.reflect.Type[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.beans.TypeResolver void prepare(java.util.Map, java.lang.reflect.Type) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.beans.WildcardTypeImpl boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.beans.WildcardTypeImpl java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
