<root>
  <item name="com.sun.beans.util.Cache Cache(com.sun.beans.util.Cache.Kind, com.sun.beans.util.Cache.Kind) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.beans.util.Cache Cache(com.sun.beans.util.Cache.Kind, com.sun.beans.util.Cache.Kind) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.beans.util.Cache Cache(com.sun.beans.util.Cache.Kind, com.sun.beans.util.Cache.Kind, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.beans.util.Cache Cache(com.sun.beans.util.Cache.Kind, com.sun.beans.util.Cache.Kind, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.beans.util.Cache V get(K) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.beans.util.Cache V getEntryValue(K, int, com.sun.beans.util.Cache&lt;K,V&gt;.CacheEntry&lt;K,V&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.beans.util.Cache V getEntryValue(K, int, com.sun.beans.util.Cache&lt;K,V&gt;.CacheEntry&lt;K,V&gt;) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.beans.util.Cache com.sun.beans.util.Cache&lt;K,V&gt;.CacheEntry&lt;K,V&gt;[] newTable(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.beans.util.Cache int index(int, java.lang.Object[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.beans.util.Cache int index(int, java.lang.Object[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.beans.util.Cache void remove(K) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.beans.util.Cache void transfer(com.sun.beans.util.Cache&lt;K,V&gt;.CacheEntry&lt;K,V&gt;[], com.sun.beans.util.Cache&lt;K,V&gt;.CacheEntry&lt;K,V&gt;[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.beans.util.Cache.CacheEntry CacheEntry(int, K, V, com.sun.beans.util.Cache&lt;K,V&gt;.CacheEntry&lt;K,V&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.beans.util.Cache.Kind Kind(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.beans.util.Cache.Kind.Soft Soft(java.lang.Object, T, java.lang.ref.ReferenceQueue&lt;? super T&gt;)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.beans.util.Cache.Kind.Soft Soft(java.lang.Object, T, java.lang.ref.ReferenceQueue&lt;? super T&gt;) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.beans.util.Cache.Kind.Soft java.lang.Object getOwner()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.beans.util.Cache.Kind.Soft void removeOwner()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.beans.util.Cache.Kind.Strong Strong(java.lang.Object, T)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.beans.util.Cache.Kind.Strong T getReferent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.beans.util.Cache.Kind.Strong boolean isStale()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.beans.util.Cache.Kind.Strong java.lang.Object getOwner()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.beans.util.Cache.Kind.Strong void removeOwner()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.beans.util.Cache.Kind.Weak Weak(java.lang.Object, T, java.lang.ref.ReferenceQueue&lt;? super T&gt;)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.beans.util.Cache.Kind.Weak Weak(java.lang.Object, T, java.lang.ref.ReferenceQueue&lt;? super T&gt;) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.beans.util.Cache.Kind.Weak java.lang.Object getOwner()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.beans.util.Cache.Kind.Weak void removeOwner()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
</root>
