<root>
  <item name="com.sun.image.codec.jpeg.JPEGCodec JPEGCodec()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.image.codec.jpeg.JPEGCodec com.sun.image.codec.jpeg.JPEGEncodeParam getDefaultJPEGEncodeParam(com.sun.image.codec.jpeg.JPEGDecodeParam) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.image.codec.jpeg.JPEGCodec com.sun.image.codec.jpeg.JPEGEncodeParam getDefaultJPEGEncodeParam(com.sun.image.codec.jpeg.JPEGDecodeParam)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.image.codec.jpeg.JPEGCodec com.sun.image.codec.jpeg.JPEGEncodeParam getDefaultJPEGEncodeParam(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.image.codec.jpeg.JPEGCodec com.sun.image.codec.jpeg.JPEGEncodeParam getDefaultJPEGEncodeParam(java.awt.image.BufferedImage) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.image.codec.jpeg.JPEGCodec com.sun.image.codec.jpeg.JPEGEncodeParam getDefaultJPEGEncodeParam(java.awt.image.BufferedImage)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.image.codec.jpeg.JPEGCodec com.sun.image.codec.jpeg.JPEGEncodeParam getDefaultJPEGEncodeParam(java.awt.image.Raster, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.image.codec.jpeg.JPEGCodec com.sun.image.codec.jpeg.JPEGEncodeParam getDefaultJPEGEncodeParam(java.awt.image.Raster, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.image.codec.jpeg.JPEGCodec com.sun.image.codec.jpeg.JPEGImageDecoder createJPEGDecoder(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.image.codec.jpeg.JPEGCodec com.sun.image.codec.jpeg.JPEGImageDecoder createJPEGDecoder(java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.image.codec.jpeg.JPEGCodec com.sun.image.codec.jpeg.JPEGImageDecoder createJPEGDecoder(java.io.InputStream, com.sun.image.codec.jpeg.JPEGDecodeParam) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.image.codec.jpeg.JPEGCodec com.sun.image.codec.jpeg.JPEGImageDecoder createJPEGDecoder(java.io.InputStream, com.sun.image.codec.jpeg.JPEGDecodeParam) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.image.codec.jpeg.JPEGCodec com.sun.image.codec.jpeg.JPEGImageDecoder createJPEGDecoder(java.io.InputStream, com.sun.image.codec.jpeg.JPEGDecodeParam)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.image.codec.jpeg.JPEGCodec com.sun.image.codec.jpeg.JPEGImageEncoder createJPEGEncoder(java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.image.codec.jpeg.JPEGCodec com.sun.image.codec.jpeg.JPEGImageEncoder createJPEGEncoder(java.io.OutputStream)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.image.codec.jpeg.JPEGCodec com.sun.image.codec.jpeg.JPEGImageEncoder createJPEGEncoder(java.io.OutputStream, com.sun.image.codec.jpeg.JPEGEncodeParam) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.image.codec.jpeg.JPEGCodec com.sun.image.codec.jpeg.JPEGImageEncoder createJPEGEncoder(java.io.OutputStream, com.sun.image.codec.jpeg.JPEGEncodeParam) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.image.codec.jpeg.JPEGCodec com.sun.image.codec.jpeg.JPEGImageEncoder createJPEGEncoder(java.io.OutputStream, com.sun.image.codec.jpeg.JPEGEncodeParam)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.image.codec.jpeg.JPEGDecodeParam java.lang.Object clone()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.image.codec.jpeg.JPEGEncodeParam java.lang.Object clone()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.image.codec.jpeg.JPEGEncodeParam void addMarkerData(int, byte[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.image.codec.jpeg.JPEGHuffmanTable JPEGHuffmanTable(short[], short[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.image.codec.jpeg.JPEGHuffmanTable JPEGHuffmanTable(short[], short[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.image.codec.jpeg.JPEGHuffmanTable short[] getLengths()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.image.codec.jpeg.JPEGHuffmanTable short[] getLengths()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.image.codec.jpeg.JPEGHuffmanTable short[] getSymbols()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.image.codec.jpeg.JPEGHuffmanTable short[] getSymbols()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.image.codec.jpeg.JPEGImageDecoder com.sun.image.codec.jpeg.JPEGDecodeParam getJPEGDecodeParam()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual com.sun.image.codec.jpeg.JPEGImageDecoder java.io.InputStream getInputStream()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.image.codec.jpeg.JPEGImageDecoder void setJPEGDecodeParam(com.sun.image.codec.jpeg.JPEGDecodeParam) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.image.codec.jpeg.JPEGImageEncoder com.sun.image.codec.jpeg.JPEGEncodeParam getDefaultJPEGEncodeParam(com.sun.image.codec.jpeg.JPEGDecodeParam) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.image.codec.jpeg.JPEGImageEncoder com.sun.image.codec.jpeg.JPEGEncodeParam getDefaultJPEGEncodeParam(com.sun.image.codec.jpeg.JPEGDecodeParam)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.image.codec.jpeg.JPEGImageEncoder com.sun.image.codec.jpeg.JPEGEncodeParam getDefaultJPEGEncodeParam(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.image.codec.jpeg.JPEGImageEncoder com.sun.image.codec.jpeg.JPEGEncodeParam getDefaultJPEGEncodeParam(java.awt.image.BufferedImage) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.image.codec.jpeg.JPEGImageEncoder com.sun.image.codec.jpeg.JPEGEncodeParam getDefaultJPEGEncodeParam(java.awt.image.BufferedImage)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.image.codec.jpeg.JPEGImageEncoder com.sun.image.codec.jpeg.JPEGEncodeParam getDefaultJPEGEncodeParam(java.awt.image.Raster, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.image.codec.jpeg.JPEGImageEncoder com.sun.image.codec.jpeg.JPEGEncodeParam getDefaultJPEGEncodeParam(java.awt.image.Raster, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.image.codec.jpeg.JPEGImageEncoder int getDefaultColorId(java.awt.image.ColorModel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.image.codec.jpeg.JPEGImageEncoder java.io.OutputStream getOutputStream()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.image.codec.jpeg.JPEGImageEncoder void encode(java.awt.image.BufferedImage) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.image.codec.jpeg.JPEGImageEncoder void encode(java.awt.image.BufferedImage, com.sun.image.codec.jpeg.JPEGEncodeParam) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.image.codec.jpeg.JPEGImageEncoder void encode(java.awt.image.BufferedImage, com.sun.image.codec.jpeg.JPEGEncodeParam) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.image.codec.jpeg.JPEGImageEncoder void encode(java.awt.image.Raster) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.image.codec.jpeg.JPEGImageEncoder void encode(java.awt.image.Raster, com.sun.image.codec.jpeg.JPEGEncodeParam) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.image.codec.jpeg.JPEGImageEncoder void encode(java.awt.image.Raster, com.sun.image.codec.jpeg.JPEGEncodeParam) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.image.codec.jpeg.JPEGImageEncoder void setJPEGEncodeParam(com.sun.image.codec.jpeg.JPEGEncodeParam) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.image.codec.jpeg.JPEGQTable JPEGQTable(int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.image.codec.jpeg.JPEGQTable com.sun.image.codec.jpeg.JPEGQTable getScaledInstance(float, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.image.codec.jpeg.JPEGQTable com.sun.image.codec.jpeg.JPEGQTable getScaledInstance(float, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.image.codec.jpeg.JPEGQTable int[] getTable()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual com.sun.image.codec.jpeg.JPEGQTable int[] getTable()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.image.codec.jpeg.TruncatedFileException TruncatedFileException(java.awt.image.BufferedImage) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.image.codec.jpeg.TruncatedFileException java.awt.image.BufferedImage getBufferedImage()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="virtual com.sun.image.codec.jpeg.TruncatedFileException java.awt.image.BufferedImage getBufferedImage()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.image.codec.jpeg.TruncatedFileException java.awt.image.Raster getRaster()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="virtual com.sun.image.codec.jpeg.TruncatedFileException java.awt.image.Raster getRaster()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
</root>
