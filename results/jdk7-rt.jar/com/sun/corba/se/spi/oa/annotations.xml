<root>
  <item name="com.sun.corba.se.spi.oa.OAInvocationInfo OAInvocationInfo(com.sun.corba.se.spi.oa.OAInvocationInfo, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.corba.se.spi.oa.ObjectAdapter java.lang.String[] getInterfaces(java.lang.Object, byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.corba.se.spi.oa.ObjectAdapter void getInvocationServant(com.sun.corba.se.spi.oa.OAInvocationInfo) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.spi.oa.ObjectAdapterBase ObjectAdapterBase(com.sun.corba.se.spi.orb.ORB) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.corba.se.spi.oa.ObjectAdapterBase java.lang.String[] getInterfaces(java.lang.Object, byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.corba.se.spi.oa.ObjectAdapterBase void getInvocationServant(com.sun.corba.se.spi.oa.OAInvocationInfo) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.spi.oa.ObjectAdapterBase void initializeTemplate(com.sun.corba.se.spi.ior.ObjectKeyTemplate, boolean, com.sun.corba.se.impl.oa.poa.Policies, java.lang.String, java.lang.String, com.sun.corba.se.spi.ior.ObjectAdapterId) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.corba.se.spi.oa.ObjectAdapterFactory com.sun.corba.se.spi.oa.ObjectAdapter find(com.sun.corba.se.spi.ior.ObjectAdapterId) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.corba.se.spi.oa.ObjectAdapterFactory void init(com.sun.corba.se.spi.orb.ORB) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
