<root>
  <item name="com.sun.corba.se.spi.protocol.CorbaClientDelegate CorbaClientDelegate()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual com.sun.corba.se.spi.protocol.CorbaMessageMediator void setReplyHeader(com.sun.corba.se.impl.protocol.giopmsgheaders.LocateReplyOrReplyMessage) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.corba.se.spi.protocol.CorbaProtocolHandler com.sun.corba.se.spi.protocol.CorbaMessageMediator createLocationForward(com.sun.corba.se.spi.protocol.CorbaMessageMediator, com.sun.corba.se.spi.ior.IOR, com.sun.corba.se.spi.servicecontext.ServiceContexts) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.corba.se.spi.protocol.CorbaProtocolHandler com.sun.corba.se.spi.protocol.CorbaMessageMediator createResponse(com.sun.corba.se.spi.protocol.CorbaMessageMediator, com.sun.corba.se.spi.servicecontext.ServiceContexts) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.corba.se.spi.protocol.CorbaProtocolHandler com.sun.corba.se.spi.protocol.CorbaMessageMediator createSystemExceptionResponse(com.sun.corba.se.spi.protocol.CorbaMessageMediator, org.omg.CORBA.SystemException, com.sun.corba.se.spi.servicecontext.ServiceContexts) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.corba.se.spi.protocol.CorbaProtocolHandler com.sun.corba.se.spi.protocol.CorbaMessageMediator createUnknownExceptionResponse(com.sun.corba.se.spi.protocol.CorbaMessageMediator, org.omg.CORBA.portable.UnknownException) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.corba.se.spi.protocol.CorbaProtocolHandler com.sun.corba.se.spi.protocol.CorbaMessageMediator createUserExceptionResponse(com.sun.corba.se.spi.protocol.CorbaMessageMediator, com.sun.corba.se.spi.servicecontext.ServiceContexts) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.corba.se.spi.protocol.CorbaProtocolHandler void handleRequest(com.sun.corba.se.impl.protocol.giopmsgheaders.LocateRequestMessage, com.sun.corba.se.spi.protocol.CorbaMessageMediator) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.corba.se.spi.protocol.CorbaProtocolHandler void handleRequest(com.sun.corba.se.impl.protocol.giopmsgheaders.RequestMessage, com.sun.corba.se.spi.protocol.CorbaMessageMediator) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.corba.se.spi.protocol.CorbaProtocolHandler void handleThrowableDuringServerDispatch(com.sun.corba.se.spi.protocol.CorbaMessageMediator, java.lang.Throwable, org.omg.CORBA.CompletionStatus) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual com.sun.corba.se.spi.protocol.LocalClientRequestDispatcherFactory com.sun.corba.se.spi.protocol.LocalClientRequestDispatcher create(int, com.sun.corba.se.spi.ior.IOR) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.spi.protocol.RequestDispatcherDefault RequestDispatcherDefault()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.spi.protocol.RequestDispatcherDefault com.sun.corba.se.pept.protocol.ClientRequestDispatcher makeClientRequestDispatcher()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.spi.protocol.RequestDispatcherDefault com.sun.corba.se.spi.protocol.CorbaServerRequestDispatcher makeBootstrapServerRequestDispatcher(com.sun.corba.se.spi.orb.ORB) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.spi.protocol.RequestDispatcherDefault com.sun.corba.se.spi.protocol.CorbaServerRequestDispatcher makeBootstrapServerRequestDispatcher(com.sun.corba.se.spi.orb.ORB)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.spi.protocol.RequestDispatcherDefault com.sun.corba.se.spi.protocol.CorbaServerRequestDispatcher makeINSServerRequestDispatcher(com.sun.corba.se.spi.orb.ORB) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.spi.protocol.RequestDispatcherDefault com.sun.corba.se.spi.protocol.CorbaServerRequestDispatcher makeINSServerRequestDispatcher(com.sun.corba.se.spi.orb.ORB)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.spi.protocol.RequestDispatcherDefault com.sun.corba.se.spi.protocol.CorbaServerRequestDispatcher makeServerRequestDispatcher(com.sun.corba.se.spi.orb.ORB) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.spi.protocol.RequestDispatcherDefault com.sun.corba.se.spi.protocol.CorbaServerRequestDispatcher makeServerRequestDispatcher(com.sun.corba.se.spi.orb.ORB)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.spi.protocol.RequestDispatcherDefault com.sun.corba.se.spi.protocol.LocalClientRequestDispatcherFactory makeFullServantCacheLocalClientRequestDispatcherFactory(com.sun.corba.se.spi.orb.ORB)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.spi.protocol.RequestDispatcherDefault com.sun.corba.se.spi.protocol.LocalClientRequestDispatcherFactory makeInfoOnlyServantCacheLocalClientRequestDispatcherFactory(com.sun.corba.se.spi.orb.ORB)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.spi.protocol.RequestDispatcherDefault com.sun.corba.se.spi.protocol.LocalClientRequestDispatcherFactory makeJIDLLocalClientRequestDispatcherFactory(com.sun.corba.se.spi.orb.ORB)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.spi.protocol.RequestDispatcherDefault com.sun.corba.se.spi.protocol.LocalClientRequestDispatcherFactory makeMinimalServantCacheLocalClientRequestDispatcherFactory(com.sun.corba.se.spi.orb.ORB)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.spi.protocol.RequestDispatcherDefault com.sun.corba.se.spi.protocol.LocalClientRequestDispatcherFactory makePOALocalClientRequestDispatcherFactory(com.sun.corba.se.spi.orb.ORB)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.spi.protocol.RequestDispatcherDefault.1 com.sun.corba.se.spi.protocol.LocalClientRequestDispatcher create(int, com.sun.corba.se.spi.ior.IOR) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.spi.protocol.RequestDispatcherDefault.1 com.sun.corba.se.spi.protocol.LocalClientRequestDispatcher create(int, com.sun.corba.se.spi.ior.IOR)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.spi.protocol.RequestDispatcherDefault.2 com.sun.corba.se.spi.protocol.LocalClientRequestDispatcher create(int, com.sun.corba.se.spi.ior.IOR) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.spi.protocol.RequestDispatcherDefault.2 com.sun.corba.se.spi.protocol.LocalClientRequestDispatcher create(int, com.sun.corba.se.spi.ior.IOR)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.spi.protocol.RequestDispatcherDefault.3 com.sun.corba.se.spi.protocol.LocalClientRequestDispatcher create(int, com.sun.corba.se.spi.ior.IOR) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.spi.protocol.RequestDispatcherDefault.3 com.sun.corba.se.spi.protocol.LocalClientRequestDispatcher create(int, com.sun.corba.se.spi.ior.IOR)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.spi.protocol.RequestDispatcherDefault.4 com.sun.corba.se.spi.protocol.LocalClientRequestDispatcher create(int, com.sun.corba.se.spi.ior.IOR) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.spi.protocol.RequestDispatcherDefault.4 com.sun.corba.se.spi.protocol.LocalClientRequestDispatcher create(int, com.sun.corba.se.spi.ior.IOR)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.spi.protocol.RequestDispatcherDefault.5 com.sun.corba.se.spi.protocol.LocalClientRequestDispatcher create(int, com.sun.corba.se.spi.ior.IOR) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.spi.protocol.RequestDispatcherDefault.5 com.sun.corba.se.spi.protocol.LocalClientRequestDispatcher create(int, com.sun.corba.se.spi.ior.IOR)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.spi.protocol.RetryType boolean isRetry()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
</root>
