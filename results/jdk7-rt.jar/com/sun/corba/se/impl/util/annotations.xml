<root>
  <item name="com.sun.corba.se.impl.util.IdentityHashtable boolean contains(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.util.IdentityHashtable java.lang.Object put(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.util.IdentityHashtableEnumerator IdentityHashtableEnumerator(com.sun.corba.se.impl.util.IdentityHashtableEntry[], boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.util.JDKClassLoader java.lang.Class loadClass(java.lang.Class, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.util.PackagePrefixChecker boolean hasBeenPrefixed(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.util.PackagePrefixChecker boolean hasOffendingPrefix(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.util.PackagePrefixChecker java.lang.String withoutPackagePrefix(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.util.RepositoryId RepositoryId(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.util.RepositoryId boolean isAbstractBase(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.util.RepositoryId com.sun.corba.se.impl.util.RepositoryId init(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.util.RepositoryId java.lang.String convertFromISOLatin1(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.util.RepositoryId java.lang.String convertToISOLatin1(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.util.RepositoryId java.lang.String createForJavaType(java.io.Serializable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.util.RepositoryId java.lang.String createForJavaType(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.util.RepositoryId java.lang.String createForSpecialCase(java.io.Serializable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.util.RepositoryId java.lang.String createForSpecialCase(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.util.RepositoryId java.lang.String createHashString(java.io.Serializable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.util.RepositoryId java.lang.String createHashString(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.util.RepositoryId java.lang.String createSequenceRepID(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.util.RepositoryId java.lang.String delete(java.lang.String, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.util.RepositoryId java.lang.String getIdFromHelper(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.util.RepositoryId java.lang.String replace(java.lang.String, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.util.RepositoryId java.lang.String replace(java.lang.String, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.util.RepositoryId long fromHex(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.util.RepositoryId void setByteArray(java.lang.String, byte[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.util.RepositoryIdCache com.sun.corba.se.impl.util.RepositoryId getId(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.util.Utility java.lang.Class loadStubClass(java.lang.String, java.lang.String, java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.util.Utility java.lang.Object readAbstractAndNarrow(org.omg.CORBA_2_3.portable.InputStream, java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.util.Utility java.lang.Object readObjectAndNarrow(org.omg.CORBA.portable.InputStream, java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.util.Utility java.lang.String dynamicStubName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.util.Utility java.lang.String idlStubName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.util.Utility java.lang.String stubName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.util.Utility java.lang.String stubName(java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.util.Utility java.lang.String stubNameForCompiler(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.util.Utility java.lang.String stubNameForCompiler(java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.util.Utility java.lang.String stubNameFromRepID(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.util.Utility java.lang.String tieName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.util.Utility java.lang.String tieNameForCompiler(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.util.Utility javax.rmi.CORBA.Tie loadTie(java.rmi.Remote) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.util.Utility void purgeTieAndServant(javax.rmi.CORBA.Tie) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
