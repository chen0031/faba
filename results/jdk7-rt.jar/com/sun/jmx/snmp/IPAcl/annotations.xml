<root>
  <item name="com.sun.jmx.snmp.IPAcl.ASCII_CharStream ASCII_CharStream(java.io.InputStream, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.ASCII_CharStream ASCII_CharStream(java.io.InputStream, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.ASCII_CharStream char[] GetSuffix(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.ASCII_CharStream java.lang.String GetImage()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.ASCII_CharStream void ReInit(java.io.InputStream, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.ASCII_CharStream void ReInit(java.io.InputStream, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.AclEntryImpl AclEntryImpl(com.sun.jmx.snmp.IPAcl.AclEntryImpl) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.AclEntryImpl java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.AclImpl java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.GroupImpl GroupImpl(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.GroupImpl boolean addMember(java.security.Principal)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;true;null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.GroupImpl boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.GroupImpl boolean isMember(java.security.Principal) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.GroupImpl boolean removeMember(java.security.Principal)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;true;null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.GroupImpl java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMAccess com.sun.jmx.snmp.IPAcl.Node jjtCreate(com.sun.jmx.snmp.IPAcl.Parser, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMAccess com.sun.jmx.snmp.IPAcl.Node jjtCreate(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMAclBlock com.sun.jmx.snmp.IPAcl.Node jjtCreate(com.sun.jmx.snmp.IPAcl.Parser, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMAclBlock com.sun.jmx.snmp.IPAcl.Node jjtCreate(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMAclItem com.sun.jmx.snmp.IPAcl.Node jjtCreate(com.sun.jmx.snmp.IPAcl.Parser, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMAclItem com.sun.jmx.snmp.IPAcl.Node jjtCreate(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMCommunities com.sun.jmx.snmp.IPAcl.Node jjtCreate(com.sun.jmx.snmp.IPAcl.Parser, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMCommunities com.sun.jmx.snmp.IPAcl.Node jjtCreate(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMCommunity com.sun.jmx.snmp.IPAcl.Node jjtCreate(com.sun.jmx.snmp.IPAcl.Parser, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMCommunity com.sun.jmx.snmp.IPAcl.Node jjtCreate(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMEnterprise com.sun.jmx.snmp.IPAcl.Node jjtCreate(com.sun.jmx.snmp.IPAcl.Parser, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMEnterprise com.sun.jmx.snmp.IPAcl.Node jjtCreate(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMHost com.sun.jmx.snmp.IPAcl.Node jjtCreate(com.sun.jmx.snmp.IPAcl.Parser, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMHost com.sun.jmx.snmp.IPAcl.Node jjtCreate(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMHostInform com.sun.jmx.snmp.IPAcl.Node jjtCreate(com.sun.jmx.snmp.IPAcl.Parser, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMHostInform com.sun.jmx.snmp.IPAcl.Node jjtCreate(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMHostName com.sun.jmx.snmp.IPAcl.Node jjtCreate(com.sun.jmx.snmp.IPAcl.Parser, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMHostName com.sun.jmx.snmp.IPAcl.Node jjtCreate(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMHostName com.sun.jmx.snmp.IPAcl.PrincipalImpl createAssociatedPrincipal()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMHostName java.lang.String getHname()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMHostTrap com.sun.jmx.snmp.IPAcl.Node jjtCreate(com.sun.jmx.snmp.IPAcl.Parser, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMHostTrap com.sun.jmx.snmp.IPAcl.Node jjtCreate(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMInformBlock com.sun.jmx.snmp.IPAcl.Node jjtCreate(com.sun.jmx.snmp.IPAcl.Parser, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMInformBlock com.sun.jmx.snmp.IPAcl.Node jjtCreate(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMInformCommunity com.sun.jmx.snmp.IPAcl.Node jjtCreate(com.sun.jmx.snmp.IPAcl.Parser, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMInformCommunity com.sun.jmx.snmp.IPAcl.Node jjtCreate(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMInformInterestedHost com.sun.jmx.snmp.IPAcl.Node jjtCreate(com.sun.jmx.snmp.IPAcl.Parser, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMInformInterestedHost com.sun.jmx.snmp.IPAcl.Node jjtCreate(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMInformItem com.sun.jmx.snmp.IPAcl.Node jjtCreate(com.sun.jmx.snmp.IPAcl.Parser, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMInformItem com.sun.jmx.snmp.IPAcl.Node jjtCreate(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMIpAddress com.sun.jmx.snmp.IPAcl.Node jjtCreate(com.sun.jmx.snmp.IPAcl.Parser, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMIpAddress com.sun.jmx.snmp.IPAcl.Node jjtCreate(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMIpAddress com.sun.jmx.snmp.IPAcl.PrincipalImpl createAssociatedPrincipal()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMIpAddress java.lang.String getHname()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMIpMask com.sun.jmx.snmp.IPAcl.Node jjtCreate(com.sun.jmx.snmp.IPAcl.Parser, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMIpMask com.sun.jmx.snmp.IPAcl.Node jjtCreate(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMIpMask com.sun.jmx.snmp.IPAcl.PrincipalImpl createAssociatedPrincipal()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMIpMask java.lang.String getHname()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMManagers com.sun.jmx.snmp.IPAcl.Node jjtCreate(com.sun.jmx.snmp.IPAcl.Parser, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMManagers com.sun.jmx.snmp.IPAcl.Node jjtCreate(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMNetMask com.sun.jmx.snmp.IPAcl.Node jjtCreate(com.sun.jmx.snmp.IPAcl.Parser, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMNetMask com.sun.jmx.snmp.IPAcl.Node jjtCreate(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMNetMask com.sun.jmx.snmp.IPAcl.PrincipalImpl createAssociatedPrincipal()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMNetMask java.lang.String getHname()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMNetMaskV6 com.sun.jmx.snmp.IPAcl.PrincipalImpl createAssociatedPrincipal()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMSecurityDefs com.sun.jmx.snmp.IPAcl.Node jjtCreate(com.sun.jmx.snmp.IPAcl.Parser, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMSecurityDefs com.sun.jmx.snmp.IPAcl.Node jjtCreate(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMTrapBlock com.sun.jmx.snmp.IPAcl.Node jjtCreate(com.sun.jmx.snmp.IPAcl.Parser, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMTrapBlock com.sun.jmx.snmp.IPAcl.Node jjtCreate(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMTrapCommunity com.sun.jmx.snmp.IPAcl.Node jjtCreate(com.sun.jmx.snmp.IPAcl.Parser, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMTrapCommunity com.sun.jmx.snmp.IPAcl.Node jjtCreate(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMTrapInterestedHost com.sun.jmx.snmp.IPAcl.Node jjtCreate(com.sun.jmx.snmp.IPAcl.Parser, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMTrapInterestedHost com.sun.jmx.snmp.IPAcl.Node jjtCreate(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMTrapItem com.sun.jmx.snmp.IPAcl.Node jjtCreate(com.sun.jmx.snmp.IPAcl.Parser, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMTrapItem com.sun.jmx.snmp.IPAcl.Node jjtCreate(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMTrapNum com.sun.jmx.snmp.IPAcl.Node jjtCreate(com.sun.jmx.snmp.IPAcl.Parser, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JDMTrapNum com.sun.jmx.snmp.IPAcl.Node jjtCreate(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JJTParserState void closeNodeScope(com.sun.jmx.snmp.IPAcl.Node, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.JJTParserState void openNodeScope(com.sun.jmx.snmp.IPAcl.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.NetMaskImpl NetMaskImpl(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.NetMaskImpl boolean addMember(java.security.Principal)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;true;null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.NetMaskImpl boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.NetMaskImpl boolean isMember(java.security.Principal) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.NetMaskImpl boolean removeMember(java.security.Principal)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;true;null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.NetMaskImpl byte[] extractSubNet(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.NetMaskImpl java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.ParseException java.lang.String add_escapes(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.ParseException java.lang.String add_escapes(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.Parser Parser(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.Parser com.sun.jmx.snmp.IPAcl.JDMAccess Access()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.Parser com.sun.jmx.snmp.IPAcl.JDMInformCommunity InformCommunity()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.Parser com.sun.jmx.snmp.IPAcl.JDMSecurityDefs SecurityDefs()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.Parser com.sun.jmx.snmp.IPAcl.JDMTrapCommunity TrapCommunity()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.Parser com.sun.jmx.snmp.IPAcl.ParseException generateParseException()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.Parser void ReInit(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.ParserTokenManager com.sun.jmx.snmp.IPAcl.Token getNextToken()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.ParserTokenManager com.sun.jmx.snmp.IPAcl.Token jjFillToken()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.PermissionImpl boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.PrincipalImpl PrincipalImpl(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.PrincipalImpl boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.PrincipalImpl java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.SimpleNode com.sun.jmx.snmp.IPAcl.Node jjtCreate(com.sun.jmx.snmp.IPAcl.Parser, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.SimpleNode com.sun.jmx.snmp.IPAcl.Node jjtCreate(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.SimpleNode java.lang.String toString(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.SnmpAcl java.lang.String getDefaultAclFileName()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.SnmpAcl void setAuthorizedListFile(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.Token com.sun.jmx.snmp.IPAcl.Token newToken(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.TokenMgrError TokenMgrError(boolean, int, int, int, java.lang.String, char, int) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.TokenMgrError java.lang.String LexicalError(boolean, int, int, int, java.lang.String, char) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.TokenMgrError java.lang.String LexicalError(boolean, int, int, int, java.lang.String, char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,_,!null,_-&gt;!null;_,_,_,_,null,_-&gt;!null;false,_,_,_,_,_-&gt;!null;true,_,_,_,_,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.TokenMgrError java.lang.String addEscapes(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.IPAcl.TokenMgrError java.lang.String addEscapes(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
