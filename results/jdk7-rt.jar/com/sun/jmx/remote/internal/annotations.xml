<root>
  <item name="com.sun.jmx.remote.internal.ArrayNotificationBuffer ArrayNotificationBuffer(javax.management.MBeanServer, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.remote.internal.ArrayNotificationBuffer boolean isDisposed()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.remote.internal.ArrayNotificationBuffer com.sun.jmx.remote.internal.NotificationBuffer getNotificationBuffer(javax.management.MBeanServer, java.util.Map&lt;java.lang.String,?&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.remote.internal.ArrayNotificationBuffer java.lang.Exception extractException(java.lang.Exception)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.remote.internal.ArrayNotificationBuffer javax.management.remote.NotificationResult fetchNotifications(com.sun.jmx.remote.internal.NotificationBufferFilter, long, long, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.remote.internal.ArrayNotificationBuffer long earliestSequenceNumber()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.remote.internal.ArrayNotificationBuffer long nextSequenceNumber()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.remote.internal.ArrayNotificationBuffer void addSharer(com.sun.jmx.remote.internal.ArrayNotificationBuffer.ShareBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.remote.internal.ArrayNotificationBuffer void createdNotification(javax.management.MBeanServerNotification) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.remote.internal.ArrayNotificationBuffer.BroadcasterQuery BroadcasterQuery()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.remote.internal.ArrayNotificationBuffer.NamedNotification java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.remote.internal.ArrayNotificationBuffer.NamedNotification javax.management.Notification getNotification()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.remote.internal.ArrayNotificationBuffer.NamedNotification javax.management.ObjectName getObjectName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.remote.internal.ArrayNotificationBuffer.ShareBuffer ShareBuffer(com.sun.jmx.remote.internal.ArrayNotificationBuffer, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.remote.internal.ArrayNotificationBuffer.ShareBuffer int getSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.remote.internal.ArrayQueue T[] newArray(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.remote.internal.ArrayQueue boolean add(T)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;true;null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.remote.internal.ArrayQueue int size()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.remote.internal.ClientCommunicatorAdmin void gotIOException(java.io.IOException) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.remote.internal.ClientCommunicatorAdmin void restart(java.io.IOException) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.remote.internal.ClientListenerInfo boolean sameAs(javax.management.ObjectName, javax.management.NotificationListener) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.remote.internal.ClientListenerInfo boolean sameAs(javax.management.ObjectName, javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.remote.internal.ClientListenerInfo boolean sameAs(javax.management.ObjectName, javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.remote.internal.ClientListenerInfo boolean sameAs(javax.management.ObjectName, javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.remote.internal.ClientListenerInfo java.lang.Integer getListenerID()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.remote.internal.ClientListenerInfo java.lang.Object getHandback()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.remote.internal.ClientListenerInfo javax.management.NotificationFilter getNotificationFilter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.remote.internal.ClientListenerInfo javax.management.NotificationListener getListener()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.remote.internal.ClientListenerInfo javax.management.ObjectName getObjectName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.remote.internal.ClientListenerInfo javax.security.auth.Subject getDelegationSubject()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.remote.internal.ClientNotifForwarder ClientNotifForwarder(java.lang.ClassLoader, java.util.Map&lt;java.lang.String,?&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.remote.internal.ClientNotifForwarder ClientNotifForwarder(java.util.Map) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.remote.internal.ClientNotifForwarder.LinearExecutor LinearExecutor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.remote.internal.ClientNotifForwarder.NotifFetcher javax.management.remote.NotificationResult fetchNotifs()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.remote.internal.ClientNotifForwarder.NotifFetcher javax.management.remote.NotificationResult fetchOneNotif()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.remote.internal.ClientNotifForwarder.NotifFetcher void dispatchNotification(javax.management.remote.TargetedNotification, java.lang.Integer, java.util.Map&lt;java.lang.Integer,com.sun.jmx.remote.internal.ClientListenerInfo&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.remote.internal.ClientNotifForwarder.NotifFetcher void dispatchNotification(javax.management.remote.TargetedNotification, java.lang.Integer, java.util.Map&lt;java.lang.Integer,com.sun.jmx.remote.internal.ClientListenerInfo&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.remote.internal.ClientNotifForwarder.NotifFetcher void logOnce(java.lang.String, java.lang.SecurityException) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.remote.internal.IIOPHelper IIOPHelper()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.remote.internal.IIOPHelper boolean isAvailable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.remote.internal.ServerCommunicatorAdmin void logtime(java.lang.String, long) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.remote.internal.ServerNotifForwarder ServerNotifForwarder(javax.management.MBeanServer, java.util.Map&lt;java.lang.String,?&gt;, com.sun.jmx.remote.internal.NotificationBuffer, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.remote.internal.ServerNotifForwarder java.lang.Exception extractException(java.lang.Exception)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.remote.internal.ServerNotifForwarder java.lang.Integer addNotificationListener(javax.management.ObjectName, javax.management.NotificationFilter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.remote.internal.ServerNotifForwarder void removeNotificationListener(javax.management.ObjectName, java.lang.Integer[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.remote.internal.ServerNotifForwarder.IdAndFilter boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.remote.internal.ServerNotifForwarder.IdAndFilter boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.remote.internal.ServerNotifForwarder.IdAndFilter int hashCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.remote.internal.ServerNotifForwarder.IdAndFilter java.lang.Integer getId()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.remote.internal.ServerNotifForwarder.IdAndFilter javax.management.NotificationFilter getFilter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
</root>
