<root>
  <item name="javax.swing.plaf.BorderUIResource BorderUIResource(javax.swing.border.Border) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.BorderUIResource.BevelBorderUIResource BevelBorderUIResource(int, java.awt.Color, java.awt.Color) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.BorderUIResource.BevelBorderUIResource BevelBorderUIResource(int, java.awt.Color, java.awt.Color) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.BorderUIResource.EmptyBorderUIResource EmptyBorderUIResource(java.awt.Insets) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.ColorUIResource ColorUIResource(java.awt.Color) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.ComponentInputMapUIResource ComponentInputMapUIResource(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.ComponentUI boolean contains(javax.swing.JComponent, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.ComponentUI int getAccessibleChildrenCount(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.ComponentUI int getBaseline(javax.swing.JComponent, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.ComponentUI java.awt.Component.BaselineResizeBehavior getBaselineResizeBehavior(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.ComponentUI java.awt.Dimension getMaximumSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.ComponentUI java.awt.Dimension getMinimumSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.ComponentUI java.awt.Dimension getPreferredSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.ComponentUI java.awt.Dimension getPreferredSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;null;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.ComponentUI javax.accessibility.Accessible getAccessibleChild(javax.swing.JComponent, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.ComponentUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.ComponentUI void installUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.ComponentUI void paint(java.awt.Graphics, javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.ComponentUI void paint(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.ComponentUI void uninstallUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.ComponentUI void update(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.FileChooserUI javax.swing.JButton getDefaultButton(javax.swing.JFileChooser) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.FileChooserUI javax.swing.JButton getDefaultButton(javax.swing.JFileChooser)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;null;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.FontUIResource FontUIResource(java.awt.Font) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.FontUIResource FontUIResource(java.lang.String, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.IconUIResource IconUIResource(javax.swing.Icon) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.LayerUI int getBaseline(javax.swing.JComponent, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.LayerUI java.awt.Component.BaselineResizeBehavior getBaselineResizeBehavior(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.LayerUI java.awt.Dimension getMaximumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.LayerUI java.awt.Dimension getMaximumSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.LayerUI java.awt.Dimension getMinimumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.LayerUI java.awt.Dimension getMinimumSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.LayerUI java.awt.Dimension getPreferredSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.LayerUI java.awt.Dimension getPreferredSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.LayerUI void applyPropertyChange(java.beans.PropertyChangeEvent, javax.swing.JLayer&lt;? extends V&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.LayerUI void applyPropertyChange(java.beans.PropertyChangeEvent, javax.swing.JLayer&lt;? extends V&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.LayerUI void doLayout(javax.swing.JLayer&lt;? extends V&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.LayerUI void eventDispatched(java.awt.AWTEvent, javax.swing.JLayer&lt;? extends V&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.LayerUI void paint(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.LayerUI void paintImmediately(int, int, int, int, javax.swing.JLayer&lt;? extends V&gt;) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.LayerUI void processComponentEvent(java.awt.event.ComponentEvent, javax.swing.JLayer&lt;? extends V&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.LayerUI void processComponentEvent(java.awt.event.ComponentEvent, javax.swing.JLayer&lt;? extends V&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.LayerUI void processFocusEvent(java.awt.event.FocusEvent, javax.swing.JLayer&lt;? extends V&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.LayerUI void processFocusEvent(java.awt.event.FocusEvent, javax.swing.JLayer&lt;? extends V&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.LayerUI void processHierarchyBoundsEvent(java.awt.event.HierarchyEvent, javax.swing.JLayer&lt;? extends V&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.LayerUI void processHierarchyBoundsEvent(java.awt.event.HierarchyEvent, javax.swing.JLayer&lt;? extends V&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.LayerUI void processHierarchyEvent(java.awt.event.HierarchyEvent, javax.swing.JLayer&lt;? extends V&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.LayerUI void processHierarchyEvent(java.awt.event.HierarchyEvent, javax.swing.JLayer&lt;? extends V&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.LayerUI void processInputMethodEvent(java.awt.event.InputMethodEvent, javax.swing.JLayer&lt;? extends V&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.LayerUI void processInputMethodEvent(java.awt.event.InputMethodEvent, javax.swing.JLayer&lt;? extends V&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.LayerUI void processKeyEvent(java.awt.event.KeyEvent, javax.swing.JLayer&lt;? extends V&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.LayerUI void processKeyEvent(java.awt.event.KeyEvent, javax.swing.JLayer&lt;? extends V&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.LayerUI void processMouseEvent(java.awt.event.MouseEvent, javax.swing.JLayer&lt;? extends V&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.LayerUI void processMouseEvent(java.awt.event.MouseEvent, javax.swing.JLayer&lt;? extends V&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.LayerUI void processMouseMotionEvent(java.awt.event.MouseEvent, javax.swing.JLayer&lt;? extends V&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.LayerUI void processMouseMotionEvent(java.awt.event.MouseEvent, javax.swing.JLayer&lt;? extends V&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.LayerUI void processMouseWheelEvent(java.awt.event.MouseWheelEvent, javax.swing.JLayer&lt;? extends V&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.LayerUI void processMouseWheelEvent(java.awt.event.MouseWheelEvent, javax.swing.JLayer&lt;? extends V&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.LayerUI void updateUI(javax.swing.JLayer&lt;? extends V&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.PopupMenuUI boolean isPopupTrigger(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.PopupMenuUI javax.swing.Popup getPopup(javax.swing.JPopupMenu, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.PopupMenuUI javax.swing.Popup getPopup(javax.swing.JPopupMenu, int, int)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.TextUI java.lang.String getToolTipText(javax.swing.text.JTextComponent, java.awt.Point) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.TextUI java.lang.String getToolTipText(javax.swing.text.JTextComponent, java.awt.Point) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.TextUI java.lang.String getToolTipText(javax.swing.text.JTextComponent, java.awt.Point)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;null;_,!null-&gt;null;_,null-&gt;null;null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
</root>
