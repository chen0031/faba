<root>
  <item name="javax.swing.text.html.parser.DTD java.lang.String[] readNameArray(java.io.DataInputStream, java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.DTD javax.swing.text.html.parser.AttributeList defAttributeList(java.lang.String, int, int, java.lang.String, java.lang.String, javax.swing.text.html.parser.AttributeList)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_,_,_,_-&gt;!null;_,_,_,!null,_,_-&gt;!null;_,_,_,_,!null,_-&gt;!null;_,_,_,_,_,!null-&gt;!null;_,_,_,_,_,null-&gt;!null;_,_,_,_,null,_-&gt;!null;_,_,_,null,_,_-&gt;!null;null,_,_,_,_,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.DTD javax.swing.text.html.parser.AttributeList readAttributeList(java.io.DataInputStream, java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.DTD javax.swing.text.html.parser.ContentModel defContentModel(int, java.lang.Object, javax.swing.text.html.parser.ContentModel)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null,_-&gt;!null;_,_,!null-&gt;!null;_,_,null-&gt;!null;_,null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.DTD javax.swing.text.html.parser.ContentModel readContentModel(java.io.DataInputStream, java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.DTD javax.swing.text.html.parser.DTD getDTD(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.DTD javax.swing.text.html.parser.Entity defEntity(java.lang.String, int, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.DTD void read(java.io.DataInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.DocumentParser void handleEmptyTag(javax.swing.text.html.parser.TagElement) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.DocumentParser void handleEndTag(javax.swing.text.html.parser.TagElement) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.DocumentParser void handleStartTag(javax.swing.text.html.parser.TagElement) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.DocumentParser void parse(java.io.Reader, javax.swing.text.html.HTMLEditorKit.ParserCallback, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.Entity java.lang.String getString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser boolean ignoreElement(javax.swing.text.html.parser.Element) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser boolean parseMarkupDeclarations(java.lang.StringBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser char[] getChars(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser char[] getChars(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser char[] mapNumericReference(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser java.lang.String getEndOfLineString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser java.lang.String getString(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser java.lang.String parseDTDMarkup()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser javax.swing.text.html.parser.TagElement makeTag(javax.swing.text.html.parser.Element, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser javax.swing.text.html.parser.TagElement makeTag(javax.swing.text.html.parser.Element, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,false-&gt;!null;_,true-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser void handleText(javax.swing.text.html.parser.TagElement) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser void legalTagContext(javax.swing.text.html.parser.TagElement) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser void markFirstTime(javax.swing.text.html.parser.Element) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser void startTag(javax.swing.text.html.parser.TagElement) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.ParserDelegator javax.swing.text.html.parser.DTD createDTD(javax.swing.text.html.parser.DTD, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.parser.ParserDelegator void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.TagElement TagElement(javax.swing.text.html.parser.Element) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.TagElement TagElement(javax.swing.text.html.parser.Element, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.TagStack TagStack(javax.swing.text.html.parser.TagElement, javax.swing.text.html.parser.TagStack) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.TagStack java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
