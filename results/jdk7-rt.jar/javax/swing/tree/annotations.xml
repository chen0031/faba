<root>
  <item name="javax.swing.tree.AbstractLayoutCache int[] getRowsForPaths(javax.swing.tree.TreePath[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode boolean isNodeAncestor(javax.swing.tree.TreeNode)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode boolean isNodeChild(javax.swing.tree.TreeNode)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode boolean isNodeDescendant(javax.swing.tree.DefaultMutableTreeNode)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode boolean isNodeRelated(javax.swing.tree.DefaultMutableTreeNode)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode boolean isNodeSibling(javax.swing.tree.TreeNode)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode int getIndex(javax.swing.tree.TreeNode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode java.util.Enumeration breadthFirstEnumeration()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode java.util.Enumeration pathFromAncestorEnumeration(javax.swing.tree.TreeNode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode java.util.Enumeration pathFromAncestorEnumeration(javax.swing.tree.TreeNode)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode java.util.Enumeration postorderEnumeration()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode java.util.Enumeration preorderEnumeration()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode javax.swing.tree.TreeNode getChildAfter(javax.swing.tree.TreeNode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode javax.swing.tree.TreeNode getChildBefore(javax.swing.tree.TreeNode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode void insert(javax.swing.tree.MutableTreeNode, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode void remove(javax.swing.tree.MutableTreeNode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode.PathBetweenNodesEnumeration PathBetweenNodesEnumeration(javax.swing.tree.DefaultMutableTreeNode, javax.swing.tree.TreeNode, javax.swing.tree.TreeNode) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode.PathBetweenNodesEnumeration PathBetweenNodesEnumeration(javax.swing.tree.DefaultMutableTreeNode, javax.swing.tree.TreeNode, javax.swing.tree.TreeNode) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellEditor boolean canEditImmediately(java.util.EventObject)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellEditor boolean shouldStartEditingTimer(java.util.EventObject)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellEditor java.awt.Component getTreeCellEditorComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellEditor java.awt.Container createContainer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellEditor javax.swing.tree.TreeCellEditor createTreeCellEditor()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellEditor void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellEditor void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellEditor.1 1(javax.swing.tree.DefaultTreeCellEditor, javax.swing.JTextField) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellEditor.EditorContainer int calculateIconY(javax.swing.Icon) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer java.awt.Component getTreeCellRendererComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer java.awt.Component getTreeCellRendererComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_,_,_,_,_-&gt;!null;_,!null,_,_,_,_,_-&gt;!null;_,_,_,_,_,_,false-&gt;!null;_,_,_,_,_,_,true-&gt;!null;_,_,_,_,false,_,_-&gt;!null;_,_,_,_,true,_,_-&gt;!null;_,_,_,false,_,_,_-&gt;!null;_,_,_,true,_,_,_-&gt;!null;_,_,false,_,_,_,_-&gt;!null;_,_,true,_,_,_,_-&gt;!null;_,null,_,_,_,_,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeModel boolean isLeaf(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeModel int getChildCount(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeModel java.lang.Object getChild(java.lang.Object, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeModel void insertNodeInto(javax.swing.tree.MutableTreeNode, javax.swing.tree.MutableTreeNode, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeModel void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeModel void removeNodeFromParent(javax.swing.tree.MutableTreeNode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeModel void valueForPathChanged(javax.swing.tree.TreePath, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeModel void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeSelectionModel boolean canPathsBeAdded(javax.swing.tree.TreePath[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.tree.DefaultTreeSelectionModel boolean isPathSelected(javax.swing.tree.TreePath)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.tree.DefaultTreeSelectionModel java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeSelectionModel javax.swing.tree.TreePath[] getSelectionPaths()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeSelectionModel void notifyPathChange(java.util.Vector, javax.swing.tree.TreePath) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeSelectionModel void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeSelectionModel void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache boolean ensurePathIsExpanded(javax.swing.tree.TreePath, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache boolean isExpanded(javax.swing.tree.TreePath)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache int access$502(javax.swing.tree.FixedHeightLayoutCache, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache java.awt.Rectangle getBounds(javax.swing.tree.FixedHeightLayoutCache.FHTreeStateNode, int, java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache java.awt.Rectangle getBounds(javax.swing.tree.TreePath, java.awt.Rectangle)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache java.util.Enumeration getVisiblePathsFrom(javax.swing.tree.TreePath)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache javax.swing.tree.FixedHeightLayoutCache.FHTreeStateNode access$300(javax.swing.tree.FixedHeightLayoutCache, java.lang.Object, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache javax.swing.tree.FixedHeightLayoutCache.FHTreeStateNode access$300(javax.swing.tree.FixedHeightLayoutCache, java.lang.Object, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_-&gt;!null;_,!null,_-&gt;!null;_,null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache javax.swing.tree.FixedHeightLayoutCache.FHTreeStateNode access$600(javax.swing.tree.FixedHeightLayoutCache) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache javax.swing.tree.FixedHeightLayoutCache.FHTreeStateNode createNodeForValue(java.lang.Object, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache javax.swing.tree.FixedHeightLayoutCache.FHTreeStateNode getNodeForPath(javax.swing.tree.TreePath, boolean, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache void access$100(javax.swing.tree.FixedHeightLayoutCache, javax.swing.tree.FixedHeightLayoutCache.FHTreeStateNode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache void access$100(javax.swing.tree.FixedHeightLayoutCache, javax.swing.tree.FixedHeightLayoutCache.FHTreeStateNode) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache void access$200(javax.swing.tree.FixedHeightLayoutCache, javax.swing.tree.FixedHeightLayoutCache.FHTreeStateNode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache void access$200(javax.swing.tree.FixedHeightLayoutCache, javax.swing.tree.FixedHeightLayoutCache.FHTreeStateNode) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache void access$400(javax.swing.tree.FixedHeightLayoutCache, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache void addMapping(javax.swing.tree.FixedHeightLayoutCache.FHTreeStateNode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache void removeMapping(javax.swing.tree.FixedHeightLayoutCache.FHTreeStateNode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache.FHTreeStateNode void addNode(javax.swing.tree.FixedHeightLayoutCache.FHTreeStateNode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache.VisibleFHTreeStateNodeEnumeration VisibleFHTreeStateNodeEnumeration(javax.swing.tree.FixedHeightLayoutCache, javax.swing.tree.FixedHeightLayoutCache.FHTreeStateNode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache.VisibleFHTreeStateNodeEnumeration VisibleFHTreeStateNodeEnumeration(javax.swing.tree.FixedHeightLayoutCache, javax.swing.tree.FixedHeightLayoutCache.FHTreeStateNode, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.TreePath TreePath(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.TreePath TreePath(java.lang.Object[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.TreePath TreePath(java.lang.Object[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.TreePath TreePath(javax.swing.tree.TreePath, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.TreePath java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.TreePath javax.swing.tree.TreePath pathByAddingChild(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.TreePath javax.swing.tree.TreePath pathByAddingChild(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache boolean access$500(javax.swing.tree.VariableHeightLayoutCache) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache boolean access$502(javax.swing.tree.VariableHeightLayoutCache, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache boolean access$502(javax.swing.tree.VariableHeightLayoutCache, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,false-&gt;false;_,true-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache boolean isExpanded(javax.swing.tree.TreePath)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache java.awt.Rectangle access$400(javax.swing.tree.VariableHeightLayoutCache) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache java.util.Vector access$100(javax.swing.tree.VariableHeightLayoutCache) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache javax.swing.tree.VariableHeightLayoutCache.TreeStateNode access$200(javax.swing.tree.VariableHeightLayoutCache) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache javax.swing.tree.VariableHeightLayoutCache.TreeStateNode access$600(javax.swing.tree.VariableHeightLayoutCache, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache javax.swing.tree.VariableHeightLayoutCache.TreeStateNode access$600(javax.swing.tree.VariableHeightLayoutCache, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;_,null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache javax.swing.tree.VariableHeightLayoutCache.TreeStateNode createNodeAt(javax.swing.tree.VariableHeightLayoutCache.TreeStateNode, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache javax.swing.tree.VariableHeightLayoutCache.TreeStateNode createNodeAt(javax.swing.tree.VariableHeightLayoutCache.TreeStateNode, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache javax.swing.tree.VariableHeightLayoutCache.TreeStateNode createNodeForValue(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache javax.swing.tree.VariableHeightLayoutCache.TreeStateNode getNodeForPath(javax.swing.tree.TreePath, boolean, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache void access$000(javax.swing.tree.VariableHeightLayoutCache, javax.swing.tree.VariableHeightLayoutCache.TreeStateNode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache void access$000(javax.swing.tree.VariableHeightLayoutCache, javax.swing.tree.VariableHeightLayoutCache.TreeStateNode) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache void access$300(javax.swing.tree.VariableHeightLayoutCache, javax.swing.tree.VariableHeightLayoutCache.TreeStateNode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache void access$300(javax.swing.tree.VariableHeightLayoutCache, javax.swing.tree.VariableHeightLayoutCache.TreeStateNode) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache void access$700(javax.swing.tree.VariableHeightLayoutCache) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache void addMapping(javax.swing.tree.VariableHeightLayoutCache.TreeStateNode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache void removeMapping(javax.swing.tree.VariableHeightLayoutCache.TreeStateNode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache.TreeStateNode java.awt.Rectangle getNodeBounds(java.awt.Rectangle)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
  </item>
</root>
