<root>
  <item name="abstract virtual javax.lang.model.element.AnnotationValueVisitor R visit(javax.lang.model.element.AnnotationValue) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.lang.model.element.AnnotationValueVisitor R visit(javax.lang.model.element.AnnotationValue, P) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.lang.model.element.AnnotationValueVisitor R visitAnnotation(javax.lang.model.element.AnnotationMirror, P) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual javax.lang.model.element.AnnotationValueVisitor R visitAnnotation(javax.lang.model.element.AnnotationMirror, P) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual javax.lang.model.element.AnnotationValueVisitor R visitAnnotation(javax.lang.model.element.AnnotationMirror, P)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual javax.lang.model.element.AnnotationValueVisitor R visitArray(java.util.List&lt;? extends javax.lang.model.element.AnnotationValue&gt;, P) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual javax.lang.model.element.AnnotationValueVisitor R visitArray(java.util.List&lt;? extends javax.lang.model.element.AnnotationValue&gt;, P) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual javax.lang.model.element.AnnotationValueVisitor R visitArray(java.util.List&lt;? extends javax.lang.model.element.AnnotationValue&gt;, P)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual javax.lang.model.element.AnnotationValueVisitor R visitBoolean(boolean, P) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual javax.lang.model.element.AnnotationValueVisitor R visitBoolean(boolean, P)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual javax.lang.model.element.AnnotationValueVisitor R visitByte(byte, P) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual javax.lang.model.element.AnnotationValueVisitor R visitByte(byte, P)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual javax.lang.model.element.AnnotationValueVisitor R visitChar(char, P) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual javax.lang.model.element.AnnotationValueVisitor R visitDouble(double, P) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual javax.lang.model.element.AnnotationValueVisitor R visitEnumConstant(javax.lang.model.element.VariableElement, P) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual javax.lang.model.element.AnnotationValueVisitor R visitEnumConstant(javax.lang.model.element.VariableElement, P) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual javax.lang.model.element.AnnotationValueVisitor R visitEnumConstant(javax.lang.model.element.VariableElement, P)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual javax.lang.model.element.AnnotationValueVisitor R visitFloat(float, P) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual javax.lang.model.element.AnnotationValueVisitor R visitInt(int, P) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual javax.lang.model.element.AnnotationValueVisitor R visitLong(long, P) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual javax.lang.model.element.AnnotationValueVisitor R visitShort(short, P) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual javax.lang.model.element.AnnotationValueVisitor R visitString(java.lang.String, P) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual javax.lang.model.element.AnnotationValueVisitor R visitString(java.lang.String, P) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual javax.lang.model.element.AnnotationValueVisitor R visitString(java.lang.String, P)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual javax.lang.model.element.AnnotationValueVisitor R visitType(javax.lang.model.type.TypeMirror, P) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual javax.lang.model.element.AnnotationValueVisitor R visitType(javax.lang.model.type.TypeMirror, P) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual javax.lang.model.element.AnnotationValueVisitor R visitType(javax.lang.model.type.TypeMirror, P)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.lang.model.element.ElementKind boolean isClass()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.lang.model.element.ElementKind boolean isField()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.lang.model.element.ElementKind boolean isInterface()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual javax.lang.model.element.ElementVisitor R visit(javax.lang.model.element.Element) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.lang.model.element.ElementVisitor R visit(javax.lang.model.element.Element, P) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.lang.model.element.NestingKind boolean isNested()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.lang.model.element.UnknownAnnotationValueException java.lang.Object getArgument()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="virtual javax.lang.model.element.UnknownAnnotationValueException java.lang.Object getArgument()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.lang.model.element.UnknownAnnotationValueException javax.lang.model.element.AnnotationValue getUnknownAnnotationValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="virtual javax.lang.model.element.UnknownAnnotationValueException javax.lang.model.element.AnnotationValue getUnknownAnnotationValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.lang.model.element.UnknownElementException java.lang.Object getArgument()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="virtual javax.lang.model.element.UnknownElementException java.lang.Object getArgument()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.lang.model.element.UnknownElementException javax.lang.model.element.Element getUnknownElement()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="virtual javax.lang.model.element.UnknownElementException javax.lang.model.element.Element getUnknownElement()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
</root>
