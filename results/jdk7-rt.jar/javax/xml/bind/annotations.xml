<root>
  <item name="javax.xml.bind.Binder Binder()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual javax.xml.bind.Binder XmlNode getXMLNode(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.Binder XmlNode updateXML(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.Binder XmlNode updateXML(java.lang.Object, XmlNode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.Binder XmlNode updateXML(java.lang.Object, XmlNode) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.Binder java.lang.Object getJAXBNode(XmlNode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.Binder java.lang.Object getProperty(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.Binder java.lang.Object unmarshal(XmlNode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.Binder java.lang.Object updateJAXB(XmlNode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.Binder javax.xml.bind.JAXBElement&lt;T&gt; unmarshal(XmlNode, java.lang.Class&lt;T&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.Binder javax.xml.bind.JAXBElement&lt;T&gt; unmarshal(XmlNode, java.lang.Class&lt;T&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.Binder void marshal(java.lang.Object, XmlNode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.Binder void marshal(java.lang.Object, XmlNode) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.Binder void setEventHandler(javax.xml.bind.ValidationEventHandler) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual javax.xml.bind.Binder void setProperty(java.lang.String, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.ContextFinder ContextFinder()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.ContextFinder java.lang.Class lookupUsingOSGiServiceLoader(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.xml.bind.ContextFinder java.net.URL which(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.ContextFinder java.net.URL which(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.xml.bind.ContextFinder java.net.URL which(java.lang.Class, java.lang.ClassLoader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.ContextFinder java.net.URL which(java.lang.Class, java.lang.ClassLoader) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.xml.bind.ContextFinder java.net.URL which(java.lang.Class, java.lang.ClassLoader)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.xml.bind.ContextFinder java.util.Properties loadJAXBProperties(java.lang.ClassLoader, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.xml.bind.ContextFinder javax.xml.bind.JAXBContext find(java.lang.Class[], java.util.Map) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.ContextFinder javax.xml.bind.JAXBContext find(java.lang.String, java.lang.String, java.lang.ClassLoader, java.util.Map) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.ContextFinder javax.xml.bind.JAXBContext newInstance(java.lang.Class[], java.util.Map, java.lang.Class) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.ContextFinder javax.xml.bind.JAXBException handleClassCastException(java.lang.Class, java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.ContextFinder javax.xml.bind.JAXBException handleClassCastException(java.lang.Class, java.lang.Class) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.ContextFinder javax.xml.bind.JAXBException handleClassCastException(java.lang.Class, java.lang.Class)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.ContextFinder void handleInvocationTargetException(java.lang.reflect.InvocationTargetException) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.ContextFinder void handleInvocationTargetException(java.lang.reflect.InvocationTargetException)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.ContextFinder.1 java.lang.ClassLoader run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.xml.bind.ContextFinder.1 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter DatatypeConverter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.DatatypeConverter boolean parseBoolean(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter byte parseByte(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter byte[] parseBase64Binary(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter byte[] parseBase64Binary(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter byte[] parseHexBinary(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter byte[] parseHexBinary(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter double parseDouble(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter float parseFloat(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter int parseInt(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter int parseUnsignedShort(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter java.lang.String parseAnySimpleType(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.DatatypeConverter java.lang.String parseString(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.DatatypeConverter java.lang.String printAnySimpleType(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.DatatypeConverter java.lang.String printBase64Binary(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter java.lang.String printBase64Binary(byte[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter java.lang.String printBoolean(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter java.lang.String printByte(byte)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter java.lang.String printDate(java.util.Calendar)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter java.lang.String printDateTime(java.util.Calendar)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter java.lang.String printDecimal(java.math.BigDecimal) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter java.lang.String printDecimal(java.math.BigDecimal)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter java.lang.String printDouble(double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter java.lang.String printFloat(float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter java.lang.String printHexBinary(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter java.lang.String printHexBinary(byte[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter java.lang.String printInt(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter java.lang.String printInteger(java.math.BigInteger) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter java.lang.String printInteger(java.math.BigInteger)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter java.lang.String printLong(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter java.lang.String printQName(javax.xml.namespace.QName, javax.xml.namespace.NamespaceContext) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter java.lang.String printQName(javax.xml.namespace.QName, javax.xml.namespace.NamespaceContext) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter java.lang.String printShort(short)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter java.lang.String printString(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.DatatypeConverter java.lang.String printTime(java.util.Calendar)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter java.lang.String printUnsignedInt(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter java.lang.String printUnsignedShort(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter java.math.BigDecimal parseDecimal(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter java.math.BigInteger parseInteger(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter java.math.BigInteger parseInteger(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter java.util.Calendar parseDate(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter java.util.Calendar parseDate(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter java.util.Calendar parseDateTime(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter java.util.Calendar parseDateTime(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter java.util.Calendar parseTime(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter java.util.Calendar parseTime(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter javax.xml.namespace.QName parseQName(java.lang.String, javax.xml.namespace.NamespaceContext) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter javax.xml.namespace.QName parseQName(java.lang.String, javax.xml.namespace.NamespaceContext) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter javax.xml.namespace.QName parseQName(java.lang.String, javax.xml.namespace.NamespaceContext)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter long parseLong(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter long parseUnsignedInt(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter short parseShort(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverter void setDatatypeConverter(javax.xml.bind.DatatypeConverterInterface) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl DatatypeConverterImpl()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl boolean isDigitOrPeriodOrSign(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl boolean parseBoolean(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl byte _parseByte(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl byte encodeByte(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl byte parseByte(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl byte[] _parseBase64Binary(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl byte[] _parseBase64Binary(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl byte[] initDecodeMap()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl byte[] parseBase64Binary(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl byte[] parseBase64Binary(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl byte[] parseHexBinary(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl byte[] parseHexBinary(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl char encode(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl char[] initEncodeMap()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl double _parseDouble(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl double parseDouble(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl float _parseFloat(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl float parseFloat(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl int _parseInt(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl int guessLength(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl int hexToBin(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl int parseInt(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl int parseUnsignedShort(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.Boolean _parseBoolean(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.Boolean _parseBoolean(java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.CharSequence removeOptionalPlus(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.CharSequence removeOptionalPlus(java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String _printBase64Binary(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String _printBase64Binary(byte[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String _printBase64Binary(byte[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String _printBoolean(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String _printByte(byte)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String _printDate(java.util.Calendar)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String _printDateTime(java.util.Calendar)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String _printDecimal(java.math.BigDecimal) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String _printDecimal(java.math.BigDecimal)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String _printDouble(double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String _printFloat(float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String _printInt(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String _printInteger(java.math.BigInteger) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String _printInteger(java.math.BigInteger)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String _printLong(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String _printQName(javax.xml.namespace.QName, javax.xml.namespace.NamespaceContext) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String _printQName(javax.xml.namespace.QName, javax.xml.namespace.NamespaceContext) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String _printShort(short)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String installHook(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String parseAnySimpleType(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null-&gt;!null;null-&gt;null&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String parseString(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null-&gt;!null;null-&gt;null&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String printAnySimpleType(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null-&gt;!null;null-&gt;null&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String printBase64Binary(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String printBase64Binary(byte[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String printBoolean(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String printByte(byte)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String printDate(java.util.Calendar)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String printDateTime(java.util.Calendar)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String printDecimal(java.math.BigDecimal) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String printDecimal(java.math.BigDecimal)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String printDouble(double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String printFloat(float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String printHexBinary(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String printHexBinary(byte[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String printInt(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String printInteger(java.math.BigInteger) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String printInteger(java.math.BigInteger)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String printLong(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String printQName(javax.xml.namespace.QName, javax.xml.namespace.NamespaceContext) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String printQName(javax.xml.namespace.QName, javax.xml.namespace.NamespaceContext) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String printShort(short)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String printString(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null-&gt;!null;null-&gt;null&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String printTime(java.util.Calendar)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String printUnsignedInt(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.lang.String printUnsignedShort(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.math.BigDecimal _parseDecimal(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.math.BigDecimal _parseDecimal(java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.math.BigDecimal parseDecimal(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.math.BigDecimal parseDecimal(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.math.BigInteger _parseInteger(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.math.BigInteger _parseInteger(java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.math.BigInteger parseInteger(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.math.BigInteger parseInteger(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.util.Calendar parseDate(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.util.Calendar parseDate(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.util.Calendar parseDateTime(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.util.Calendar parseDateTime(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.util.Calendar parseTime(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.util.Calendar parseTime(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.util.GregorianCalendar _parseDateTime(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl java.util.GregorianCalendar _parseDateTime(java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl javax.xml.namespace.QName _parseQName(java.lang.CharSequence, javax.xml.namespace.NamespaceContext) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl javax.xml.namespace.QName _parseQName(java.lang.CharSequence, javax.xml.namespace.NamespaceContext) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl javax.xml.namespace.QName _parseQName(java.lang.CharSequence, javax.xml.namespace.NamespaceContext)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl javax.xml.namespace.QName parseQName(java.lang.String, javax.xml.namespace.NamespaceContext) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl javax.xml.namespace.QName parseQName(java.lang.String, javax.xml.namespace.NamespaceContext) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl javax.xml.namespace.QName parseQName(java.lang.String, javax.xml.namespace.NamespaceContext)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl long _parseLong(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl long parseLong(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl long parseUnsignedInt(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl short _parseShort(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl short parseShort(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl.CalendarFormatter CalendarFormatter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl.CalendarFormatter java.lang.String doFormat(java.lang.String, java.util.Calendar) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl.CalendarFormatter java.lang.String doFormat(java.lang.String, java.util.Calendar)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl.CalendarFormatter void formatDays(java.util.Calendar, java.lang.StringBuilder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl.CalendarFormatter void formatDays(java.util.Calendar, java.lang.StringBuilder) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl.CalendarFormatter void formatHours(java.util.Calendar, java.lang.StringBuilder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl.CalendarFormatter void formatHours(java.util.Calendar, java.lang.StringBuilder) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl.CalendarFormatter void formatMinutes(java.util.Calendar, java.lang.StringBuilder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl.CalendarFormatter void formatMinutes(java.util.Calendar, java.lang.StringBuilder) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl.CalendarFormatter void formatMonth(java.util.Calendar, java.lang.StringBuilder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl.CalendarFormatter void formatMonth(java.util.Calendar, java.lang.StringBuilder) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl.CalendarFormatter void formatSeconds(java.util.Calendar, java.lang.StringBuilder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl.CalendarFormatter void formatSeconds(java.util.Calendar, java.lang.StringBuilder) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl.CalendarFormatter void formatTimeZone(java.util.Calendar, java.lang.StringBuilder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl.CalendarFormatter void formatTwoDigits(int, java.lang.StringBuilder) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl.CalendarFormatter void formatYear(java.util.Calendar, java.lang.StringBuilder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.DatatypeConverterImpl.CalendarFormatter void formatYear(java.util.Calendar, java.lang.StringBuilder) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface boolean parseBoolean(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface byte parseByte(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface byte[] parseBase64Binary(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface byte[] parseBase64Binary(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface byte[] parseHexBinary(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface byte[] parseHexBinary(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface double parseDouble(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface float parseFloat(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface int parseInt(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface int parseUnsignedShort(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface java.lang.String printBase64Binary(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface java.lang.String printBase64Binary(byte[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface java.lang.String printBoolean(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface java.lang.String printByte(byte)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface java.lang.String printDate(java.util.Calendar)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface java.lang.String printDateTime(java.util.Calendar)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface java.lang.String printDecimal(java.math.BigDecimal) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface java.lang.String printDecimal(java.math.BigDecimal)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface java.lang.String printDouble(double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface java.lang.String printFloat(float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface java.lang.String printHexBinary(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface java.lang.String printHexBinary(byte[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface java.lang.String printInt(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface java.lang.String printInteger(java.math.BigInteger) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface java.lang.String printInteger(java.math.BigInteger)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface java.lang.String printLong(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface java.lang.String printQName(javax.xml.namespace.QName, javax.xml.namespace.NamespaceContext) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface java.lang.String printQName(javax.xml.namespace.QName, javax.xml.namespace.NamespaceContext) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface java.lang.String printShort(short)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface java.lang.String printTime(java.util.Calendar)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface java.lang.String printUnsignedInt(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface java.lang.String printUnsignedShort(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface java.math.BigDecimal parseDecimal(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface java.math.BigInteger parseInteger(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface java.math.BigInteger parseInteger(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface java.util.Calendar parseDate(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface java.util.Calendar parseDate(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface java.util.Calendar parseDateTime(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface java.util.Calendar parseDateTime(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface java.util.Calendar parseTime(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface java.util.Calendar parseTime(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface javax.xml.namespace.QName parseQName(java.lang.String, javax.xml.namespace.NamespaceContext) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface javax.xml.namespace.QName parseQName(java.lang.String, javax.xml.namespace.NamespaceContext) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface javax.xml.namespace.QName parseQName(java.lang.String, javax.xml.namespace.NamespaceContext)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface long parseLong(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface long parseUnsignedInt(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.DatatypeConverterInterface short parseShort(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.JAXB JAXB()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.JAXB T unmarshal(java.io.File, java.lang.Class&lt;T&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.JAXB T unmarshal(java.io.InputStream, java.lang.Class&lt;T&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.JAXB T unmarshal(java.io.Reader, java.lang.Class&lt;T&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.JAXB T unmarshal(java.lang.String, java.lang.Class&lt;T&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.JAXB T unmarshal(java.net.URI, java.lang.Class&lt;T&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.JAXB T unmarshal(java.net.URL, java.lang.Class&lt;T&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.JAXB T unmarshal(javax.xml.transform.Source, java.lang.Class&lt;T&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.JAXB java.lang.String inferName(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.JAXB javax.xml.transform.Result toResult(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.JAXB javax.xml.transform.Source toSource(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.JAXB void _marshal(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.JAXB void _marshal(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.JAXB void marshal(java.lang.Object, java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.JAXB void marshal(java.lang.Object, java.io.File) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.JAXB void marshal(java.lang.Object, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.JAXB void marshal(java.lang.Object, java.io.OutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.JAXB void marshal(java.lang.Object, java.io.Writer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.JAXB void marshal(java.lang.Object, java.io.Writer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.JAXB void marshal(java.lang.Object, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.JAXB void marshal(java.lang.Object, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.JAXB void marshal(java.lang.Object, java.net.URI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.JAXB void marshal(java.lang.Object, java.net.URI) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.JAXB void marshal(java.lang.Object, java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.JAXB void marshal(java.lang.Object, java.net.URL) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.JAXB void marshal(java.lang.Object, javax.xml.transform.Result) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.JAXB void marshal(java.lang.Object, javax.xml.transform.Result) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.JAXBContext JAXBContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="virtual javax.xml.bind.JAXBContext javax.xml.bind.Binder&lt;T&gt; createBinder(java.lang.Class&lt;T&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.xml.bind.JAXBContext javax.xml.bind.Binder&lt;T&gt; createBinder(java.lang.Class&lt;T&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="virtual javax.xml.bind.JAXBContext javax.xml.bind.Binder&lt;T&gt; createBinder(java.lang.Class&lt;T&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.JAXBContext javax.xml.bind.Binder&lt;org.w3c.dom.Node&gt; createBinder()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual javax.xml.bind.JAXBContext javax.xml.bind.Binder&lt;org.w3c.dom.Node&gt; createBinder()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.JAXBContext javax.xml.bind.JAXBContext newInstance(java.lang.Class...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.JAXBContext javax.xml.bind.JAXBContext newInstance(java.lang.Class[], java.util.Map&lt;java.lang.String,?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.JAXBContext javax.xml.bind.JAXBContext newInstance(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.JAXBContext javax.xml.bind.JAXBContext newInstance(java.lang.String, java.lang.ClassLoader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.JAXBContext javax.xml.bind.JAXBContext newInstance(java.lang.String, java.lang.ClassLoader, java.util.Map&lt;java.lang.String,?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual javax.xml.bind.JAXBContext javax.xml.bind.JAXBIntrospector createJAXBIntrospector()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.JAXBContext javax.xml.bind.Marshaller createMarshaller()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.JAXBContext javax.xml.bind.Unmarshaller createUnmarshaller()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.JAXBContext void generateSchema(javax.xml.bind.SchemaOutputResolver) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.xml.bind.JAXBElement JAXBElement(javax.xml.namespace.QName, java.lang.Class&lt;T&gt;, T) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.JAXBElement JAXBElement(javax.xml.namespace.QName, java.lang.Class&lt;T&gt;, T) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.JAXBElement JAXBElement(javax.xml.namespace.QName, java.lang.Class&lt;T&gt;, java.lang.Class, T) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.JAXBElement JAXBElement(javax.xml.namespace.QName, java.lang.Class&lt;T&gt;, java.lang.Class, T) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.JAXBElement JAXBElement(javax.xml.namespace.QName, java.lang.Class&lt;T&gt;, java.lang.Class, T) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.xml.bind.JAXBElement T getValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.JAXBElement boolean isGlobalScope()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.JAXBElement boolean isNil()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.JAXBElement java.lang.Class getScope()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.JAXBElement java.lang.Class&lt;T&gt; getDeclaredType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.JAXBElement javax.xml.namespace.QName getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.JAXBElement.GlobalScope GlobalScope()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.JAXBException java.lang.String getErrorCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.JAXBException java.lang.Throwable getCause()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.JAXBException java.lang.Throwable getLinkedException()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.JAXBIntrospector JAXBIntrospector()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.JAXBIntrospector java.lang.Object getValue(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;null-&gt;null&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.JAXBPermission JAXBPermission(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.Marshaller org.w3c.dom.Node getNode(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.Marshaller void marshal(java.lang.Object, java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.Marshaller void marshal(java.lang.Object, java.io.File) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.Marshaller void marshal(java.lang.Object, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.Marshaller void marshal(java.lang.Object, java.io.OutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.Marshaller void marshal(java.lang.Object, java.io.Writer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.Marshaller void marshal(java.lang.Object, java.io.Writer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.Marshaller void marshal(java.lang.Object, javax.xml.transform.Result) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.Marshaller void marshal(java.lang.Object, javax.xml.transform.Result) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.Marshaller void marshal(java.lang.Object, org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.Marshaller void marshal(java.lang.Object, org.w3c.dom.Node) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.Marshaller void marshal(java.lang.Object, org.xml.sax.ContentHandler) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.Marshaller void marshal(java.lang.Object, org.xml.sax.ContentHandler) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.Marshaller void setAdapter(java.lang.Class&lt;A&gt;, A) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual javax.xml.bind.Marshaller void setAdapter(javax.xml.bind.annotation.adapters.XmlAdapter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.Marshaller void setEventHandler(javax.xml.bind.ValidationEventHandler) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual javax.xml.bind.Marshaller void setProperty(java.lang.String, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.Marshaller.Listener Listener()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="virtual javax.xml.bind.Marshaller.Listener void afterMarshal(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.xml.bind.Marshaller.Listener void afterMarshal(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.xml.bind.Marshaller.Listener void afterMarshal(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="virtual javax.xml.bind.Marshaller.Listener void beforeMarshal(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.xml.bind.Marshaller.Listener void beforeMarshal(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.xml.bind.Marshaller.Listener void beforeMarshal(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.Messages Messages()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.Messages java.lang.String format(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.Messages java.lang.String format(java.lang.String, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.Messages java.lang.String format(java.lang.String, java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.Messages java.lang.String format(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.Messages java.lang.String format(java.lang.String, java.lang.Object[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.PropertyException PropertyException(java.lang.String, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.SchemaOutputResolver SchemaOutputResolver()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.TypeConstraintException java.lang.String getErrorCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.TypeConstraintException java.lang.Throwable getLinkedException()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual javax.xml.bind.Unmarshaller java.lang.Object getProperty(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.Unmarshaller java.lang.Object unmarshal(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.Unmarshaller java.lang.Object unmarshal(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.Unmarshaller java.lang.Object unmarshal(java.io.Reader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.Unmarshaller java.lang.Object unmarshal(java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.Unmarshaller java.lang.Object unmarshal(javax.xml.transform.Source) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.Unmarshaller java.lang.Object unmarshal(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.Unmarshaller java.lang.Object unmarshal(org.xml.sax.InputSource) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.Unmarshaller javax.xml.bind.UnmarshallerHandler getUnmarshallerHandler()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.Unmarshaller void setAdapter(java.lang.Class&lt;A&gt;, A) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual javax.xml.bind.Unmarshaller void setAdapter(javax.xml.bind.annotation.adapters.XmlAdapter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.xml.bind.Unmarshaller void setEventHandler(javax.xml.bind.ValidationEventHandler) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual javax.xml.bind.Unmarshaller void setProperty(java.lang.String, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.Unmarshaller.Listener Listener()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.Unmarshaller.Listener void afterUnmarshal(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="virtual javax.xml.bind.Unmarshaller.Listener void afterUnmarshal(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.xml.bind.Unmarshaller.Listener void afterUnmarshal(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="virtual javax.xml.bind.Unmarshaller.Listener void afterUnmarshal(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.xml.bind.Unmarshaller.Listener void afterUnmarshal(java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.Unmarshaller.Listener void beforeUnmarshal(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="virtual javax.xml.bind.Unmarshaller.Listener void beforeUnmarshal(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="virtual javax.xml.bind.Unmarshaller.Listener void beforeUnmarshal(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.xml.bind.Unmarshaller.Listener void beforeUnmarshal(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.xml.bind.Unmarshaller.Listener void beforeUnmarshal(java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.WhiteSpaceProcessor WhiteSpaceProcessor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.WhiteSpaceProcessor boolean isWhiteSpace(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.WhiteSpaceProcessor boolean isWhiteSpace(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.WhiteSpaceProcessor boolean isWhiteSpaceExceptSpace(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.WhiteSpaceProcessor java.lang.CharSequence collapse(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.WhiteSpaceProcessor java.lang.CharSequence collapse(java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.WhiteSpaceProcessor java.lang.CharSequence replace(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.WhiteSpaceProcessor java.lang.CharSequence replace(java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.WhiteSpaceProcessor java.lang.CharSequence trim(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.WhiteSpaceProcessor java.lang.CharSequence trim(java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.WhiteSpaceProcessor java.lang.String collapse(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.bind.WhiteSpaceProcessor java.lang.String replace(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
