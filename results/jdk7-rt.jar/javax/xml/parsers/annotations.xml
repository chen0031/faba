<root>
  <item name="javax.xml.parsers.DocumentBuilder DocumentBuilder()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.parsers.DocumentBuilder org.w3c.dom.Document parse(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.parsers.DocumentBuilder org.w3c.dom.Document parse(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.parsers.DocumentBuilder org.w3c.dom.Document parse(java.io.InputStream, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.parsers.DocumentBuilder org.w3c.dom.Document parse(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.parsers.DocumentBuilderFactory DocumentBuilderFactory()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.xml.parsers.DocumentBuilderFactory boolean isCoalescing()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.parsers.DocumentBuilderFactory boolean isExpandEntityReferences()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.parsers.DocumentBuilderFactory boolean isIgnoringComments()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.parsers.DocumentBuilderFactory boolean isIgnoringElementContentWhitespace()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.parsers.DocumentBuilderFactory boolean isNamespaceAware()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.parsers.DocumentBuilderFactory boolean isValidating()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.parsers.DocumentBuilderFactory void setCoalescing(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.xml.parsers.DocumentBuilderFactory void setExpandEntityReferences(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.xml.parsers.DocumentBuilderFactory void setIgnoringComments(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.xml.parsers.DocumentBuilderFactory void setIgnoringElementContentWhitespace(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.xml.parsers.DocumentBuilderFactory void setNamespaceAware(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.xml.parsers.DocumentBuilderFactory void setSchema(javax.xml.validation.Schema) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.xml.parsers.DocumentBuilderFactory void setValidating(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.xml.parsers.FactoryConfigurationError FactoryConfigurationError()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.xml.parsers.FactoryConfigurationError FactoryConfigurationError(java.lang.Exception) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.parsers.FactoryConfigurationError FactoryConfigurationError(java.lang.Exception, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.xml.parsers.FactoryConfigurationError FactoryConfigurationError(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.xml.parsers.FactoryConfigurationError java.lang.Exception getException()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.parsers.FactoryConfigurationError java.lang.Throwable getCause()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.parsers.FactoryFinder FactoryFinder()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.parsers.FactoryFinder java.lang.Object find(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.xml.parsers.FactoryFinder java.lang.Object findJarServiceProvider(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.xml.parsers.FactoryFinder java.lang.Object findJarServiceProvider(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.xml.parsers.FactoryFinder java.lang.Object newInstance(java.lang.String, java.lang.ClassLoader, boolean)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.xml.parsers.FactoryFinder java.lang.Object newInstance(java.lang.String, java.lang.ClassLoader, boolean, boolean)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.xml.parsers.FactoryFinder void dPrint(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.xml.parsers.FactoryFinder.ConfigurationError ConfigurationError(java.lang.String, java.lang.Exception)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.xml.parsers.FactoryFinder.ConfigurationError java.lang.Exception getException()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.parsers.FactoryFinder.ConfigurationError java.lang.Throwable getCause()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.parsers.ParserConfigurationException ParserConfigurationException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.xml.parsers.ParserConfigurationException ParserConfigurationException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.xml.parsers.SAXParser SAXParser()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.parsers.SAXParser void parse(java.io.File, org.xml.sax.HandlerBase) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.parsers.SAXParser void parse(java.io.File, org.xml.sax.helpers.DefaultHandler) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.parsers.SAXParser void parse(java.io.InputStream, org.xml.sax.HandlerBase) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.parsers.SAXParser void parse(java.io.InputStream, org.xml.sax.HandlerBase, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.parsers.SAXParser void parse(java.io.InputStream, org.xml.sax.helpers.DefaultHandler) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.parsers.SAXParser void parse(java.io.InputStream, org.xml.sax.helpers.DefaultHandler, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.parsers.SAXParser void parse(java.lang.String, org.xml.sax.HandlerBase) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.parsers.SAXParser void parse(java.lang.String, org.xml.sax.helpers.DefaultHandler) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.parsers.SAXParser void parse(org.xml.sax.InputSource, org.xml.sax.HandlerBase) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.parsers.SAXParser void parse(org.xml.sax.InputSource, org.xml.sax.HandlerBase) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.xml.parsers.SAXParser void parse(org.xml.sax.InputSource, org.xml.sax.helpers.DefaultHandler) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.xml.parsers.SAXParser void parse(org.xml.sax.InputSource, org.xml.sax.helpers.DefaultHandler) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.xml.parsers.SAXParserFactory SAXParserFactory()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.xml.parsers.SAXParserFactory boolean isNamespaceAware()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.parsers.SAXParserFactory boolean isValidating()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.parsers.SAXParserFactory void setNamespaceAware(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.xml.parsers.SAXParserFactory void setSchema(javax.xml.validation.Schema) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.xml.parsers.SAXParserFactory void setValidating(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.xml.parsers.SecuritySupport SecuritySupport()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
</root>
