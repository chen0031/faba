<root>
  <item name="javax.security.auth.PrivateCredentialPermission PrivateCredentialPermission(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.PrivateCredentialPermission PrivateCredentialPermission(java.lang.String, java.util.Set) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.PrivateCredentialPermission boolean implies(java.security.Permission)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.security.auth.PrivateCredentialPermission boolean impliesCredentialClass(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;false;null,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.security.auth.PrivateCredentialPermission boolean impliesPrincipalSet(javax.security.auth.PrivateCredentialPermission.CredOwner[], javax.security.auth.PrivateCredentialPermission.CredOwner[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;false;null,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.security.auth.PrivateCredentialPermission java.lang.String getActions()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.PrivateCredentialPermission void init(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.PrivateCredentialPermission void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.PrivateCredentialPermission.CredOwner boolean implies(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.security.auth.Subject Subject(boolean, java.util.Set, java.util.Set, java.util.Set) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.Subject Subject(boolean, java.util.Set, java.util.Set, java.util.Set) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.Subject Subject(boolean, java.util.Set, java.util.Set, java.util.Set) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.Subject boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.security.auth.Subject int getCredHashCode(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.Subject java.lang.Object doAs(javax.security.auth.Subject, java.security.PrivilegedAction) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.Subject java.lang.Object doAs(javax.security.auth.Subject, java.security.PrivilegedExceptionAction) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.Subject java.lang.Object doAsPrivileged(javax.security.auth.Subject, java.security.PrivilegedAction, java.security.AccessControlContext) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.Subject java.lang.Object doAsPrivileged(javax.security.auth.Subject, java.security.PrivilegedExceptionAction, java.security.AccessControlContext) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.Subject java.util.Set getPrincipals(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.Subject java.util.Set getPrincipals(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.Subject java.util.Set getPrivateCredentials(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.Subject java.util.Set getPrivateCredentials(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.Subject java.util.Set getPublicCredentials(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.Subject java.util.Set getPublicCredentials(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.Subject javax.security.auth.Subject getSubject(java.security.AccessControlContext) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.Subject void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.Subject void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.Subject.2 java.security.AccessControlContext run()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.Subject.ClassSet ClassSet(javax.security.auth.Subject, int, java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.Subject.ClassSet boolean add(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.Subject.SecureSet int access$000(javax.security.auth.Subject.SecureSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.Subject.SecureSet java.util.Iterator iterator()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.Subject.SecureSet void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.Subject.SecureSet void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.SubjectDomainCombiner SubjectDomainCombiner(javax.security.auth.Subject) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.SubjectDomainCombiner java.lang.String printDomain(java.security.ProtectionDomain)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.security.auth.SubjectDomainCombiner java.security.ProtectionDomain[] optimize(java.security.ProtectionDomain[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
</root>
