<root>
  <item name="javax.rmi.CORBA.ClassDesc ClassDesc()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.rmi.CORBA.GetORBPropertiesFileAction java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.rmi.CORBA.PortableRemoteObjectDelegate java.rmi.Remote toStub(java.rmi.Remote) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.rmi.CORBA.PortableRemoteObjectDelegate void connect(java.rmi.Remote, java.rmi.Remote) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.rmi.CORBA.PortableRemoteObjectDelegate void connect(java.rmi.Remote, java.rmi.Remote) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.rmi.CORBA.PortableRemoteObjectDelegate void exportObject(java.rmi.Remote) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.rmi.CORBA.PortableRemoteObjectDelegate void unexportObject(java.rmi.Remote) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.rmi.CORBA.Stub java.lang.Object createDelegateIfSpecified(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.rmi.CORBA.Stub java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.rmi.CORBA.StubDelegate void connect(javax.rmi.CORBA.Stub, org.omg.CORBA.ORB) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.rmi.CORBA.StubDelegate void readObject(javax.rmi.CORBA.Stub, java.io.ObjectInputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.rmi.CORBA.StubDelegate void writeObject(javax.rmi.CORBA.Stub, java.io.ObjectOutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.rmi.CORBA.Tie void orb(org.omg.CORBA.ORB) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.rmi.CORBA.Util Util()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.rmi.CORBA.Util java.lang.Class loadClass(java.lang.String, java.lang.String, java.lang.ClassLoader)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.rmi.CORBA.Util java.lang.Object copyObject(java.lang.Object, org.omg.CORBA.ORB)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.rmi.CORBA.Util java.lang.Object createDelegateIfSpecified(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.rmi.CORBA.Util java.lang.Object readAny(org.omg.CORBA.portable.InputStream)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.rmi.CORBA.Util java.lang.Object[] copyObjects(java.lang.Object[], org.omg.CORBA.ORB)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.rmi.CORBA.Util java.lang.String getCodebase(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.rmi.CORBA.Util java.rmi.RemoteException mapSystemException(org.omg.CORBA.SystemException)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.rmi.CORBA.Util java.rmi.RemoteException wrapException(java.lang.Throwable)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.rmi.CORBA.Util javax.rmi.CORBA.Tie getTie(java.rmi.Remote)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.rmi.CORBA.Util javax.rmi.CORBA.ValueHandler createValueHandler()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual javax.rmi.CORBA.UtilDelegate boolean isLocal(javax.rmi.CORBA.Stub) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.rmi.CORBA.UtilDelegate java.lang.Object copyObject(java.lang.Object, org.omg.CORBA.ORB) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.rmi.CORBA.UtilDelegate java.lang.Object readAny(org.omg.CORBA.portable.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.rmi.CORBA.UtilDelegate java.lang.Object[] copyObjects(java.lang.Object[], org.omg.CORBA.ORB) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.rmi.CORBA.UtilDelegate java.lang.Object[] copyObjects(java.lang.Object[], org.omg.CORBA.ORB) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.rmi.CORBA.UtilDelegate java.lang.String getCodebase(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.rmi.CORBA.UtilDelegate java.rmi.RemoteException mapSystemException(org.omg.CORBA.SystemException) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.rmi.CORBA.UtilDelegate java.rmi.RemoteException wrapException(java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.rmi.CORBA.UtilDelegate void writeAbstractObject(org.omg.CORBA.portable.OutputStream, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.rmi.CORBA.UtilDelegate void writeAny(org.omg.CORBA.portable.OutputStream, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.rmi.CORBA.UtilDelegate void writeRemoteObject(org.omg.CORBA.portable.OutputStream, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.rmi.CORBA.ValueHandler boolean isCustomMarshaled(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.rmi.CORBA.ValueHandler java.io.Serializable writeReplace(java.io.Serializable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.rmi.CORBA.ValueHandler java.lang.String getRMIRepositoryID(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.rmi.CORBA.ValueHandler void writeValue(org.omg.CORBA.portable.OutputStream, java.io.Serializable) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual javax.rmi.CORBA.ValueHandlerMultiFormat void writeValue(org.omg.CORBA.portable.OutputStream, java.io.Serializable, byte) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
