<root>
  <item name="java.security.cert.CertPath java.lang.Object writeReplace()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertPath java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertPathBuilder java.security.cert.CertPathBuilder getInstance(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertPathBuilder java.security.cert.CertPathBuilder getInstance(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertPathBuilder java.security.cert.CertPathBuilder getInstance(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;_,null-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertPathBuilder java.security.cert.CertPathBuilder getInstance(java.lang.String, java.security.Provider) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertPathBuilder java.security.cert.CertPathBuilder getInstance(java.lang.String, java.security.Provider)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;_,null-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertPathHelperImpl void implSetDateAndTime(java.security.cert.X509CRLSelector, java.util.Date, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertPathHelperImpl void implSetPathToNames(java.security.cert.X509CertSelector, java.util.Set) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertPathValidator java.security.cert.CertPathValidator getInstance(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertPathValidator java.security.cert.CertPathValidator getInstance(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertPathValidator java.security.cert.CertPathValidator getInstance(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;_,null-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertPathValidator java.security.cert.CertPathValidator getInstance(java.lang.String, java.security.Provider) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertPathValidator java.security.cert.CertPathValidator getInstance(java.lang.String, java.security.Provider)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;_,null-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertPathValidatorException CertPathValidatorException(java.lang.String, java.lang.Throwable, java.security.cert.CertPath, int, java.security.cert.CertPathValidatorException.Reason) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertPathValidatorException void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertStore java.security.cert.CertStore getInstance(java.lang.String, java.security.cert.CertStoreParameters)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;_,null-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertStore java.security.cert.CertStore getInstance(java.lang.String, java.security.cert.CertStoreParameters, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_-&gt;!null;_,!null,_-&gt;!null;_,_,!null-&gt;!null;_,_,null-&gt;!null;_,null,_-&gt;!null;null,_,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertStore java.security.cert.CertStore getInstance(java.lang.String, java.security.cert.CertStoreParameters, java.security.Provider)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_-&gt;!null;_,!null,_-&gt;!null;_,_,!null-&gt;!null;_,_,null-&gt;!null;_,null,_-&gt;!null;null,_,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertStore java.security.cert.CertStore handleException(java.security.NoSuchAlgorithmException) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.Certificate java.lang.Object writeReplace()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertificateFactory java.security.cert.CertificateFactory getInstance(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertificateFactory java.security.cert.CertificateFactory getInstance(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertificateFactory java.security.cert.CertificateFactory getInstance(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;_,null-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertificateFactory java.security.cert.CertificateFactory getInstance(java.lang.String, java.security.Provider) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertificateFactory java.security.cert.CertificateFactory getInstance(java.lang.String, java.security.Provider)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;_,null-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertificateRevokedException CertificateRevokedException(java.util.Date, java.security.cert.CRLReason, javax.security.auth.x500.X500Principal, java.util.Map) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertificateRevokedException CertificateRevokedException(java.util.Date, java.security.cert.CRLReason, javax.security.auth.x500.X500Principal, java.util.Map) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertificateRevokedException CertificateRevokedException(java.util.Date, java.security.cert.CRLReason, javax.security.auth.x500.X500Principal, java.util.Map) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertificateRevokedException CertificateRevokedException(java.util.Date, java.security.cert.CRLReason, javax.security.auth.x500.X500Principal, java.util.Map) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertificateRevokedException java.lang.String getMessage()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertificateRevokedException java.util.Map getExtensions()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertificateRevokedException void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertificateRevokedException void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CollectionCertStoreParameters CollectionCertStoreParameters(java.util.Collection) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CollectionCertStoreParameters java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.LDAPCertStoreParameters LDAPCertStoreParameters(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.LDAPCertStoreParameters LDAPCertStoreParameters(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.LDAPCertStoreParameters java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.PKIXBuilderParameters PKIXBuilderParameters(java.security.KeyStore, java.security.cert.CertSelector) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.PKIXBuilderParameters java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.PKIXCertPathBuilderResult PKIXCertPathBuilderResult(java.security.cert.CertPath, java.security.cert.TrustAnchor, java.security.cert.PolicyNode, java.security.PublicKey) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.PKIXCertPathBuilderResult PKIXCertPathBuilderResult(java.security.cert.CertPath, java.security.cert.TrustAnchor, java.security.cert.PolicyNode, java.security.PublicKey) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.PKIXCertPathBuilderResult PKIXCertPathBuilderResult(java.security.cert.CertPath, java.security.cert.TrustAnchor, java.security.cert.PolicyNode, java.security.PublicKey) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.PKIXCertPathBuilderResult java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.PKIXCertPathValidatorResult PKIXCertPathValidatorResult(java.security.cert.TrustAnchor, java.security.cert.PolicyNode, java.security.PublicKey) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.PKIXCertPathValidatorResult PKIXCertPathValidatorResult(java.security.cert.TrustAnchor, java.security.cert.PolicyNode, java.security.PublicKey) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.PKIXCertPathValidatorResult java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.PKIXParameters PKIXParameters(java.security.KeyStore) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.PKIXParameters java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.PKIXParameters java.util.List getCertPathCheckers()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.PKIXParameters java.util.List getCertStores()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.PKIXParameters void setTrustAnchors(java.util.Set) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.PolicyQualifierInfo PolicyQualifierInfo(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.TrustAnchor TrustAnchor(java.lang.String, java.security.PublicKey, byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.TrustAnchor TrustAnchor(java.lang.String, java.security.PublicKey, byte[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.TrustAnchor TrustAnchor(java.security.cert.X509Certificate, byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.TrustAnchor TrustAnchor(javax.security.auth.x500.X500Principal, java.security.PublicKey, byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.TrustAnchor TrustAnchor(javax.security.auth.x500.X500Principal, java.security.PublicKey, byte[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.TrustAnchor java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CRL java.security.cert.X509CRLEntry getRevokedCertificate(java.security.cert.X509Certificate) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CRLSelector boolean match(java.security.cert.CRL)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.security.cert.X509CRLSelector java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CRLSelector java.util.HashSet cloneAndCheckIssuerNames(java.util.Collection) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CRLSelector java.util.HashSet cloneIssuerNames(java.util.Collection) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CRLSelector java.util.HashSet parseIssuerNames(java.util.Collection) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CRLSelector void addIssuer(javax.security.auth.x500.X500Principal) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CRLSelector void addIssuerName(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CertSelector boolean match(java.security.cert.Certificate)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.security.cert.X509CertSelector boolean matchExcluded(sun.security.x509.GeneralSubtrees) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CertSelector java.lang.String keyUsageToString(boolean[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CertSelector java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CertSelector java.security.cert.Extension getExtensionObject(java.security.cert.X509Certificate, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CertSelector java.util.Set cloneAndCheckNames(java.util.Collection) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CertSelector java.util.Set cloneNames(java.util.Collection) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CertSelector java.util.Set cloneSet(java.util.Set) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CertSelector java.util.Set cloneSet(java.util.Set)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.security.cert.X509CertSelector java.util.Set parseNames(java.util.Collection) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CertSelector sun.security.x509.GeneralNameInterface makeGeneralNameInterface(int, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CertSelector sun.security.x509.GeneralNameInterface makeGeneralNameInterface(int, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CertSelector void addPathToName(int, byte[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CertSelector void addPathToName(int, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CertSelector void addPathToNameInternal(int, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CertSelector void addSubjectAlternativeName(int, byte[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CertSelector void addSubjectAlternativeName(int, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CertSelector void addSubjectAlternativeNameInternal(int, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
