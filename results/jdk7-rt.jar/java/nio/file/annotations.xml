<root>
  <item name="java.nio.file.CopyMoveHelper java.nio.file.CopyOption[] convertMoveToCopyOptions(java.nio.file.CopyOption...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.CopyMoveHelper void copyToForeignTarget(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.CopyMoveHelper void copyToForeignTarget(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.CopyMoveHelper void copyToForeignTarget(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption...) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.CopyMoveHelper void moveToForeignTarget(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.CopyMoveHelper void moveToForeignTarget(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.CopyMoveHelper void moveToForeignTarget(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption...) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.CopyMoveHelper.CopyOptions java.nio.file.CopyMoveHelper.CopyOptions parse(java.nio.file.CopyOption...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.DirectoryIteratorException DirectoryIteratorException(java.io.IOException) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.DirectoryIteratorException void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.FileStore V getFileStoreAttributeView(java.lang.Class&lt;V&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.FileStore boolean supportsFileAttributeView(java.lang.Class&lt;? extends java.nio.file.attribute.FileAttributeView&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.FileStore boolean supportsFileAttributeView(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.FileStore java.lang.Object getAttribute(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.FileSystem java.nio.file.Path getPath(java.lang.String, java.lang.String...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.FileSystem java.nio.file.PathMatcher getPathMatcher(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.FileSystems java.nio.file.FileSystem getFileSystem(java.net.URI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.FileSystems java.nio.file.FileSystem newFileSystem(java.net.URI, java.util.Map&lt;java.lang.String,?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.FileSystems java.nio.file.FileSystem newFileSystem(java.net.URI, java.util.Map&lt;java.lang.String,?&gt;, java.lang.ClassLoader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.FileSystems java.nio.file.FileSystem newFileSystem(java.nio.file.Path, java.lang.ClassLoader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.FileTreeWalker FileTreeWalker(java.util.Set&lt;java.nio.file.FileVisitOption&gt;, java.nio.file.FileVisitor&lt;? super java.nio.file.Path&gt;, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.FileVisitor java.nio.file.FileVisitResult postVisitDirectory(T, java.io.IOException) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.FileVisitor java.nio.file.FileVisitResult preVisitDirectory(T, java.nio.file.attribute.BasicFileAttributes) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.FileVisitor java.nio.file.FileVisitResult preVisitDirectory(T, java.nio.file.attribute.BasicFileAttributes) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.FileVisitor java.nio.file.FileVisitResult visitFile(T, java.nio.file.attribute.BasicFileAttributes) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.FileVisitor java.nio.file.FileVisitResult visitFile(T, java.nio.file.attribute.BasicFileAttributes) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.FileVisitor java.nio.file.FileVisitResult visitFileFailed(T, java.io.IOException) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files A readAttributes(java.nio.file.Path, java.lang.Class&lt;A&gt;, java.nio.file.LinkOption...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files A readAttributes(java.nio.file.Path, java.lang.Class&lt;A&gt;, java.nio.file.LinkOption...) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files V getFileAttributeView(java.nio.file.Path, java.lang.Class&lt;V&gt;, java.nio.file.LinkOption...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files V getFileAttributeView(java.nio.file.Path, java.lang.Class&lt;V&gt;, java.nio.file.LinkOption...) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files boolean deleteIfExists(java.nio.file.Path) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files boolean followLinks(java.nio.file.LinkOption...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files boolean isHidden(java.nio.file.Path) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files boolean isSameFile(java.nio.file.Path, java.nio.file.Path) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files byte[] read(java.io.InputStream, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files byte[] readAllBytes(java.nio.file.Path) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.io.BufferedReader newBufferedReader(java.nio.file.Path, java.nio.charset.Charset) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.io.BufferedReader newBufferedReader(java.nio.file.Path, java.nio.charset.Charset) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.io.BufferedWriter newBufferedWriter(java.nio.file.Path, java.nio.charset.Charset, java.nio.file.OpenOption...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.io.BufferedWriter newBufferedWriter(java.nio.file.Path, java.nio.charset.Charset, java.nio.file.OpenOption...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.io.BufferedWriter newBufferedWriter(java.nio.file.Path, java.nio.charset.Charset, java.nio.file.OpenOption...) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.io.InputStream newInputStream(java.nio.file.Path, java.nio.file.OpenOption...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.io.InputStream newInputStream(java.nio.file.Path, java.nio.file.OpenOption...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.io.OutputStream newOutputStream(java.nio.file.Path, java.nio.file.OpenOption...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.io.OutputStream newOutputStream(java.nio.file.Path, java.nio.file.OpenOption...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.lang.Object getAttribute(java.nio.file.Path, java.lang.String, java.nio.file.LinkOption...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.lang.Object getAttribute(java.nio.file.Path, java.lang.String, java.nio.file.LinkOption...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.lang.Object getAttribute(java.nio.file.Path, java.lang.String, java.nio.file.LinkOption...) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.lang.String probeContentType(java.nio.file.Path) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path, java.nio.file.OpenOption...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path, java.nio.file.OpenOption...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path, java.util.Set&lt;? extends java.nio.file.OpenOption&gt;, java.nio.file.attribute.FileAttribute&lt;?&gt;...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path, java.util.Set&lt;? extends java.nio.file.OpenOption&gt;, java.nio.file.attribute.FileAttribute&lt;?&gt;...) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.DirectoryStream&lt;java.nio.file.Path&gt; newDirectoryStream(java.nio.file.Path) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.DirectoryStream&lt;java.nio.file.Path&gt; newDirectoryStream(java.nio.file.Path, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.DirectoryStream&lt;java.nio.file.Path&gt; newDirectoryStream(java.nio.file.Path, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.DirectoryStream&lt;java.nio.file.Path&gt; newDirectoryStream(java.nio.file.Path, java.nio.file.DirectoryStream.Filter&lt;? super java.nio.file.Path&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.DirectoryStream&lt;java.nio.file.Path&gt; newDirectoryStream(java.nio.file.Path, java.nio.file.DirectoryStream.Filter&lt;? super java.nio.file.Path&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.FileStore getFileStore(java.nio.file.Path) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.Path copy(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.Path copy(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.Path copy(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption...) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.Path createDirectory(java.nio.file.Path, java.nio.file.attribute.FileAttribute&lt;?&gt;...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.Path createDirectory(java.nio.file.Path, java.nio.file.attribute.FileAttribute&lt;?&gt;...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.Path createFile(java.nio.file.Path, java.nio.file.attribute.FileAttribute&lt;?&gt;...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.Path createFile(java.nio.file.Path, java.nio.file.attribute.FileAttribute&lt;?&gt;...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.Path createLink(java.nio.file.Path, java.nio.file.Path) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.Path createSymbolicLink(java.nio.file.Path, java.nio.file.Path, java.nio.file.attribute.FileAttribute&lt;?&gt;...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.Path createTempDirectory(java.lang.String, java.nio.file.attribute.FileAttribute&lt;?&gt;...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.Path createTempDirectory(java.nio.file.Path, java.lang.String, java.nio.file.attribute.FileAttribute&lt;?&gt;...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.Path createTempDirectory(java.nio.file.Path, java.lang.String, java.nio.file.attribute.FileAttribute&lt;?&gt;...) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.Path createTempFile(java.lang.String, java.lang.String, java.nio.file.attribute.FileAttribute&lt;?&gt;...) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.Path createTempFile(java.nio.file.Path, java.lang.String, java.lang.String, java.nio.file.attribute.FileAttribute&lt;?&gt;...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.Path createTempFile(java.nio.file.Path, java.lang.String, java.lang.String, java.nio.file.attribute.FileAttribute&lt;?&gt;...) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.Path move(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.Path move(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.Path move(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption...) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.Path readSymbolicLink(java.nio.file.Path) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.Path setAttribute(java.nio.file.Path, java.lang.String, java.lang.Object, java.nio.file.LinkOption...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.Path setAttribute(java.nio.file.Path, java.lang.String, java.lang.Object, java.nio.file.LinkOption...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.Path setAttribute(java.nio.file.Path, java.lang.String, java.lang.Object, java.nio.file.LinkOption...) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.Path setLastModifiedTime(java.nio.file.Path, java.nio.file.attribute.FileTime) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.Path setOwner(java.nio.file.Path, java.nio.file.attribute.UserPrincipal) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.Path setPosixFilePermissions(java.nio.file.Path, java.util.Set&lt;java.nio.file.attribute.PosixFilePermission&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.Path walkFileTree(java.nio.file.Path, java.util.Set&lt;java.nio.file.FileVisitOption&gt;, int, java.nio.file.FileVisitor&lt;? super java.nio.file.Path&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.Path write(java.nio.file.Path, byte[], java.nio.file.OpenOption...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.Path write(java.nio.file.Path, byte[], java.nio.file.OpenOption...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.Path write(java.nio.file.Path, byte[], java.nio.file.OpenOption...) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.Path write(java.nio.file.Path, java.lang.Iterable&lt;? extends java.lang.CharSequence&gt;, java.nio.charset.Charset, java.nio.file.OpenOption...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.Path write(java.nio.file.Path, java.lang.Iterable&lt;? extends java.lang.CharSequence&gt;, java.nio.charset.Charset, java.nio.file.OpenOption...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.Path write(java.nio.file.Path, java.lang.Iterable&lt;? extends java.lang.CharSequence&gt;, java.nio.charset.Charset, java.nio.file.OpenOption...) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.Path write(java.nio.file.Path, java.lang.Iterable&lt;? extends java.lang.CharSequence&gt;, java.nio.charset.Charset, java.nio.file.OpenOption...) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.attribute.FileTime getLastModifiedTime(java.nio.file.Path, java.nio.file.LinkOption...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.attribute.FileTime getLastModifiedTime(java.nio.file.Path, java.nio.file.LinkOption...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.attribute.UserPrincipal getOwner(java.nio.file.Path, java.nio.file.LinkOption...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.attribute.UserPrincipal getOwner(java.nio.file.Path, java.nio.file.LinkOption...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.nio.file.spi.FileSystemProvider provider(java.nio.file.Path) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.util.List&lt;java.lang.String&gt; readAllLines(java.nio.file.Path, java.nio.charset.Charset) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.util.List&lt;java.lang.String&gt; readAllLines(java.nio.file.Path, java.nio.charset.Charset) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.util.Map&lt;java.lang.String,java.lang.Object&gt; readAttributes(java.nio.file.Path, java.lang.String, java.nio.file.LinkOption...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.util.Map&lt;java.lang.String,java.lang.Object&gt; readAttributes(java.nio.file.Path, java.lang.String, java.nio.file.LinkOption...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.util.Map&lt;java.lang.String,java.lang.Object&gt; readAttributes(java.nio.file.Path, java.lang.String, java.nio.file.LinkOption...) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.util.Set&lt;java.nio.file.attribute.PosixFilePermission&gt; getPosixFilePermissions(java.nio.file.Path, java.nio.file.LinkOption...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files java.util.Set&lt;java.nio.file.attribute.PosixFilePermission&gt; getPosixFilePermissions(java.nio.file.Path, java.nio.file.LinkOption...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files long copy(java.io.InputStream, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files long copy(java.io.InputStream, java.nio.file.Path, java.nio.file.CopyOption...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files long copy(java.io.InputStream, java.nio.file.Path, java.nio.file.CopyOption...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files long copy(java.io.InputStream, java.nio.file.Path, java.nio.file.CopyOption...) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files long copy(java.nio.file.Path, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files long copy(java.nio.file.Path, java.io.OutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files long size(java.nio.file.Path) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files void delete(java.nio.file.Path) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files.1 boolean accept(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Files.1 boolean accept(java.nio.file.Path) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.InvalidPathException InvalidPathException(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.InvalidPathException InvalidPathException(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.InvalidPathException InvalidPathException(java.lang.String, java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.InvalidPathException InvalidPathException(java.lang.String, java.lang.String, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.LinkPermission LinkPermission(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.LinkPermission LinkPermission(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.LinkPermission void checkName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.Path boolean endsWith(java.nio.file.Path) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.Path boolean startsWith(java.nio.file.Path) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.Path int compareTo(java.nio.file.Path) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.Path java.nio.file.Path relativize(java.nio.file.Path) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.Path java.nio.file.Path resolve(java.nio.file.Path) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.Path java.nio.file.Path resolveSibling(java.nio.file.Path) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.Path java.nio.file.Path toRealPath(java.nio.file.LinkOption...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.Path java.nio.file.WatchKey register(java.nio.file.WatchService, java.nio.file.WatchEvent.Kind&lt;?&gt;...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.Path java.nio.file.WatchKey register(java.nio.file.WatchService, java.nio.file.WatchEvent.Kind&lt;?&gt;...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.Path java.nio.file.WatchKey register(java.nio.file.WatchService, java.nio.file.WatchEvent.Kind&lt;?&gt;[], java.nio.file.WatchEvent.Modifier...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.Path java.nio.file.WatchKey register(java.nio.file.WatchService, java.nio.file.WatchEvent.Kind&lt;?&gt;[], java.nio.file.WatchEvent.Modifier...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.Path java.nio.file.WatchKey register(java.nio.file.WatchService, java.nio.file.WatchEvent.Kind&lt;?&gt;[], java.nio.file.WatchEvent.Modifier...) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.PathMatcher boolean matches(java.nio.file.Path) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Paths java.nio.file.Path get(java.lang.String, java.lang.String...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.Paths java.nio.file.Path get(java.net.URI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.SecureDirectoryStream V getFileAttributeView(T, java.lang.Class&lt;V&gt;, java.nio.file.LinkOption...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.SecureDirectoryStream V getFileAttributeView(T, java.lang.Class&lt;V&gt;, java.nio.file.LinkOption...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.SecureDirectoryStream V getFileAttributeView(T, java.lang.Class&lt;V&gt;, java.nio.file.LinkOption...) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.SecureDirectoryStream V getFileAttributeView(java.lang.Class&lt;V&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.SecureDirectoryStream java.nio.channels.SeekableByteChannel newByteChannel(T, java.util.Set&lt;? extends java.nio.file.OpenOption&gt;, java.nio.file.attribute.FileAttribute&lt;?&gt;...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.SecureDirectoryStream java.nio.channels.SeekableByteChannel newByteChannel(T, java.util.Set&lt;? extends java.nio.file.OpenOption&gt;, java.nio.file.attribute.FileAttribute&lt;?&gt;...) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.SecureDirectoryStream java.nio.file.SecureDirectoryStream&lt;T&gt; newDirectoryStream(T, java.nio.file.LinkOption...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.SecureDirectoryStream java.nio.file.SecureDirectoryStream&lt;T&gt; newDirectoryStream(T, java.nio.file.LinkOption...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.SecureDirectoryStream void deleteDirectory(T) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.SecureDirectoryStream void deleteFile(T) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.SecureDirectoryStream void move(T, java.nio.file.SecureDirectoryStream&lt;T&gt;, T) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.SecureDirectoryStream void move(T, java.nio.file.SecureDirectoryStream&lt;T&gt;, T) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.SecureDirectoryStream void move(T, java.nio.file.SecureDirectoryStream&lt;T&gt;, T) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual java.nio.file.SimpleFileVisitor java.nio.file.FileVisitResult postVisitDirectory(T, java.io.IOException) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.SimpleFileVisitor java.nio.file.FileVisitResult postVisitDirectory(T, java.io.IOException) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.SimpleFileVisitor java.nio.file.FileVisitResult preVisitDirectory(T, java.nio.file.attribute.BasicFileAttributes) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual java.nio.file.SimpleFileVisitor java.nio.file.FileVisitResult preVisitDirectory(T, java.nio.file.attribute.BasicFileAttributes) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.SimpleFileVisitor java.nio.file.FileVisitResult preVisitDirectory(T, java.nio.file.attribute.BasicFileAttributes) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual java.nio.file.SimpleFileVisitor java.nio.file.FileVisitResult preVisitDirectory(T, java.nio.file.attribute.BasicFileAttributes) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual java.nio.file.SimpleFileVisitor java.nio.file.FileVisitResult visitFile(T, java.nio.file.attribute.BasicFileAttributes) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.SimpleFileVisitor java.nio.file.FileVisitResult visitFile(T, java.nio.file.attribute.BasicFileAttributes) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.SimpleFileVisitor java.nio.file.FileVisitResult visitFile(T, java.nio.file.attribute.BasicFileAttributes) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual java.nio.file.SimpleFileVisitor java.nio.file.FileVisitResult visitFile(T, java.nio.file.attribute.BasicFileAttributes) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual java.nio.file.SimpleFileVisitor java.nio.file.FileVisitResult visitFileFailed(T, java.io.IOException) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.SimpleFileVisitor java.nio.file.FileVisitResult visitFileFailed(T, java.io.IOException) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.TempFileHelper java.nio.file.Path create(java.nio.file.Path, java.lang.String, java.lang.String, boolean, java.nio.file.attribute.FileAttribute[]) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.TempFileHelper java.nio.file.Path createTempDirectory(java.nio.file.Path, java.lang.String, java.nio.file.attribute.FileAttribute[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.TempFileHelper java.nio.file.Path createTempFile(java.nio.file.Path, java.lang.String, java.lang.String, java.nio.file.attribute.FileAttribute[]) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.TempFileHelper java.nio.file.Path generatePath(java.lang.String, java.lang.String, java.nio.file.Path) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.WatchService java.nio.file.WatchKey poll(long, java.util.concurrent.TimeUnit) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.Watchable java.nio.file.WatchKey register(java.nio.file.WatchService, java.nio.file.WatchEvent.Kind&lt;?&gt;...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.Watchable java.nio.file.WatchKey register(java.nio.file.WatchService, java.nio.file.WatchEvent.Kind&lt;?&gt;...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.Watchable java.nio.file.WatchKey register(java.nio.file.WatchService, java.nio.file.WatchEvent.Kind&lt;?&gt;[], java.nio.file.WatchEvent.Modifier...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.Watchable java.nio.file.WatchKey register(java.nio.file.WatchService, java.nio.file.WatchEvent.Kind&lt;?&gt;[], java.nio.file.WatchEvent.Modifier...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.Watchable java.nio.file.WatchKey register(java.nio.file.WatchService, java.nio.file.WatchEvent.Kind&lt;?&gt;[], java.nio.file.WatchEvent.Modifier...) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
