<root>
  <item name="abstract virtual java.nio.file.spi.FileSystemProvider A readAttributes(java.nio.file.Path, java.lang.Class&lt;A&gt;, java.nio.file.LinkOption...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.spi.FileSystemProvider A readAttributes(java.nio.file.Path, java.lang.Class&lt;A&gt;, java.nio.file.LinkOption...) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.spi.FileSystemProvider FileSystemProvider(java.lang.Void) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.file.spi.FileSystemProvider FileSystemProvider(java.lang.Void)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual java.nio.file.spi.FileSystemProvider V getFileAttributeView(java.nio.file.Path, java.lang.Class&lt;V&gt;, java.nio.file.LinkOption...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.spi.FileSystemProvider V getFileAttributeView(java.nio.file.Path, java.lang.Class&lt;V&gt;, java.nio.file.LinkOption...) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.spi.FileSystemProvider boolean isHidden(java.nio.file.Path) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.spi.FileSystemProvider boolean isSameFile(java.nio.file.Path, java.nio.file.Path) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.spi.FileSystemProvider java.io.InputStream newInputStream(java.nio.file.Path, java.nio.file.OpenOption...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual java.nio.file.spi.FileSystemProvider java.io.InputStream newInputStream(java.nio.file.Path, java.nio.file.OpenOption...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual java.nio.file.spi.FileSystemProvider java.io.InputStream newInputStream(java.nio.file.Path, java.nio.file.OpenOption...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.spi.FileSystemProvider java.io.InputStream newInputStream(java.nio.file.Path, java.nio.file.OpenOption...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.spi.FileSystemProvider java.io.InputStream newInputStream(java.nio.file.Path, java.nio.file.OpenOption...)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual java.nio.file.spi.FileSystemProvider java.io.OutputStream newOutputStream(java.nio.file.Path, java.nio.file.OpenOption...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.spi.FileSystemProvider java.io.OutputStream newOutputStream(java.nio.file.Path, java.nio.file.OpenOption...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual java.nio.file.spi.FileSystemProvider java.io.OutputStream newOutputStream(java.nio.file.Path, java.nio.file.OpenOption...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.spi.FileSystemProvider java.io.OutputStream newOutputStream(java.nio.file.Path, java.nio.file.OpenOption...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.spi.FileSystemProvider java.io.OutputStream newOutputStream(java.nio.file.Path, java.nio.file.OpenOption...)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.spi.FileSystemProvider java.lang.Void checkPermission()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.file.spi.FileSystemProvider java.nio.channels.AsynchronousFileChannel newAsynchronousFileChannel(java.nio.file.Path, java.util.Set&lt;? extends java.nio.file.OpenOption&gt;, java.util.concurrent.ExecutorService, java.nio.file.attribute.FileAttribute&lt;?&gt;...) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.file.spi.FileSystemProvider java.nio.channels.AsynchronousFileChannel newAsynchronousFileChannel(java.nio.file.Path, java.util.Set&lt;? extends java.nio.file.OpenOption&gt;, java.util.concurrent.ExecutorService, java.nio.file.attribute.FileAttribute&lt;?&gt;...) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.file.spi.FileSystemProvider java.nio.channels.AsynchronousFileChannel newAsynchronousFileChannel(java.nio.file.Path, java.util.Set&lt;? extends java.nio.file.OpenOption&gt;, java.util.concurrent.ExecutorService, java.nio.file.attribute.FileAttribute&lt;?&gt;...) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.file.spi.FileSystemProvider java.nio.channels.AsynchronousFileChannel newAsynchronousFileChannel(java.nio.file.Path, java.util.Set&lt;? extends java.nio.file.OpenOption&gt;, java.util.concurrent.ExecutorService, java.nio.file.attribute.FileAttribute&lt;?&gt;...) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.file.spi.FileSystemProvider java.nio.channels.FileChannel newFileChannel(java.nio.file.Path, java.util.Set&lt;? extends java.nio.file.OpenOption&gt;, java.nio.file.attribute.FileAttribute&lt;?&gt;...) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.file.spi.FileSystemProvider java.nio.channels.FileChannel newFileChannel(java.nio.file.Path, java.util.Set&lt;? extends java.nio.file.OpenOption&gt;, java.nio.file.attribute.FileAttribute&lt;?&gt;...) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.file.spi.FileSystemProvider java.nio.channels.FileChannel newFileChannel(java.nio.file.Path, java.util.Set&lt;? extends java.nio.file.OpenOption&gt;, java.nio.file.attribute.FileAttribute&lt;?&gt;...) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual java.nio.file.spi.FileSystemProvider java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path, java.util.Set&lt;? extends java.nio.file.OpenOption&gt;, java.nio.file.attribute.FileAttribute&lt;?&gt;...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.spi.FileSystemProvider java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path, java.util.Set&lt;? extends java.nio.file.OpenOption&gt;, java.nio.file.attribute.FileAttribute&lt;?&gt;...) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.spi.FileSystemProvider java.nio.file.DirectoryStream&lt;java.nio.file.Path&gt; newDirectoryStream(java.nio.file.Path, java.nio.file.DirectoryStream.Filter&lt;? super java.nio.file.Path&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.spi.FileSystemProvider java.nio.file.DirectoryStream&lt;java.nio.file.Path&gt; newDirectoryStream(java.nio.file.Path, java.nio.file.DirectoryStream.Filter&lt;? super java.nio.file.Path&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.spi.FileSystemProvider java.nio.file.FileStore getFileStore(java.nio.file.Path) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.spi.FileSystemProvider java.nio.file.FileSystem getFileSystem(java.net.URI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.spi.FileSystemProvider java.nio.file.FileSystem newFileSystem(java.net.URI, java.util.Map&lt;java.lang.String,?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.spi.FileSystemProvider java.nio.file.FileSystem newFileSystem(java.nio.file.Path, java.util.Map&lt;java.lang.String,?&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.file.spi.FileSystemProvider java.nio.file.FileSystem newFileSystem(java.nio.file.Path, java.util.Map&lt;java.lang.String,?&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual java.nio.file.spi.FileSystemProvider java.nio.file.Path getPath(java.net.URI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.spi.FileSystemProvider java.nio.file.Path readSymbolicLink(java.nio.file.Path) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.file.spi.FileSystemProvider java.util.List access$000()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.spi.FileSystemProvider java.util.List&lt;java.nio.file.spi.FileSystemProvider&gt; loadInstalledProviders()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.spi.FileSystemProvider java.util.Map&lt;java.lang.String,java.lang.Object&gt; readAttributes(java.nio.file.Path, java.lang.String, java.nio.file.LinkOption...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.spi.FileSystemProvider java.util.Map&lt;java.lang.String,java.lang.Object&gt; readAttributes(java.nio.file.Path, java.lang.String, java.nio.file.LinkOption...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.spi.FileSystemProvider java.util.Map&lt;java.lang.String,java.lang.Object&gt; readAttributes(java.nio.file.Path, java.lang.String, java.nio.file.LinkOption...) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.spi.FileSystemProvider void checkAccess(java.nio.file.Path, java.nio.file.AccessMode...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.spi.FileSystemProvider void checkAccess(java.nio.file.Path, java.nio.file.AccessMode...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.spi.FileSystemProvider void copy(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.spi.FileSystemProvider void copy(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.spi.FileSystemProvider void copy(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption...) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.spi.FileSystemProvider void createDirectory(java.nio.file.Path, java.nio.file.attribute.FileAttribute&lt;?&gt;...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.spi.FileSystemProvider void createDirectory(java.nio.file.Path, java.nio.file.attribute.FileAttribute&lt;?&gt;...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.spi.FileSystemProvider void createLink(java.nio.file.Path, java.nio.file.Path) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.file.spi.FileSystemProvider void createLink(java.nio.file.Path, java.nio.file.Path) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.file.spi.FileSystemProvider void createSymbolicLink(java.nio.file.Path, java.nio.file.Path, java.nio.file.attribute.FileAttribute&lt;?&gt;...) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.file.spi.FileSystemProvider void createSymbolicLink(java.nio.file.Path, java.nio.file.Path, java.nio.file.attribute.FileAttribute&lt;?&gt;...) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.file.spi.FileSystemProvider void createSymbolicLink(java.nio.file.Path, java.nio.file.Path, java.nio.file.attribute.FileAttribute&lt;?&gt;...) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual java.nio.file.spi.FileSystemProvider void delete(java.nio.file.Path) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.spi.FileSystemProvider void move(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.spi.FileSystemProvider void move(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.spi.FileSystemProvider void move(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption...) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.spi.FileSystemProvider void setAttribute(java.nio.file.Path, java.lang.String, java.lang.Object, java.nio.file.LinkOption...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.spi.FileSystemProvider void setAttribute(java.nio.file.Path, java.lang.String, java.lang.Object, java.nio.file.LinkOption...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.file.spi.FileSystemProvider void setAttribute(java.nio.file.Path, java.lang.String, java.lang.Object, java.nio.file.LinkOption...) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.spi.FileSystemProvider.1 1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.nio.file.spi.FileSystemProvider.1 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.spi.FileSystemProvider.1 java.util.List&lt;java.nio.file.spi.FileSystemProvider&gt; run()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.spi.FileTypeDetector FileTypeDetector(java.lang.Void) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.file.spi.FileTypeDetector FileTypeDetector(java.lang.Void)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual java.nio.file.spi.FileTypeDetector java.lang.String probeContentType(java.nio.file.Path) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.file.spi.FileTypeDetector java.lang.Void checkPermission()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
</root>
