<root>
  <item name="abstract virtual java.nio.channels.AsynchronousByteChannel java.util.concurrent.Future&lt;java.lang.Integer&gt; read(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.AsynchronousByteChannel void read(java.nio.ByteBuffer, A, java.nio.channels.CompletionHandler&lt;java.lang.Integer,? super A&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.AsynchronousByteChannel void read(java.nio.ByteBuffer, A, java.nio.channels.CompletionHandler&lt;java.lang.Integer,? super A&gt;) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.AsynchronousByteChannel void write(java.nio.ByteBuffer, A, java.nio.channels.CompletionHandler&lt;java.lang.Integer,? super A&gt;) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.AsynchronousChannelGroup java.nio.channels.AsynchronousChannelGroup withCachedThreadPool(java.util.concurrent.ExecutorService, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.AsynchronousChannelGroup java.nio.channels.AsynchronousChannelGroup withCachedThreadPool(java.util.concurrent.ExecutorService, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.AsynchronousChannelGroup java.nio.channels.AsynchronousChannelGroup withFixedThreadPool(int, java.util.concurrent.ThreadFactory) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.AsynchronousChannelGroup java.nio.channels.AsynchronousChannelGroup withFixedThreadPool(int, java.util.concurrent.ThreadFactory)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.AsynchronousChannelGroup java.nio.channels.AsynchronousChannelGroup withThreadPool(java.util.concurrent.ExecutorService) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.AsynchronousChannelGroup java.nio.channels.AsynchronousChannelGroup withThreadPool(java.util.concurrent.ExecutorService)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.AsynchronousChannelGroup java.nio.channels.spi.AsynchronousChannelProvider provider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.nio.channels.AsynchronousFileChannel AsynchronousFileChannel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.nio.channels.AsynchronousFileChannel java.nio.channels.AsynchronousFileChannel open(java.nio.file.Path, java.nio.file.OpenOption...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.AsynchronousFileChannel java.nio.channels.AsynchronousFileChannel open(java.nio.file.Path, java.nio.file.OpenOption...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.AsynchronousFileChannel java.nio.channels.AsynchronousFileChannel open(java.nio.file.Path, java.nio.file.OpenOption...)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.channels.AsynchronousFileChannel java.nio.channels.AsynchronousFileChannel open(java.nio.file.Path, java.util.Set&lt;? extends java.nio.file.OpenOption&gt;, java.util.concurrent.ExecutorService, java.nio.file.attribute.FileAttribute&lt;?&gt;...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.AsynchronousFileChannel java.nio.channels.AsynchronousFileChannel open(java.nio.file.Path, java.util.Set&lt;? extends java.nio.file.OpenOption&gt;, java.util.concurrent.ExecutorService, java.nio.file.attribute.FileAttribute&lt;?&gt;...) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.channels.AsynchronousFileChannel java.nio.channels.AsynchronousFileChannel open(java.nio.file.Path, java.util.Set&lt;? extends java.nio.file.OpenOption&gt;, java.util.concurrent.ExecutorService, java.nio.file.attribute.FileAttribute&lt;?&gt;...)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="abstract virtual java.nio.channels.AsynchronousFileChannel java.nio.channels.AsynchronousFileChannel truncate(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.AsynchronousFileChannel java.util.concurrent.Future&lt;java.lang.Integer&gt; read(java.nio.ByteBuffer, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.AsynchronousFileChannel void lock(A, java.nio.channels.CompletionHandler&lt;java.nio.channels.FileLock,? super A&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.AsynchronousFileChannel void lock(long, long, boolean, A, java.nio.channels.CompletionHandler&lt;java.nio.channels.FileLock,? super A&gt;) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.AsynchronousFileChannel void read(java.nio.ByteBuffer, long, A, java.nio.channels.CompletionHandler&lt;java.lang.Integer,? super A&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.AsynchronousFileChannel void read(java.nio.ByteBuffer, long, A, java.nio.channels.CompletionHandler&lt;java.lang.Integer,? super A&gt;) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.AsynchronousFileChannel void write(java.nio.ByteBuffer, long, A, java.nio.channels.CompletionHandler&lt;java.lang.Integer,? super A&gt;) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.AsynchronousServerSocketChannel java.nio.channels.AsynchronousServerSocketChannel bind(java.net.SocketAddress)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.AsynchronousServerSocketChannel java.nio.channels.AsynchronousServerSocketChannel bind(java.net.SocketAddress, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.AsynchronousServerSocketChannel java.nio.channels.AsynchronousServerSocketChannel open()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.AsynchronousServerSocketChannel java.nio.channels.AsynchronousServerSocketChannel open(java.nio.channels.AsynchronousChannelGroup) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.channels.AsynchronousServerSocketChannel java.nio.channels.AsynchronousServerSocketChannel open(java.nio.channels.AsynchronousChannelGroup)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.AsynchronousServerSocketChannel java.nio.channels.AsynchronousServerSocketChannel setOption(java.net.SocketOption&lt;T&gt;, T) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.AsynchronousServerSocketChannel java.nio.channels.AsynchronousServerSocketChannel setOption(java.net.SocketOption&lt;T&gt;, T) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.AsynchronousServerSocketChannel java.nio.channels.AsynchronousServerSocketChannel setOption(java.net.SocketOption&lt;T&gt;, T)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual java.nio.channels.AsynchronousServerSocketChannel java.nio.channels.NetworkChannel bind(java.net.SocketAddress)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.AsynchronousServerSocketChannel java.nio.channels.NetworkChannel bind(java.net.SocketAddress)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual java.nio.channels.AsynchronousServerSocketChannel java.nio.channels.NetworkChannel setOption(java.net.SocketOption, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.AsynchronousServerSocketChannel java.nio.channels.NetworkChannel setOption(java.net.SocketOption, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual java.nio.channels.AsynchronousServerSocketChannel java.nio.channels.NetworkChannel setOption(java.net.SocketOption, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.AsynchronousServerSocketChannel java.nio.channels.NetworkChannel setOption(java.net.SocketOption, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.AsynchronousServerSocketChannel java.nio.channels.NetworkChannel setOption(java.net.SocketOption, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual java.nio.channels.AsynchronousServerSocketChannel java.nio.channels.NetworkChannel setOption(java.net.SocketOption, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.AsynchronousServerSocketChannel java.nio.channels.spi.AsynchronousChannelProvider provider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual java.nio.channels.AsynchronousServerSocketChannel void accept(A, java.nio.channels.CompletionHandler&lt;java.nio.channels.AsynchronousSocketChannel,? super A&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.AsynchronousSocketChannel java.nio.channels.AsynchronousSocketChannel bind(java.net.SocketAddress)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.AsynchronousSocketChannel java.nio.channels.AsynchronousSocketChannel open()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.AsynchronousSocketChannel java.nio.channels.AsynchronousSocketChannel open(java.nio.channels.AsynchronousChannelGroup) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.channels.AsynchronousSocketChannel java.nio.channels.AsynchronousSocketChannel open(java.nio.channels.AsynchronousChannelGroup)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.AsynchronousSocketChannel java.nio.channels.AsynchronousSocketChannel setOption(java.net.SocketOption&lt;T&gt;, T) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.AsynchronousSocketChannel java.nio.channels.AsynchronousSocketChannel setOption(java.net.SocketOption&lt;T&gt;, T) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.AsynchronousSocketChannel java.nio.channels.AsynchronousSocketChannel setOption(java.net.SocketOption&lt;T&gt;, T)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.AsynchronousSocketChannel java.nio.channels.AsynchronousSocketChannel shutdownInput()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.AsynchronousSocketChannel java.nio.channels.AsynchronousSocketChannel shutdownOutput()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.AsynchronousSocketChannel java.nio.channels.NetworkChannel bind(java.net.SocketAddress)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual java.nio.channels.AsynchronousSocketChannel java.nio.channels.NetworkChannel bind(java.net.SocketAddress)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.AsynchronousSocketChannel java.nio.channels.NetworkChannel setOption(java.net.SocketOption, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual java.nio.channels.AsynchronousSocketChannel java.nio.channels.NetworkChannel setOption(java.net.SocketOption, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual java.nio.channels.AsynchronousSocketChannel java.nio.channels.NetworkChannel setOption(java.net.SocketOption, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.AsynchronousSocketChannel java.nio.channels.NetworkChannel setOption(java.net.SocketOption, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual java.nio.channels.AsynchronousSocketChannel java.nio.channels.NetworkChannel setOption(java.net.SocketOption, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.AsynchronousSocketChannel java.nio.channels.NetworkChannel setOption(java.net.SocketOption, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.AsynchronousSocketChannel java.nio.channels.spi.AsynchronousChannelProvider provider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual java.nio.channels.AsynchronousSocketChannel java.util.concurrent.Future&lt;java.lang.Integer&gt; read(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.AsynchronousSocketChannel void connect(java.net.SocketAddress, A, java.nio.channels.CompletionHandler&lt;java.lang.Void,? super A&gt;) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.AsynchronousSocketChannel void read(java.nio.ByteBuffer, A, java.nio.channels.CompletionHandler&lt;java.lang.Integer,? super A&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.AsynchronousSocketChannel void read(java.nio.ByteBuffer, A, java.nio.channels.CompletionHandler&lt;java.lang.Integer,? super A&gt;) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.AsynchronousSocketChannel void read(java.nio.ByteBuffer, long, java.util.concurrent.TimeUnit, A, java.nio.channels.CompletionHandler&lt;java.lang.Integer,? super A&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.AsynchronousSocketChannel void read(java.nio.ByteBuffer, long, java.util.concurrent.TimeUnit, A, java.nio.channels.CompletionHandler&lt;java.lang.Integer,? super A&gt;) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.AsynchronousSocketChannel void read(java.nio.ByteBuffer[], int, int, long, java.util.concurrent.TimeUnit, A, java.nio.channels.CompletionHandler&lt;java.lang.Long,? super A&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.AsynchronousSocketChannel void read(java.nio.ByteBuffer[], int, int, long, java.util.concurrent.TimeUnit, A, java.nio.channels.CompletionHandler&lt;java.lang.Long,? super A&gt;) 6">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.AsynchronousSocketChannel void write(java.nio.ByteBuffer, A, java.nio.channels.CompletionHandler&lt;java.lang.Integer,? super A&gt;) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.AsynchronousSocketChannel void write(java.nio.ByteBuffer, long, java.util.concurrent.TimeUnit, A, java.nio.channels.CompletionHandler&lt;java.lang.Integer,? super A&gt;) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.AsynchronousSocketChannel void write(java.nio.ByteBuffer[], int, int, long, java.util.concurrent.TimeUnit, A, java.nio.channels.CompletionHandler&lt;java.lang.Long,? super A&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.AsynchronousSocketChannel void write(java.nio.ByteBuffer[], int, int, long, java.util.concurrent.TimeUnit, A, java.nio.channels.CompletionHandler&lt;java.lang.Long,? super A&gt;) 6">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels Channels()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.nio.channels.Channels java.io.InputStream newInputStream(java.nio.channels.AsynchronousByteChannel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.io.InputStream newInputStream(java.nio.channels.AsynchronousByteChannel)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.io.InputStream newInputStream(java.nio.channels.ReadableByteChannel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.io.InputStream newInputStream(java.nio.channels.ReadableByteChannel)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.io.OutputStream newOutputStream(java.nio.channels.AsynchronousByteChannel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.io.OutputStream newOutputStream(java.nio.channels.AsynchronousByteChannel)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.io.OutputStream newOutputStream(java.nio.channels.WritableByteChannel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.io.OutputStream newOutputStream(java.nio.channels.WritableByteChannel)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.io.Reader newReader(java.nio.channels.ReadableByteChannel, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.io.Reader newReader(java.nio.channels.ReadableByteChannel, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.io.Reader newReader(java.nio.channels.ReadableByteChannel, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.io.Reader newReader(java.nio.channels.ReadableByteChannel, java.nio.charset.CharsetDecoder, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.io.Reader newReader(java.nio.channels.ReadableByteChannel, java.nio.charset.CharsetDecoder, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.io.Reader newReader(java.nio.channels.ReadableByteChannel, java.nio.charset.CharsetDecoder, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.io.Writer newWriter(java.nio.channels.WritableByteChannel, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.io.Writer newWriter(java.nio.channels.WritableByteChannel, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.io.Writer newWriter(java.nio.channels.WritableByteChannel, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.io.Writer newWriter(java.nio.channels.WritableByteChannel, java.nio.charset.CharsetEncoder, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.io.Writer newWriter(java.nio.channels.WritableByteChannel, java.nio.charset.CharsetEncoder, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.io.Writer newWriter(java.nio.channels.WritableByteChannel, java.nio.charset.CharsetEncoder, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.nio.channels.ReadableByteChannel newChannel(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.nio.channels.ReadableByteChannel newChannel(java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.channels.Channels java.nio.channels.WritableByteChannel newChannel(java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.nio.channels.WritableByteChannel newChannel(java.io.OutputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.channels.Channels void access$000(java.nio.channels.WritableByteChannel, java.nio.ByteBuffer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels void checkNotNull(java.lang.Object, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels void checkNotNull(java.lang.Object, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.channels.Channels void writeFully(java.nio.channels.WritableByteChannel, java.nio.ByteBuffer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels void writeFullyImpl(java.nio.channels.WritableByteChannel, java.nio.ByteBuffer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels.1 void write(byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels.2 int read(byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels.3 void write(byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels.ReadableByteChannelImpl int read(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual java.nio.channels.Channels.ReadableByteChannelImpl int read(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual java.nio.channels.Channels.WritableByteChannelImpl int write(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels.WritableByteChannelImpl int write(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.DatagramChannel int read(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.DatagramChannel int send(java.nio.ByteBuffer, java.net.SocketAddress) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.DatagramChannel int send(java.nio.ByteBuffer, java.net.SocketAddress) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.DatagramChannel int validOps()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual java.nio.channels.DatagramChannel int write(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.DatagramChannel java.net.SocketAddress receive(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.DatagramChannel java.nio.channels.DatagramChannel bind(java.net.SocketAddress)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.DatagramChannel java.nio.channels.DatagramChannel connect(java.net.SocketAddress) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.DatagramChannel java.nio.channels.DatagramChannel connect(java.net.SocketAddress)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.DatagramChannel java.nio.channels.DatagramChannel disconnect()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.DatagramChannel java.nio.channels.DatagramChannel open()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.DatagramChannel java.nio.channels.DatagramChannel open(java.net.ProtocolFamily)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.DatagramChannel java.nio.channels.DatagramChannel setOption(java.net.SocketOption&lt;T&gt;, T) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.DatagramChannel java.nio.channels.DatagramChannel setOption(java.net.SocketOption&lt;T&gt;, T)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual java.nio.channels.DatagramChannel java.nio.channels.NetworkChannel bind(java.net.SocketAddress)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.DatagramChannel java.nio.channels.NetworkChannel bind(java.net.SocketAddress)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual java.nio.channels.DatagramChannel java.nio.channels.NetworkChannel setOption(java.net.SocketOption, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.DatagramChannel java.nio.channels.NetworkChannel setOption(java.net.SocketOption, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual java.nio.channels.DatagramChannel java.nio.channels.NetworkChannel setOption(java.net.SocketOption, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.DatagramChannel java.nio.channels.NetworkChannel setOption(java.net.SocketOption, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.DatagramChannel long read(java.nio.ByteBuffer[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.DatagramChannel long read(java.nio.ByteBuffer[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.DatagramChannel long write(java.nio.ByteBuffer[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.DatagramChannel long write(java.nio.ByteBuffer[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.FileChannel int read(java.nio.ByteBuffer, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.FileChannel int write(java.nio.ByteBuffer, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.FileChannel java.nio.MappedByteBuffer map(java.nio.channels.FileChannel.MapMode, long, long) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.channels.FileChannel java.nio.channels.FileChannel open(java.nio.file.Path, java.nio.file.OpenOption...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.FileChannel java.nio.channels.FileChannel open(java.nio.file.Path, java.nio.file.OpenOption...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.FileChannel java.nio.channels.FileChannel open(java.nio.file.Path, java.nio.file.OpenOption...)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.channels.FileChannel java.nio.channels.FileChannel open(java.nio.file.Path, java.util.Set&lt;? extends java.nio.file.OpenOption&gt;, java.nio.file.attribute.FileAttribute&lt;?&gt;...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.FileChannel java.nio.channels.FileChannel open(java.nio.file.Path, java.util.Set&lt;? extends java.nio.file.OpenOption&gt;, java.nio.file.attribute.FileAttribute&lt;?&gt;...)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.channels.FileChannel long read(java.nio.ByteBuffer[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.FileChannel long read(java.nio.ByteBuffer[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.FileChannel long transferFrom(java.nio.channels.ReadableByteChannel, long, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.FileChannel long transferTo(long, long, java.nio.channels.WritableByteChannel) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.FileChannel long write(java.nio.ByteBuffer[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.FileChannel long write(java.nio.ByteBuffer[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.FileChannel.MapMode java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.nio.channels.FileLock boolean isShared()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.nio.channels.FileLock boolean overlaps(long, long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.nio.channels.FileLock java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.FileLock java.nio.channels.Channel acquiredBy()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.nio.channels.FileLock java.nio.channels.FileChannel channel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.channels.FileLock long position()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.nio.channels.FileLock long size()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual java.nio.channels.GatheringByteChannel long write(java.nio.ByteBuffer[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.GatheringByteChannel long write(java.nio.ByteBuffer[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.MembershipKey MembershipKey()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual java.nio.channels.MembershipKey java.nio.channels.MembershipKey block(java.net.InetAddress)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.MembershipKey java.nio.channels.MembershipKey unblock(java.net.InetAddress) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.MembershipKey java.nio.channels.MembershipKey unblock(java.net.InetAddress)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.MulticastChannel java.nio.channels.MembershipKey join(java.net.InetAddress, java.net.NetworkInterface) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.MulticastChannel java.nio.channels.MembershipKey join(java.net.InetAddress, java.net.NetworkInterface)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.MulticastChannel java.nio.channels.MembershipKey join(java.net.InetAddress, java.net.NetworkInterface, java.net.InetAddress) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.MulticastChannel java.nio.channels.MembershipKey join(java.net.InetAddress, java.net.NetworkInterface, java.net.InetAddress) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.MulticastChannel java.nio.channels.MembershipKey join(java.net.InetAddress, java.net.NetworkInterface, java.net.InetAddress)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.NetworkChannel T getOption(java.net.SocketOption&lt;T&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.NetworkChannel java.nio.channels.NetworkChannel bind(java.net.SocketAddress)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.NetworkChannel java.nio.channels.NetworkChannel setOption(java.net.SocketOption&lt;T&gt;, T) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.NetworkChannel java.nio.channels.NetworkChannel setOption(java.net.SocketOption&lt;T&gt;, T)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Pipe Pipe()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.nio.channels.Pipe java.nio.channels.Pipe open()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Pipe.SinkChannel int validOps()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.nio.channels.Pipe.SourceChannel int validOps()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual java.nio.channels.ScatteringByteChannel long read(java.nio.ByteBuffer[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.ScatteringByteChannel long read(java.nio.ByteBuffer[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.SelectableChannel java.nio.channels.SelectableChannel configureBlocking(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.SelectableChannel java.nio.channels.SelectionKey keyFor(java.nio.channels.Selector) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.channels.SelectableChannel java.nio.channels.SelectionKey register(java.nio.channels.Selector, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.SelectableChannel java.nio.channels.SelectionKey register(java.nio.channels.Selector, int, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.SelectionKey java.lang.Object attachment()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual java.nio.channels.SelectionKey java.nio.channels.SelectionKey interestOps(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Selector Selector()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.nio.channels.Selector java.nio.channels.Selector open()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.Selector java.nio.channels.Selector wakeup()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.ServerSocketChannel int validOps()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="virtual java.nio.channels.ServerSocketChannel java.nio.channels.NetworkChannel bind(java.net.SocketAddress)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.ServerSocketChannel java.nio.channels.NetworkChannel bind(java.net.SocketAddress)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual java.nio.channels.ServerSocketChannel java.nio.channels.NetworkChannel setOption(java.net.SocketOption, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.ServerSocketChannel java.nio.channels.NetworkChannel setOption(java.net.SocketOption, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual java.nio.channels.ServerSocketChannel java.nio.channels.NetworkChannel setOption(java.net.SocketOption, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.ServerSocketChannel java.nio.channels.NetworkChannel setOption(java.net.SocketOption, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual java.nio.channels.ServerSocketChannel java.nio.channels.NetworkChannel setOption(java.net.SocketOption, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.ServerSocketChannel java.nio.channels.NetworkChannel setOption(java.net.SocketOption, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.ServerSocketChannel java.nio.channels.ServerSocketChannel bind(java.net.SocketAddress)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.ServerSocketChannel java.nio.channels.ServerSocketChannel bind(java.net.SocketAddress, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.ServerSocketChannel java.nio.channels.ServerSocketChannel open()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.ServerSocketChannel java.nio.channels.ServerSocketChannel setOption(java.net.SocketOption&lt;T&gt;, T) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.ServerSocketChannel java.nio.channels.ServerSocketChannel setOption(java.net.SocketOption&lt;T&gt;, T) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.ServerSocketChannel java.nio.channels.ServerSocketChannel setOption(java.net.SocketOption&lt;T&gt;, T)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.SocketChannel boolean connect(java.net.SocketAddress) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.SocketChannel int read(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.SocketChannel int validOps()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual java.nio.channels.SocketChannel int write(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual java.nio.channels.SocketChannel java.nio.channels.NetworkChannel bind(java.net.SocketAddress)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.SocketChannel java.nio.channels.NetworkChannel bind(java.net.SocketAddress)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual java.nio.channels.SocketChannel java.nio.channels.NetworkChannel setOption(java.net.SocketOption, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.SocketChannel java.nio.channels.NetworkChannel setOption(java.net.SocketOption, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.SocketChannel java.nio.channels.NetworkChannel setOption(java.net.SocketOption, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual java.nio.channels.SocketChannel java.nio.channels.NetworkChannel setOption(java.net.SocketOption, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.SocketChannel java.nio.channels.SocketChannel bind(java.net.SocketAddress)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.SocketChannel java.nio.channels.SocketChannel open()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.SocketChannel java.nio.channels.SocketChannel open(java.net.SocketAddress) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.SocketChannel java.nio.channels.SocketChannel open(java.net.SocketAddress)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.SocketChannel java.nio.channels.SocketChannel setOption(java.net.SocketOption&lt;T&gt;, T) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.SocketChannel java.nio.channels.SocketChannel setOption(java.net.SocketOption&lt;T&gt;, T)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.SocketChannel java.nio.channels.SocketChannel shutdownInput()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.SocketChannel java.nio.channels.SocketChannel shutdownOutput()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.SocketChannel long read(java.nio.ByteBuffer[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.SocketChannel long read(java.nio.ByteBuffer[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.SocketChannel long write(java.nio.ByteBuffer[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual java.nio.channels.SocketChannel long write(java.nio.ByteBuffer[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
