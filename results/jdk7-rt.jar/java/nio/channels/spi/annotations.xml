<root>
  <item name="java.nio.channels.spi.AbstractInterruptibleChannel boolean isOpen()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.nio.channels.spi.AbstractSelectableChannel boolean isBlocking()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.nio.channels.spi.AbstractSelectableChannel boolean isRegistered()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.nio.channels.spi.AbstractSelectableChannel java.lang.Object blockingLock()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.nio.channels.spi.AbstractSelectableChannel java.nio.channels.SelectableChannel configureBlocking(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.spi.AbstractSelectableChannel java.nio.channels.SelectionKey findKey(java.nio.channels.Selector)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.channels.spi.AbstractSelectableChannel java.nio.channels.SelectionKey findKey(java.nio.channels.Selector) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.channels.spi.AbstractSelectableChannel java.nio.channels.SelectionKey keyFor(java.nio.channels.Selector)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.channels.spi.AbstractSelectableChannel java.nio.channels.SelectionKey keyFor(java.nio.channels.Selector) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.channels.spi.AbstractSelectableChannel java.nio.channels.spi.SelectorProvider provider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.nio.channels.spi.AbstractSelectableChannel void removeKey(java.nio.channels.SelectionKey) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.spi.AbstractSelectionKey boolean isValid()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.nio.channels.spi.AbstractSelector boolean isOpen()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.nio.channels.spi.AbstractSelector java.nio.channels.spi.SelectorProvider provider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.nio.channels.spi.AbstractSelector java.util.Set&lt;java.nio.channels.SelectionKey&gt; cancelledKeys()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.nio.channels.spi.AbstractSelector void deregister(java.nio.channels.spi.AbstractSelectionKey) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.spi.AsynchronousChannelProvider AsynchronousChannelProvider(java.lang.Void)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.nio.channels.spi.AsynchronousChannelProvider AsynchronousChannelProvider(java.lang.Void) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.channels.spi.AsynchronousChannelProvider java.lang.Void checkPermission()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.channels.spi.AsynchronousChannelProvider java.nio.channels.spi.AsynchronousChannelProvider provider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.nio.channels.spi.AsynchronousChannelProvider.ProviderHolder ProviderHolder()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.nio.channels.spi.AsynchronousChannelProvider.ProviderHolder java.nio.channels.spi.AsynchronousChannelProvider loadProviderAsService()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.channels.spi.AsynchronousChannelProvider.ProviderHolder java.nio.channels.spi.AsynchronousChannelProvider loadProviderFromProperty()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.channels.spi.SelectorProvider java.nio.channels.Channel inheritedChannel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
</root>
