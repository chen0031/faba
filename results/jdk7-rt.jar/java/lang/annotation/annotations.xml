<root>
  <item name="java.lang.annotation.AnnotationFormatError AnnotationFormatError(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.lang.annotation.AnnotationFormatError AnnotationFormatError(java.lang.String, java.lang.Throwable)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.lang.annotation.AnnotationTypeMismatchException java.lang.String foundType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.lang.annotation.AnnotationTypeMismatchException java.lang.reflect.Method element()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.lang.annotation.ElementType ElementType(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.lang.annotation.IncompleteAnnotationException IncompleteAnnotationException(java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.annotation.IncompleteAnnotationException java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt; annotationType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.lang.annotation.IncompleteAnnotationException java.lang.String elementName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.lang.annotation.RetentionPolicy RetentionPolicy(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
</root>
