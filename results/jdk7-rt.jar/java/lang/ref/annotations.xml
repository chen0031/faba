<root>
  <item name="java.lang.ref.FinalReference FinalReference(T, java.lang.ref.ReferenceQueue&lt;? super T&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ref.Finalizer boolean hasBeenFinalized()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.lang.ref.Finalizer.FinalizerThread FinalizerThread(java.lang.ThreadGroup) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ref.PhantomReference PhantomReference(T, java.lang.ref.ReferenceQueue&lt;? super T&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ref.PhantomReference T get()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ref.Reference Reference(T, java.lang.ref.ReferenceQueue&lt;? super T&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ref.Reference T get()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.lang.ref.Reference boolean isEnqueued()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.lang.ref.Reference.Lock Lock()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.lang.ref.Reference.ReferenceHandler ReferenceHandler(java.lang.ThreadGroup, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ref.Reference.ReferenceHandler ReferenceHandler(java.lang.ThreadGroup, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ref.ReferenceQueue boolean enqueue(java.lang.ref.Reference&lt;? extends T&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ref.ReferenceQueue java.lang.ref.Reference&lt;? extends T&gt; poll()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ref.ReferenceQueue java.lang.ref.Reference&lt;? extends T&gt; reallyPoll()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ref.ReferenceQueue java.lang.ref.Reference&lt;? extends T&gt; remove()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ref.ReferenceQueue java.lang.ref.Reference&lt;? extends T&gt; remove(long)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ref.ReferenceQueue.Lock Lock()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.lang.ref.ReferenceQueue.Null boolean enqueue(java.lang.ref.Reference)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="value" val="&quot;!null-&gt;false;null-&gt;false&quot;"/>
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.lang.ref.ReferenceQueue.Null boolean enqueue(java.lang.ref.Reference) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ref.SoftReference SoftReference(T, java.lang.ref.ReferenceQueue&lt;? super T&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ref.WeakReference WeakReference(T, java.lang.ref.ReferenceQueue&lt;? super T&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
</root>
