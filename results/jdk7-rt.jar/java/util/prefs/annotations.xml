<root>
  <item name="java.util.prefs.AbstractPreferences AbstractPreferences(java.util.prefs.AbstractPreferences, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.AbstractPreferences boolean isRemoved()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.AbstractPreferences boolean nodeExists(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.AbstractPreferences boolean nodeExists(java.util.StringTokenizer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.AbstractPreferences java.lang.String absolutePath()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.AbstractPreferences java.lang.String get(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.AbstractPreferences java.lang.String name()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.AbstractPreferences java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.AbstractPreferences java.util.prefs.AbstractPreferences getChild(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.prefs.AbstractPreferences java.util.prefs.AbstractPreferences getChild(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.prefs.AbstractPreferences java.util.prefs.NodeChangeListener[] nodeListeners()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.AbstractPreferences java.util.prefs.PreferenceChangeListener[] prefListeners()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.AbstractPreferences java.util.prefs.Preferences node(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.AbstractPreferences java.util.prefs.Preferences node(java.util.StringTokenizer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.AbstractPreferences void addNodeChangeListener(java.util.prefs.NodeChangeListener) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.AbstractPreferences void addPreferenceChangeListener(java.util.prefs.PreferenceChangeListener) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.AbstractPreferences void exportNode(java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.AbstractPreferences void exportSubtree(java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.AbstractPreferences void put(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.AbstractPreferences void put(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.AbstractPreferences void putByteArray(java.lang.String, byte[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.AbstractPreferences void removeNodeChangeListener(java.util.prefs.NodeChangeListener) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.prefs.AbstractPreferences void removePreferenceChangeListener(java.util.prefs.PreferenceChangeListener) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.prefs.AbstractPreferences.NodeAddedEvent NodeAddedEvent(java.util.prefs.AbstractPreferences, java.util.prefs.Preferences, java.util.prefs.Preferences) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.AbstractPreferences.NodeRemovedEvent NodeRemovedEvent(java.util.prefs.AbstractPreferences, java.util.prefs.Preferences, java.util.prefs.Preferences) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.Base64 Base64()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.Base64 byte[] altBase64ToByteArray(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.Base64 byte[] base64ToByteArray(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.Base64 byte[] base64ToByteArray(java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.Base64 int base64toInt(char, byte[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.Base64 java.lang.String byteArrayToAltBase64(byte[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.Base64 java.lang.String byteArrayToAltBase64(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.Base64 java.lang.String byteArrayToBase64(byte[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.Base64 java.lang.String byteArrayToBase64(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.Base64 java.lang.String byteArrayToBase64(byte[], boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.Base64 java.lang.String byteArrayToBase64(byte[], boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.Base64 void main(java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.FileSystemPreferences FileSystemPreferences(java.util.prefs.FileSystemPreferences, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.FileSystemPreferences FileSystemPreferences(java.util.prefs.FileSystemPreferences, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.FileSystemPreferences boolean isDirChar(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.FileSystemPreferences boolean isUserNode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.FileSystemPreferences byte[] byteArray(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.FileSystemPreferences java.lang.String dirName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.util.prefs.FileSystemPreferences java.lang.String dirName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.FileSystemPreferences java.lang.String nodeName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.util.prefs.FileSystemPreferences java.lang.String nodeName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.FileSystemPreferences java.util.prefs.AbstractPreferences childSpi(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.FileSystemPreferences java.util.prefs.AbstractPreferences childSpi(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.FileSystemPreferences void flushSpi()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.FileSystemPreferences.Change Change(java.util.prefs.FileSystemPreferences)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.util.prefs.FileSystemPreferences.NodeCreate NodeCreate(java.util.prefs.FileSystemPreferences)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.util.prefs.FileSystemPreferences.NodeCreate void replay()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.FileSystemPreferences.Put Put(java.util.prefs.FileSystemPreferences, java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.util.prefs.FileSystemPreferences.Remove Remove(java.util.prefs.FileSystemPreferences, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.util.prefs.FileSystemPreferencesFactory FileSystemPreferencesFactory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.MacOSXPreferences MacOSXPreferences(java.util.prefs.MacOSXPreferences, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.MacOSXPreferences MacOSXPreferences(java.util.prefs.MacOSXPreferences, java.lang.String, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.MacOSXPreferences MacOSXPreferences(java.util.prefs.MacOSXPreferences, java.lang.String, boolean, boolean, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.MacOSXPreferences java.util.prefs.AbstractPreferences childSpi(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.MacOSXPreferences java.util.prefs.AbstractPreferences childSpi(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.MacOSXPreferences void flushSpi()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.MacOSXPreferences void removeSpi(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.MacOSXPreferences void syncSpi()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.MacOSXPreferencesFactory MacOSXPreferencesFactory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.MacOSXPreferencesFile MacOSXPreferencesFile(java.lang.String, long, long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.util.prefs.MacOSXPreferencesFile boolean addChildToNode(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.prefs.MacOSXPreferencesFile java.lang.String name()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.MacOSXPreferencesFile long host()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.MacOSXPreferencesFile long user()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.MacOSXPreferencesFile void removeChildFromNode(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.prefs.MacOSXPreferencesFile.FlushTask FlushTask(java.util.prefs.MacOSXPreferencesFile)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.util.prefs.MacOSXPreferencesFile.SyncTask SyncTask(java.util.prefs.MacOSXPreferencesFile)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.util.prefs.NodeChangeEvent NodeChangeEvent(java.util.prefs.Preferences, java.util.prefs.Preferences) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.NodeChangeEvent java.util.prefs.Preferences getChild()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.NodeChangeEvent void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.prefs.NodeChangeEvent void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.prefs.PreferenceChangeEvent PreferenceChangeEvent(java.util.prefs.Preferences, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.PreferenceChangeEvent java.lang.String getKey()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.PreferenceChangeEvent java.lang.String getNewValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.PreferenceChangeEvent void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.prefs.PreferenceChangeEvent void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.prefs.Preferences Preferences()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.Preferences java.lang.String nodeName(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.Preferences java.lang.String nodeName(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.Preferences java.util.prefs.Preferences systemNodeForPackage(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.Preferences java.util.prefs.Preferences userNodeForPackage(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.XmlSupport XmlSupport()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.XmlSupport void ImportPrefs(java.util.prefs.Preferences, org.w3c.dom.Element) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.XmlSupport void ImportSubtree(java.util.prefs.Preferences, org.w3c.dom.Element) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.XmlSupport void ImportSubtree(java.util.prefs.Preferences, org.w3c.dom.Element) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.XmlSupport void export(java.io.OutputStream, java.util.prefs.Preferences, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.XmlSupport void export(java.io.OutputStream, java.util.prefs.Preferences, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.XmlSupport void exportMap(java.io.OutputStream, java.util.Map) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.XmlSupport void exportMap(java.io.OutputStream, java.util.Map) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.XmlSupport void putPreferencesInXml(org.w3c.dom.Element, org.w3c.dom.Document, java.util.prefs.Preferences, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.XmlSupport void putPreferencesInXml(org.w3c.dom.Element, org.w3c.dom.Document, java.util.prefs.Preferences, boolean) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.XmlSupport void writeDoc(org.w3c.dom.Document, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.XmlSupport void writeDoc(org.w3c.dom.Document, java.io.OutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.XmlSupport.EH EH()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.XmlSupport.EH void error(org.xml.sax.SAXParseException)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.XmlSupport.EH void error(org.xml.sax.SAXParseException) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.prefs.XmlSupport.EH void fatalError(org.xml.sax.SAXParseException)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.XmlSupport.EH void fatalError(org.xml.sax.SAXParseException) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.prefs.XmlSupport.EH void warning(org.xml.sax.SAXParseException)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.XmlSupport.EH void warning(org.xml.sax.SAXParseException) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.prefs.XmlSupport.Resolver Resolver()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.XmlSupport.Resolver org.xml.sax.InputSource resolveEntity(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.prefs.XmlSupport.Resolver org.xml.sax.InputSource resolveEntity(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.prefs.XmlSupport.Resolver org.xml.sax.InputSource resolveEntity(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
