<root>
  <item name="sun.nio.cs.AbstractCharsetProvider java.nio.charset.Charset access$000(sun.nio.cs.AbstractCharsetProvider, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.AbstractCharsetProvider void charset(java.lang.String, java.lang.String, java.lang.String[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.AbstractCharsetProvider void deleteCharset(java.lang.String, java.lang.String[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.AbstractCharsetProvider void put(java.util.Map&lt;K,V&gt;, K, V) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.AbstractCharsetProvider void remove(java.util.Map&lt;K,V&gt;, K) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.CharsetMapping boolean isCompositeBase(sun.nio.cs.CharsetMapping.Entry) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.CharsetMapping int findBytes(sun.nio.cs.CharsetMapping.Entry[], sun.nio.cs.CharsetMapping.Entry) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.CharsetMapping int findCP(sun.nio.cs.CharsetMapping.Entry[], sun.nio.cs.CharsetMapping.Entry) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.CharsetMapping int findComp(sun.nio.cs.CharsetMapping.Entry[], sun.nio.cs.CharsetMapping.Entry) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.CharsetMapping.2 int compare(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.CharsetMapping.2 int compare(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.CharsetMapping.2 int compare(sun.nio.cs.CharsetMapping.Entry, sun.nio.cs.CharsetMapping.Entry) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.CharsetMapping.2 int compare(sun.nio.cs.CharsetMapping.Entry, sun.nio.cs.CharsetMapping.Entry) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.CharsetMapping.3 int compare(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.CharsetMapping.3 int compare(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.CharsetMapping.3 int compare(sun.nio.cs.CharsetMapping.Entry, sun.nio.cs.CharsetMapping.Entry) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.CharsetMapping.3 int compare(sun.nio.cs.CharsetMapping.Entry, sun.nio.cs.CharsetMapping.Entry) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.CharsetMapping.4 int compare(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.CharsetMapping.4 int compare(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.CharsetMapping.4 int compare(sun.nio.cs.CharsetMapping.Entry, sun.nio.cs.CharsetMapping.Entry) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.CharsetMapping.4 int compare(sun.nio.cs.CharsetMapping.Entry, sun.nio.cs.CharsetMapping.Entry) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.FastCharsetProvider java.lang.String toLower(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.FastCharsetProvider java.nio.charset.Charset access$100(sun.nio.cs.FastCharsetProvider, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.FastCharsetProvider java.nio.charset.Charset access$100(sun.nio.cs.FastCharsetProvider, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.FastCharsetProvider java.nio.charset.Charset lookup(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.FastCharsetProvider java.util.Map access$000(sun.nio.cs.FastCharsetProvider) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.ISO_8859_1.Decoder int decode(byte[], int, int, char[]) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.ISO_8859_1.Decoder java.nio.charset.CoderResult decodeArrayLoop(java.nio.ByteBuffer, java.nio.CharBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.ISO_8859_1.Decoder java.nio.charset.CoderResult decodeArrayLoop(java.nio.ByteBuffer, java.nio.CharBuffer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.ISO_8859_1.Decoder java.nio.charset.CoderResult decodeBufferLoop(java.nio.ByteBuffer, java.nio.CharBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.ISO_8859_1.Decoder java.nio.charset.CoderResult decodeLoop(java.nio.ByteBuffer, java.nio.CharBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.ISO_8859_1.Encoder int encode(char[], int, int, byte[]) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.ISO_8859_1.Encoder java.nio.charset.CoderResult encodeArrayLoop(java.nio.CharBuffer, java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.ISO_8859_1.Encoder java.nio.charset.CoderResult encodeArrayLoop(java.nio.CharBuffer, java.nio.ByteBuffer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.ISO_8859_1.Encoder java.nio.charset.CoderResult encodeBufferLoop(java.nio.CharBuffer, java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.ISO_8859_1.Encoder java.nio.charset.CoderResult encodeLoop(java.nio.CharBuffer, java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.ISO_8859_1.Encoder void implReplaceWith(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.ISO_8859_13 boolean contains(java.nio.charset.Charset) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.ISO_8859_15 boolean contains(java.nio.charset.Charset) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.ISO_8859_2 boolean contains(java.nio.charset.Charset) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.ISO_8859_4 boolean contains(java.nio.charset.Charset) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.ISO_8859_5 boolean contains(java.nio.charset.Charset) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.ISO_8859_7 boolean contains(java.nio.charset.Charset) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.ISO_8859_9 boolean contains(java.nio.charset.Charset) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.KOI8_R boolean contains(java.nio.charset.Charset) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.KOI8_U boolean contains(java.nio.charset.Charset) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.MS1250 boolean contains(java.nio.charset.Charset) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.MS1251 boolean contains(java.nio.charset.Charset) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.MS1252 boolean contains(java.nio.charset.Charset) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.MS1253 boolean contains(java.nio.charset.Charset) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.MS1254 boolean contains(java.nio.charset.Charset) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.MS1257 boolean contains(java.nio.charset.Charset) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.SingleByte java.nio.charset.CoderResult access$000(java.nio.charset.CoderResult, java.nio.Buffer, int, java.nio.Buffer, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.SingleByte java.nio.charset.CoderResult access$000(java.nio.charset.CoderResult, java.nio.Buffer, int, java.nio.Buffer, int) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.SingleByte java.nio.charset.CoderResult withResult(java.nio.charset.CoderResult, java.nio.Buffer, int, java.nio.Buffer, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.SingleByte java.nio.charset.CoderResult withResult(java.nio.charset.CoderResult, java.nio.Buffer, int, java.nio.Buffer, int) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.SingleByte void initC2B(char[], char[], char[], char[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.SingleByte void initC2B(char[], char[], char[], char[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.SingleByte void initC2B(char[], char[], char[], char[]) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.SingleByte.Decoder int decode(byte[], int, int, char[]) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.SingleByte.Decoder java.nio.charset.CoderResult decodeArrayLoop(java.nio.ByteBuffer, java.nio.CharBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.SingleByte.Decoder java.nio.charset.CoderResult decodeArrayLoop(java.nio.ByteBuffer, java.nio.CharBuffer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.SingleByte.Decoder java.nio.charset.CoderResult decodeBufferLoop(java.nio.ByteBuffer, java.nio.CharBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.SingleByte.Decoder java.nio.charset.CoderResult decodeLoop(java.nio.ByteBuffer, java.nio.CharBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.SingleByte.Decoder void implReplaceWith(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.SingleByte.Encoder boolean isLegalReplacement(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.SingleByte.Encoder int encode(char[], int, int, byte[]) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.SingleByte.Encoder java.nio.charset.CoderResult encodeArrayLoop(java.nio.CharBuffer, java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.SingleByte.Encoder java.nio.charset.CoderResult encodeArrayLoop(java.nio.CharBuffer, java.nio.ByteBuffer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.SingleByte.Encoder java.nio.charset.CoderResult encodeBufferLoop(java.nio.CharBuffer, java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.SingleByte.Encoder java.nio.charset.CoderResult encodeLoop(java.nio.CharBuffer, java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.SingleByte.Encoder void implReplaceWith(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.SingleByteDecoder java.nio.charset.CoderResult decodeArrayLoop(java.nio.ByteBuffer, java.nio.CharBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.SingleByteDecoder java.nio.charset.CoderResult decodeArrayLoop(java.nio.ByteBuffer, java.nio.CharBuffer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.SingleByteDecoder java.nio.charset.CoderResult decodeBufferLoop(java.nio.ByteBuffer, java.nio.CharBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.SingleByteDecoder java.nio.charset.CoderResult decodeLoop(java.nio.ByteBuffer, java.nio.CharBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.SingleByteEncoder java.nio.charset.CoderResult encodeArrayLoop(java.nio.CharBuffer, java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.SingleByteEncoder java.nio.charset.CoderResult encodeArrayLoop(java.nio.CharBuffer, java.nio.ByteBuffer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.SingleByteEncoder java.nio.charset.CoderResult encodeBufferLoop(java.nio.CharBuffer, java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.SingleByteEncoder java.nio.charset.CoderResult encodeLoop(java.nio.CharBuffer, java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.StandardCharsets.Aliases void init(java.lang.Object[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.StandardCharsets.Cache void init(java.lang.Object[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.StandardCharsets.Classes void init(java.lang.Object[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.StreamDecoder StreamDecoder(java.io.InputStream, java.lang.Object, java.nio.charset.Charset) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.StreamDecoder StreamDecoder(java.io.InputStream, java.lang.Object, java.nio.charset.Charset) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.StreamDecoder StreamDecoder(java.io.InputStream, java.lang.Object, java.nio.charset.CharsetDecoder) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.StreamDecoder StreamDecoder(java.io.InputStream, java.lang.Object, java.nio.charset.CharsetDecoder) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.StreamDecoder StreamDecoder(java.nio.channels.ReadableByteChannel, java.nio.charset.CharsetDecoder, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.StreamDecoder int implRead(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.StreamDecoder int read(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.StreamDecoder sun.nio.cs.StreamDecoder forDecoder(java.nio.channels.ReadableByteChannel, java.nio.charset.CharsetDecoder, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.StreamDecoder sun.nio.cs.StreamDecoder forInputStreamReader(java.io.InputStream, java.lang.Object, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.StreamDecoder sun.nio.cs.StreamDecoder forInputStreamReader(java.io.InputStream, java.lang.Object, java.nio.charset.Charset) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.StreamDecoder sun.nio.cs.StreamDecoder forInputStreamReader(java.io.InputStream, java.lang.Object, java.nio.charset.Charset) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.StreamDecoder sun.nio.cs.StreamDecoder forInputStreamReader(java.io.InputStream, java.lang.Object, java.nio.charset.CharsetDecoder) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.StreamDecoder sun.nio.cs.StreamDecoder forInputStreamReader(java.io.InputStream, java.lang.Object, java.nio.charset.CharsetDecoder) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.StreamEncoder StreamEncoder(java.io.OutputStream, java.lang.Object, java.nio.charset.Charset) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.StreamEncoder StreamEncoder(java.io.OutputStream, java.lang.Object, java.nio.charset.Charset) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.StreamEncoder StreamEncoder(java.io.OutputStream, java.lang.Object, java.nio.charset.CharsetEncoder) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.StreamEncoder StreamEncoder(java.io.OutputStream, java.lang.Object, java.nio.charset.CharsetEncoder) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.StreamEncoder StreamEncoder(java.nio.channels.WritableByteChannel, java.nio.charset.CharsetEncoder, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.StreamEncoder sun.nio.cs.StreamEncoder forEncoder(java.nio.channels.WritableByteChannel, java.nio.charset.CharsetEncoder, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.StreamEncoder sun.nio.cs.StreamEncoder forOutputStreamWriter(java.io.OutputStream, java.lang.Object, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.StreamEncoder sun.nio.cs.StreamEncoder forOutputStreamWriter(java.io.OutputStream, java.lang.Object, java.nio.charset.Charset) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.StreamEncoder sun.nio.cs.StreamEncoder forOutputStreamWriter(java.io.OutputStream, java.lang.Object, java.nio.charset.Charset) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.StreamEncoder sun.nio.cs.StreamEncoder forOutputStreamWriter(java.io.OutputStream, java.lang.Object, java.nio.charset.CharsetEncoder) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.StreamEncoder sun.nio.cs.StreamEncoder forOutputStreamWriter(java.io.OutputStream, java.lang.Object, java.nio.charset.CharsetEncoder) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.StreamEncoder void implWrite(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.StreamEncoder void write(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.StreamEncoder void write(java.lang.String, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.ThreadLocalCoders.Cache void moveToFront(java.lang.Object[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.US_ASCII.Decoder int decode(byte[], int, int, char[]) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.US_ASCII.Decoder java.nio.charset.CoderResult decodeArrayLoop(java.nio.ByteBuffer, java.nio.CharBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.US_ASCII.Decoder java.nio.charset.CoderResult decodeArrayLoop(java.nio.ByteBuffer, java.nio.CharBuffer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.US_ASCII.Decoder java.nio.charset.CoderResult decodeBufferLoop(java.nio.ByteBuffer, java.nio.CharBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.US_ASCII.Decoder java.nio.charset.CoderResult decodeLoop(java.nio.ByteBuffer, java.nio.CharBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.US_ASCII.Decoder void implReplaceWith(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.US_ASCII.Encoder boolean isLegalReplacement(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.US_ASCII.Encoder int encode(char[], int, int, byte[]) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.US_ASCII.Encoder java.nio.charset.CoderResult encodeArrayLoop(java.nio.CharBuffer, java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.US_ASCII.Encoder java.nio.charset.CoderResult encodeArrayLoop(java.nio.CharBuffer, java.nio.ByteBuffer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.US_ASCII.Encoder java.nio.charset.CoderResult encodeBufferLoop(java.nio.CharBuffer, java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.US_ASCII.Encoder java.nio.charset.CoderResult encodeLoop(java.nio.CharBuffer, java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.US_ASCII.Encoder void implReplaceWith(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.UTF_32 boolean contains(java.nio.charset.Charset) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.UTF_32BE boolean contains(java.nio.charset.Charset) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.UTF_32BE_BOM boolean contains(java.nio.charset.Charset) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.UTF_32Coder.Decoder int getCP(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.UTF_32Coder.Decoder java.nio.charset.CoderResult decodeLoop(java.nio.ByteBuffer, java.nio.CharBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.UTF_32Coder.Encoder java.nio.charset.CoderResult encodeLoop(java.nio.CharBuffer, java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.UTF_32Coder.Encoder void put(int, java.nio.ByteBuffer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.UTF_32LE boolean contains(java.nio.charset.Charset) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.UTF_32LE_BOM boolean contains(java.nio.charset.Charset) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.UTF_8 void updatePositions(java.nio.Buffer, int, java.nio.Buffer, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.UTF_8 void updatePositions(java.nio.Buffer, int, java.nio.Buffer, int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.UTF_8.Decoder int decode(byte[], int, int, char[]) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.UTF_8.Decoder java.nio.charset.CoderResult decodeArrayLoop(java.nio.ByteBuffer, java.nio.CharBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.UTF_8.Decoder java.nio.charset.CoderResult decodeArrayLoop(java.nio.ByteBuffer, java.nio.CharBuffer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.UTF_8.Decoder java.nio.charset.CoderResult decodeBufferLoop(java.nio.ByteBuffer, java.nio.CharBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.UTF_8.Decoder java.nio.charset.CoderResult decodeLoop(java.nio.ByteBuffer, java.nio.CharBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.UTF_8.Decoder java.nio.charset.CoderResult malformed(java.nio.ByteBuffer, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.UTF_8.Decoder java.nio.charset.CoderResult malformed(java.nio.ByteBuffer, int, java.nio.CharBuffer, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.UTF_8.Decoder java.nio.charset.CoderResult malformed(java.nio.ByteBuffer, int, java.nio.CharBuffer, int, int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.UTF_8.Decoder java.nio.charset.CoderResult xflow(java.nio.Buffer, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.UTF_8.Decoder java.nio.charset.CoderResult xflow(java.nio.Buffer, int, int, java.nio.Buffer, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.UTF_8.Decoder java.nio.charset.CoderResult xflow(java.nio.Buffer, int, int, java.nio.Buffer, int, int) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.UTF_8.Encoder boolean isLegalReplacement(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.UTF_8.Encoder int encode(char[], int, int, byte[]) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.UTF_8.Encoder java.nio.charset.CoderResult encodeArrayLoop(java.nio.CharBuffer, java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.UTF_8.Encoder java.nio.charset.CoderResult encodeArrayLoop(java.nio.CharBuffer, java.nio.ByteBuffer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.UTF_8.Encoder java.nio.charset.CoderResult encodeBufferLoop(java.nio.CharBuffer, java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.UTF_8.Encoder java.nio.charset.CoderResult encodeLoop(java.nio.CharBuffer, java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.UTF_8.Encoder java.nio.charset.CoderResult overflow(java.nio.CharBuffer, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.UTF_8.Encoder java.nio.charset.CoderResult overflow(java.nio.CharBuffer, int, java.nio.ByteBuffer, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.UTF_8.Encoder java.nio.charset.CoderResult overflow(java.nio.CharBuffer, int, java.nio.ByteBuffer, int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.Unicode Unicode(java.lang.String, java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.Unicode boolean contains(java.nio.charset.Charset) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.UnicodeDecoder java.nio.charset.CoderResult decodeLoop(java.nio.ByteBuffer, java.nio.CharBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.UnicodeEncoder java.nio.charset.CoderResult encodeLoop(java.nio.CharBuffer, java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.nio.cs.UnicodeEncoder void put(char, java.nio.ByteBuffer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
