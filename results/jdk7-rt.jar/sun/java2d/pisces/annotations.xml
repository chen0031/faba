<root>
  <item name="sun.java2d.pisces.Curve int rootsOfROCMinusW(float[], int, float, float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.Curve java.util.Iterator&lt;java.lang.Integer&gt; breakPtsAtTs(float[], int, float[], int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_,_-&gt;!null;_,_,!null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.Curve void set(float[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.Dasher Dasher(sun.awt.geom.PathConsumer2D, float[], float) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.Dasher void goTo(float[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.Helpers float[] widenArray(float[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.Helpers float[] widenArray(float[], int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.java2d.pisces.Helpers int[] widenArray(int[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.Helpers int[] widenArray(int[], int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.java2d.pisces.Helpers void subdivide(float[], int, float[], int, float[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.Helpers void subdivideCubic(float[], int, float[], int, float[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.Helpers void subdivideCubicAt(float, float[], int, float[], int, float[], int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.Helpers void subdivideQuad(float[], int, float[], int, float[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.Helpers void subdivideQuadAt(float, float[], int, float[], int, float[], int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.PiscesRenderingEngine float userSpaceLineWidth(java.awt.geom.AffineTransform, float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.PiscesRenderingEngine java.awt.Shape createStrokedShape(java.awt.Shape, float, int, int, float, float[], float)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_,_,_,_,_-&gt;!null;_,_,_,_,_,!null,_-&gt;!null;_,_,_,_,_,null,_-&gt;!null;null,_,_,_,_,_,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.PiscesRenderingEngine sun.java2d.pipe.AATileGenerator getAATileGenerator(double, double, double, double, double, double, double, double, sun.java2d.pipe.Region, int[]) 8">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.PiscesRenderingEngine sun.java2d.pipe.AATileGenerator getAATileGenerator(double, double, double, double, double, double, double, double, sun.java2d.pipe.Region, int[]) 9">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.PiscesRenderingEngine sun.java2d.pipe.AATileGenerator getAATileGenerator(double, double, double, double, double, double, double, double, sun.java2d.pipe.Region, int[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,_,_,_,_,_,!null,_-&gt;!null;_,_,_,_,_,_,_,_,_,!null-&gt;!null;_,_,_,_,_,_,_,_,_,null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.PiscesRenderingEngine sun.java2d.pipe.AATileGenerator getAATileGenerator(java.awt.Shape, java.awt.geom.AffineTransform, sun.java2d.pipe.Region, java.awt.BasicStroke, boolean, boolean, int[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.PiscesRenderingEngine sun.java2d.pipe.AATileGenerator getAATileGenerator(java.awt.Shape, java.awt.geom.AffineTransform, sun.java2d.pipe.Region, java.awt.BasicStroke, boolean, boolean, int[]) 6">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.PiscesRenderingEngine sun.java2d.pipe.AATileGenerator getAATileGenerator(java.awt.Shape, java.awt.geom.AffineTransform, sun.java2d.pipe.Region, java.awt.BasicStroke, boolean, boolean, int[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_,_,_,_,_-&gt;!null;_,!null,_,_,_,_,_-&gt;!null;_,_,!null,_,_,_,_-&gt;!null;_,_,_,!null,_,_,_-&gt;!null;_,_,_,_,_,_,!null-&gt;!null;_,_,_,_,_,_,null-&gt;!null;_,_,_,_,_,false,_-&gt;!null;_,_,_,_,_,true,_-&gt;!null;_,_,_,_,false,_,_-&gt;!null;_,_,_,_,true,_,_-&gt;!null;_,_,_,null,_,_,_-&gt;!null;_,null,_,_,_,_,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.PiscesRenderingEngine void pathTo(java.awt.geom.PathIterator, sun.awt.geom.PathConsumer2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.PiscesRenderingEngine void pathTo(java.awt.geom.PathIterator, sun.awt.geom.PathConsumer2D) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.PiscesRenderingEngine void strokeTo(java.awt.Shape, java.awt.geom.AffineTransform, java.awt.BasicStroke, boolean, sun.java2d.pisces.PiscesRenderingEngine.NormMode, boolean, sun.awt.geom.PathConsumer2D) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.PiscesRenderingEngine.NormalizingPathIterator NormalizingPathIterator(java.awt.geom.PathIterator, sun.java2d.pisces.PiscesRenderingEngine.NormMode) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.PiscesTileGenerator PiscesTileGenerator(sun.java2d.pisces.Renderer, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.PiscesTileGenerator java.lang.String hex(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.PiscesTileGenerator void getBbox(int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.Renderer float[] access$200(sun.java2d.pisces.Renderer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.Renderer int access$000(sun.java2d.pisces.Renderer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.Renderer int[] access$100(sun.java2d.pisces.Renderer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.Renderer int[] access$300(sun.java2d.pisces.Renderer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.Renderer void curveBreakIntoLinesAndAdd(float, float, sun.java2d.pisces.Curve, float, float) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.Renderer void emitRow(int[], int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.Renderer void quadBreakIntoLinesAndAdd(float, float, sun.java2d.pisces.Curve, float, float) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.Renderer.ScanlineIterator boolean access$500(sun.java2d.pisces.Renderer.ScanlineIterator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.Renderer.ScanlineIterator int access$600(sun.java2d.pisces.Renderer.ScanlineIterator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.Renderer.ScanlineIterator int access$800(sun.java2d.pisces.Renderer.ScanlineIterator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.Renderer.ScanlineIterator int[] access$700(sun.java2d.pisces.Renderer.ScanlineIterator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.Stroker int computeOffsetCubic(float[], int, float[], float[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.Stroker int computeOffsetCubic(float[], int, float[], float[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.Stroker int computeOffsetCubic(float[], int, float[], float[]) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.Stroker int computeOffsetQuad(float[], int, float[], float[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.Stroker int computeOffsetQuad(float[], int, float[], float[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.Stroker int computeOffsetQuad(float[], int, float[], float[]) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.Stroker int findSubdivPoints(float[], float[], int, float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.Stroker int findSubdivPoints(float[], float[], int, float) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.Stroker void computeIntersection(float, float, float, float, float, float, float, float, float[], int) 8">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.Stroker void computeOffset(float, float, float, float[]) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.Stroker void getLineOffsets(float, float, float, float, float[], float[]) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.Stroker void getLineOffsets(float, float, float, float, float[], float[]) 5">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pisces.TransformingPathConsumer2D sun.awt.geom.PathConsumer2D deltaTransformConsumer(sun.awt.geom.PathConsumer2D, java.awt.geom.AffineTransform)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.java2d.pisces.TransformingPathConsumer2D sun.awt.geom.PathConsumer2D inverseDeltaTransformConsumer(sun.awt.geom.PathConsumer2D, java.awt.geom.AffineTransform)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.java2d.pisces.TransformingPathConsumer2D sun.awt.geom.PathConsumer2D transformConsumer(sun.awt.geom.PathConsumer2D, java.awt.geom.AffineTransform)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null&quot;"/>
    </annotation>
  </item>
</root>
