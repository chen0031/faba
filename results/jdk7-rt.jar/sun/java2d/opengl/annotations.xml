<root>
  <item name="virtual sun.java2d.opengl.CGLGraphicsConfig java.awt.image.VolatileImage createBackBufferImage(java.awt.Component, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.CGLGraphicsConfig java.awt.image.VolatileImage createBackBufferImage(java.awt.Component, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.CGLGraphicsConfig long createBackBuffer(sun.lwawt.macosx.CPlatformView, int, java.awt.BufferCapabilities) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.CGLGraphicsConfig long createBackBuffer(sun.lwawt.macosx.CPlatformView, int, java.awt.BufferCapabilities) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.CGLGraphicsConfig sun.java2d.SurfaceData createSurfaceData(sun.java2d.opengl.CGLLayer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.CGLGraphicsConfig sun.java2d.SurfaceData createSurfaceData(sun.java2d.opengl.CGLLayer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.CGLSurfaceData CGLSurfaceData(sun.java2d.opengl.CGLGraphicsConfig, java.awt.image.ColorModel, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.CGLSurfaceData CGLSurfaceData(sun.java2d.opengl.CGLLayer, sun.java2d.opengl.CGLGraphicsConfig, java.awt.image.ColorModel, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.CGLSurfaceData CGLSurfaceData(sun.lwawt.macosx.CPlatformView, sun.java2d.opengl.CGLGraphicsConfig, java.awt.image.ColorModel, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.CGLSurfaceData boolean copyArea(sun.java2d.SunGraphics2D, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.CGLSurfaceData boolean copyArea(sun.java2d.SunGraphics2D, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.CGLSurfaceData boolean makeOGLContextCurrentOnSurface(java.awt.Graphics, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.CGLSurfaceData long createOGLContextOnSurface(java.awt.Graphics, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.CGLSurfaceData sun.java2d.opengl.CGLGraphicsConfig getGC(sun.java2d.opengl.CGLLayer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.CGLSurfaceData sun.java2d.opengl.CGLSurfaceData.CGLLayerSurfaceData createData(sun.java2d.opengl.CGLLayer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.CGLSurfaceData sun.java2d.opengl.CGLSurfaceData.CGLOffScreenSurfaceData createData(sun.java2d.opengl.CGLGraphicsConfig, int, int, java.awt.image.ColorModel, java.awt.Image, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.CGLSurfaceData sun.java2d.opengl.CGLSurfaceData.CGLOffScreenSurfaceData createData(sun.lwawt.macosx.CPlatformView, java.awt.Image, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.CGLSurfaceData.CGLLayerSurfaceData CGLLayerSurfaceData(sun.java2d.opengl.CGLLayer, sun.java2d.opengl.CGLGraphicsConfig, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.CGLSurfaceData.CGLOffScreenSurfaceData CGLOffScreenSurfaceData(sun.lwawt.macosx.CPlatformView, sun.java2d.opengl.CGLGraphicsConfig, int, int, java.awt.Image, java.awt.image.ColorModel, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.CGLSurfaceData.CGLVSyncOffScreenSurfaceData CGLVSyncOffScreenSurfaceData(sun.lwawt.macosx.CPlatformView, sun.java2d.opengl.CGLGraphicsConfig, int, int, java.awt.Image, java.awt.image.ColorModel, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.CGLSurfaceData.CGLVSyncOffScreenSurfaceData CGLVSyncOffScreenSurfaceData(sun.lwawt.macosx.CPlatformView, sun.java2d.opengl.CGLGraphicsConfig, int, int, java.awt.Image, java.awt.image.ColorModel, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.CGLSurfaceData.CGLWindowSurfaceData CGLWindowSurfaceData(sun.lwawt.macosx.CPlatformView, sun.java2d.opengl.CGLGraphicsConfig) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.CGLVolatileSurfaceManager CGLVolatileSurfaceManager(sun.awt.image.SunVolatileImage, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.GLXGraphicsConfig GLXGraphicsConfig(sun.awt.X11GraphicsDevice, int, long, sun.java2d.pipe.hw.ContextCapabilities) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.GLXGraphicsConfig java.awt.image.VolatileImage createBackBufferImage(java.awt.Component, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.GLXGraphicsConfig java.awt.image.VolatileImage createBackBufferImage(java.awt.Component, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.GLXGraphicsConfig long createBackBuffer(sun.awt.X11ComponentPeer, int, java.awt.BufferCapabilities) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.GLXGraphicsConfig long createBackBuffer(sun.awt.X11ComponentPeer, int, java.awt.BufferCapabilities) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.GLXGraphicsConfig sun.java2d.SurfaceData createSurfaceData(sun.awt.X11ComponentPeer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.GLXGraphicsConfig sun.java2d.SurfaceData createSurfaceData(sun.awt.X11ComponentPeer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.GLXSurfaceData GLXSurfaceData(sun.awt.X11ComponentPeer, sun.java2d.opengl.GLXGraphicsConfig, java.awt.image.ColorModel, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.GLXSurfaceData sun.java2d.opengl.GLXSurfaceData.GLXOffScreenSurfaceData createData(sun.awt.X11ComponentPeer, java.awt.Image, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.GLXSurfaceData sun.java2d.opengl.GLXSurfaceData.GLXOffScreenSurfaceData createData(sun.java2d.opengl.GLXGraphicsConfig, int, int, java.awt.image.ColorModel, java.awt.Image, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.GLXSurfaceData sun.java2d.opengl.GLXSurfaceData.GLXWindowSurfaceData createData(sun.awt.X11ComponentPeer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.GLXSurfaceData.GLXOffScreenSurfaceData GLXOffScreenSurfaceData(sun.awt.X11ComponentPeer, sun.java2d.opengl.GLXGraphicsConfig, int, int, java.awt.Image, java.awt.image.ColorModel, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.GLXSurfaceData.GLXVSyncOffScreenSurfaceData GLXVSyncOffScreenSurfaceData(sun.awt.X11ComponentPeer, sun.java2d.opengl.GLXGraphicsConfig, int, int, java.awt.Image, java.awt.image.ColorModel, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.GLXSurfaceData.GLXVSyncOffScreenSurfaceData GLXVSyncOffScreenSurfaceData(sun.awt.X11ComponentPeer, sun.java2d.opengl.GLXGraphicsConfig, int, int, java.awt.Image, java.awt.image.ColorModel, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.GLXSurfaceData.GLXWindowSurfaceData GLXWindowSurfaceData(sun.awt.X11ComponentPeer, sun.java2d.opengl.GLXGraphicsConfig) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.GLXSurfaceData.GLXWindowSurfaceData GLXWindowSurfaceData(sun.awt.X11ComponentPeer, sun.java2d.opengl.GLXGraphicsConfig) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.GLXVolatileSurfaceManager GLXVolatileSurfaceManager(sun.awt.image.SunVolatileImage, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLAnyCompositeBlit void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLAnyCompositeBlit void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLAnyCompositeBlit void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLAnyCompositeBlit void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLBlitLoops void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, java.awt.geom.AffineTransform, int, int, int, int, int, double, double, double, double, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLBlitLoops void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, java.awt.geom.AffineTransform, int, int, int, int, int, double, double, double, double, int, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLBlitLoops void IsoBlit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.image.BufferedImage, java.awt.image.BufferedImageOp, java.awt.Composite, sun.java2d.pipe.Region, java.awt.geom.AffineTransform, int, int, int, int, int, double, double, double, double, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLBlitLoops void IsoBlit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.image.BufferedImage, java.awt.image.BufferedImageOp, java.awt.Composite, sun.java2d.pipe.Region, java.awt.geom.AffineTransform, int, int, int, int, int, double, double, double, double, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLBlitLoops void enqueueBlit(sun.java2d.pipe.RenderQueue, sun.java2d.SurfaceData, sun.java2d.SurfaceData, int, int, int, int, int, double, double, double, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLBlitLoops void enqueueBlit(sun.java2d.pipe.RenderQueue, sun.java2d.SurfaceData, sun.java2d.SurfaceData, int, int, int, int, int, double, double, double, double) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLBlitLoops void enqueueBlit(sun.java2d.pipe.RenderQueue, sun.java2d.SurfaceData, sun.java2d.SurfaceData, int, int, int, int, int, double, double, double, double) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLContext OGLContext(sun.java2d.pipe.RenderQueue, sun.java2d.opengl.OGLGraphicsConfig) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLContext void setScratchSurface(sun.java2d.opengl.OGLGraphicsConfig) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLDrawImage void renderImageXform(sun.java2d.SunGraphics2D, java.awt.Image, java.awt.geom.AffineTransform, int, int, int, int, int, java.awt.Color) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLDrawImage void renderImageXform(sun.java2d.SunGraphics2D, java.awt.Image, java.awt.geom.AffineTransform, int, int, int, int, int, java.awt.Color) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLDrawImage void renderImageXform(sun.java2d.SunGraphics2D, java.awt.Image, java.awt.geom.AffineTransform, int, int, int, int, int, java.awt.Color) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLDrawImage void renderImageXform(sun.java2d.SunGraphics2D, java.awt.Image, java.awt.geom.AffineTransform, int, int, int, int, int, java.awt.Color) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLGeneralBlit void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLGeneralBlit void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLMaskBlit void validateContext(sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLMaskBlit void validateContext(sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLMaskFill void validateContext(sun.java2d.SunGraphics2D, java.awt.Composite, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLMaskFill void validateContext(sun.java2d.SunGraphics2D, java.awt.Composite, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLPaints boolean isValid(sun.java2d.SunGraphics2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLPaints.LinearGradient boolean isPaintValid(sun.java2d.SunGraphics2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLPaints.LinearGradient boolean isPaintValid(sun.java2d.SunGraphics2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLPaints.MultiGradient boolean isPaintValid(sun.java2d.SunGraphics2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLPaints.MultiGradient boolean isPaintValid(sun.java2d.SunGraphics2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLPaints.Texture boolean isPaintValid(sun.java2d.SunGraphics2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLPaints.Texture boolean isPaintValid(sun.java2d.SunGraphics2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLRTTSurfaceToSurfaceBlit void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLRTTSurfaceToSurfaceBlit void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLRTTSurfaceToSurfaceBlit void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLRTTSurfaceToSurfaceBlit void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLRTTSurfaceToSurfaceScale void Scale(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, double, double, double, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLRTTSurfaceToSurfaceScale void Scale(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, double, double, double, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLRTTSurfaceToSurfaceScale void Scale(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, double, double, double, double) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLRTTSurfaceToSurfaceScale void Scale(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, double, double, double, double) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLRTTSurfaceToSurfaceTransform void Transform(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, java.awt.geom.AffineTransform, int, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLRTTSurfaceToSurfaceTransform void Transform(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, java.awt.geom.AffineTransform, int, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLRTTSurfaceToSurfaceTransform void Transform(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, java.awt.geom.AffineTransform, int, int, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLRTTSurfaceToSurfaceTransform void Transform(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, java.awt.geom.AffineTransform, int, int, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLRenderQueue sun.java2d.pipe.RenderBuffer access$000(sun.java2d.opengl.OGLRenderQueue) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLRenderQueue void access$100(sun.java2d.opengl.OGLRenderQueue) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLRenderer OGLRenderer(sun.java2d.pipe.RenderQueue) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLRenderer sun.java2d.pipe.RenderQueue access$000(sun.java2d.opengl.OGLRenderer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLRenderer void access$100(sun.java2d.opengl.OGLRenderer, sun.java2d.SunGraphics2D, int[], int[], int, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLRenderer void access$200(sun.java2d.opengl.OGLRenderer, sun.java2d.SunGraphics2D, java.awt.geom.Path2D.Float, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLRenderer void access$300(sun.java2d.opengl.OGLRenderer, sun.java2d.SunGraphics2D, java.awt.geom.Path2D.Float, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLRenderer void access$400(sun.java2d.opengl.OGLRenderer, sun.java2d.SunGraphics2D, sun.java2d.pipe.SpanIterator, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLRenderer void copyArea(sun.java2d.SunGraphics2D, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLRenderer void validateContext(sun.java2d.SunGraphics2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLRenderer void validateContextAA(sun.java2d.SunGraphics2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLRenderer void validateContextAA(sun.java2d.SunGraphics2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLRenderer.Tracer Tracer(sun.java2d.opengl.OGLRenderer, sun.java2d.opengl.OGLRenderer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLSurfaceData OGLSurfaceData(sun.java2d.opengl.OGLGraphicsConfig, java.awt.image.ColorModel, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLSurfaceData boolean copyArea(sun.java2d.SunGraphics2D, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLSurfaceData boolean copyArea(sun.java2d.SunGraphics2D, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLSurfaceData sun.java2d.SurfaceDataProxy makeProxyFor(sun.java2d.SurfaceData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLSurfaceData sun.java2d.SurfaceDataProxy makeProxyFor(sun.java2d.SurfaceData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLSurfaceData sun.java2d.loops.MaskFill getMaskFill(sun.java2d.SunGraphics2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLSurfaceData sun.java2d.loops.MaskFill getMaskFill(sun.java2d.SunGraphics2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLSurfaceData void access$000(sun.java2d.opengl.OGLSurfaceData, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLSurfaceData void validatePipe(sun.java2d.SunGraphics2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLSurfaceData void validatePipe(sun.java2d.SunGraphics2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLSurfaceDataProxy boolean isSupportedOperation(sun.java2d.SurfaceData, int, sun.java2d.loops.CompositeType, java.awt.Color) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLSurfaceDataProxy boolean isSupportedOperation(sun.java2d.SurfaceData, int, sun.java2d.loops.CompositeType, java.awt.Color) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLSurfaceDataProxy sun.java2d.SurfaceDataProxy createProxy(sun.java2d.SurfaceData, sun.java2d.opengl.OGLGraphicsConfig) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLSurfaceToSurfaceBlit void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLSurfaceToSurfaceBlit void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLSurfaceToSurfaceBlit void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLSurfaceToSurfaceBlit void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLSurfaceToSurfaceScale void Scale(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, double, double, double, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLSurfaceToSurfaceScale void Scale(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, double, double, double, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLSurfaceToSurfaceScale void Scale(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, double, double, double, double) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLSurfaceToSurfaceScale void Scale(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, double, double, double, double) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLSurfaceToSurfaceTransform void Transform(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, java.awt.geom.AffineTransform, int, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLSurfaceToSurfaceTransform void Transform(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, java.awt.geom.AffineTransform, int, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLSurfaceToSurfaceTransform void Transform(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, java.awt.geom.AffineTransform, int, int, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLSurfaceToSurfaceTransform void Transform(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, java.awt.geom.AffineTransform, int, int, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLSurfaceToSwBlit void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLSurfaceToSwBlit void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLSurfaceToSwBlit void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLSurfaceToSwBlit void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLSwToSurfaceBlit void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLSwToSurfaceBlit void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLSwToSurfaceBlit void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLSwToSurfaceBlit void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLSwToSurfaceScale void Scale(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, double, double, double, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLSwToSurfaceScale void Scale(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, double, double, double, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLSwToSurfaceScale void Scale(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, double, double, double, double) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLSwToSurfaceScale void Scale(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, double, double, double, double) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLSwToSurfaceTransform void Transform(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, java.awt.geom.AffineTransform, int, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLSwToSurfaceTransform void Transform(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, java.awt.geom.AffineTransform, int, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLSwToSurfaceTransform void Transform(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, java.awt.geom.AffineTransform, int, int, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLSwToSurfaceTransform void Transform(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, java.awt.geom.AffineTransform, int, int, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLSwToTextureBlit void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLSwToTextureBlit void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLSwToTextureBlit void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLSwToTextureBlit void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLTextRenderer sun.java2d.pipe.RenderQueue access$000(sun.java2d.opengl.OGLTextRenderer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLTextRenderer void validateContext(sun.java2d.SunGraphics2D, java.awt.Composite) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLTextRenderer void validateContext(sun.java2d.SunGraphics2D, java.awt.Composite) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLTextRenderer.Tracer Tracer(sun.java2d.opengl.OGLTextRenderer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLTextRenderer.Tracer void drawGlyphList(sun.java2d.SunGraphics2D, sun.font.GlyphList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLTextRenderer.Tracer void drawGlyphList(sun.java2d.SunGraphics2D, sun.font.GlyphList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLTextRenderer.Tracer void drawGlyphList(sun.java2d.SunGraphics2D, sun.font.GlyphList) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLTextRenderer.Tracer void drawGlyphList(sun.java2d.SunGraphics2D, sun.font.GlyphList) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLTextureToSurfaceBlit void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLTextureToSurfaceBlit void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLTextureToSurfaceBlit void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLTextureToSurfaceBlit void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLTextureToSurfaceScale void Scale(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, double, double, double, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLTextureToSurfaceScale void Scale(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, double, double, double, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLTextureToSurfaceScale void Scale(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, double, double, double, double) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLTextureToSurfaceScale void Scale(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, double, double, double, double) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLTextureToSurfaceTransform void Transform(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, java.awt.geom.AffineTransform, int, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLTextureToSurfaceTransform void Transform(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, java.awt.geom.AffineTransform, int, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.opengl.OGLTextureToSurfaceTransform void Transform(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, java.awt.geom.AffineTransform, int, int, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.opengl.OGLTextureToSurfaceTransform void Transform(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, java.awt.geom.AffineTransform, int, int, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
