<root>
  <item name="virtual sun.java2d.loops.Blit sun.java2d.loops.GraphicsPrimitive makePrimitive(sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.Blit sun.java2d.loops.GraphicsPrimitive makePrimitive(sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.Blit.AnyBlit void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.Blit.AnyBlit void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.Blit.AnyBlit void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.Blit.AnyBlit void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.Blit.AnyBlit void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.Blit.AnyBlit void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.Blit.TraceBlit TraceBlit(sun.java2d.loops.Blit) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.BlitBg.General void BlitBg(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.BlitBg.General void BlitBg(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.BlitBg.General void BlitBg(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.BlitBg.General void BlitBg(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.BlitBg.TraceBlitBg TraceBlitBg(sun.java2d.loops.BlitBg) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.CompositeType boolean isDerivedFrom(sun.java2d.loops.CompositeType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.CompositeType sun.java2d.loops.CompositeType forAlphaComposite(java.awt.AlphaComposite) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.CustomComponent sun.java2d.pipe.Region getRegionOfInterest(sun.java2d.SurfaceData, sun.java2d.SurfaceData, sun.java2d.pipe.Region, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.CustomComponent sun.java2d.pipe.Region getRegionOfInterest(sun.java2d.SurfaceData, sun.java2d.SurfaceData, sun.java2d.pipe.Region, int, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.DrawGlyphList.General void DrawGlyphList(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, sun.font.GlyphList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.DrawGlyphList.General void DrawGlyphList(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, sun.font.GlyphList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.DrawGlyphList.General void DrawGlyphList(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, sun.font.GlyphList) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.DrawGlyphList.General void DrawGlyphList(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, sun.font.GlyphList) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.DrawGlyphList.TraceDrawGlyphList TraceDrawGlyphList(sun.java2d.loops.DrawGlyphList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.DrawGlyphListAA.General void DrawGlyphListAA(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, sun.font.GlyphList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.DrawGlyphListAA.General void DrawGlyphListAA(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, sun.font.GlyphList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.DrawGlyphListAA.General void DrawGlyphListAA(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, sun.font.GlyphList) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.DrawGlyphListAA.General void DrawGlyphListAA(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, sun.font.GlyphList) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.DrawGlyphListAA.TraceDrawGlyphListAA TraceDrawGlyphListAA(sun.java2d.loops.DrawGlyphListAA) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.DrawGlyphListLCD.TraceDrawGlyphListLCD TraceDrawGlyphListLCD(sun.java2d.loops.DrawGlyphListLCD) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.DrawLine.TraceDrawLine TraceDrawLine(sun.java2d.loops.DrawLine) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.DrawParallelogram.TraceDrawParallelogram TraceDrawParallelogram(sun.java2d.loops.DrawParallelogram) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.DrawPath.TraceDrawPath TraceDrawPath(sun.java2d.loops.DrawPath) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.DrawPolygons.TraceDrawPolygons TraceDrawPolygons(sun.java2d.loops.DrawPolygons) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.DrawRect.TraceDrawRect TraceDrawRect(sun.java2d.loops.DrawRect) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.FillParallelogram.TraceFillParallelogram TraceFillParallelogram(sun.java2d.loops.FillParallelogram) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.FillPath.TraceFillPath TraceFillPath(sun.java2d.loops.FillPath) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.FillRect.General void FillRect(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.FillRect.General void FillRect(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.FillRect.TraceFillRect TraceFillRect(sun.java2d.loops.FillRect) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.FillSpans void FillSpans(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, sun.java2d.pipe.SpanIterator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.FillSpans void FillSpans(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, sun.java2d.pipe.SpanIterator) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.FillSpans.TraceFillSpans TraceFillSpans(sun.java2d.loops.FillSpans) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.FontInfo java.lang.String mtx(double[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.FontInfo java.lang.String mtx(double[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.GeneralRenderer boolean adjustLine(int[], int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.GeneralRenderer int[] doDrawLine(sun.java2d.SurfaceData, sun.java2d.loops.PixelWriter, int[], sun.java2d.pipe.Region, int, int, int, int) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.GeneralRenderer sun.java2d.loops.PixelWriter createSolidPixelWriter(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.GeneralRenderer sun.java2d.loops.PixelWriter createSolidPixelWriter(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.GeneralRenderer sun.java2d.loops.PixelWriter createXorPixelWriter(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.GeneralRenderer sun.java2d.loops.PixelWriter createXorPixelWriter(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.GeneralRenderer void doDrawGlyphList(sun.java2d.SurfaceData, sun.java2d.loops.PixelWriter, sun.font.GlyphList, sun.java2d.pipe.Region) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.GeneralRenderer void doDrawGlyphList(sun.java2d.SurfaceData, sun.java2d.loops.PixelWriter, sun.font.GlyphList, sun.java2d.pipe.Region) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.GeneralRenderer void doDrawGlyphList(sun.java2d.SurfaceData, sun.java2d.loops.PixelWriter, sun.font.GlyphList, sun.java2d.pipe.Region) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.GeneralRenderer void doDrawGlyphList(sun.java2d.SurfaceData, sun.java2d.loops.PixelWriter, sun.font.GlyphList, sun.java2d.pipe.Region) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.GeneralRenderer void doSetRect(sun.java2d.SurfaceData, sun.java2d.loops.PixelWriter, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.GeneralRenderer void doSetRect(sun.java2d.SurfaceData, sun.java2d.loops.PixelWriter, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.GraphicsPrimitive boolean satisfiesSameAs(sun.java2d.loops.GraphicsPrimitive) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.GraphicsPrimitive int makeUniqueID(int, sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.GraphicsPrimitive int makeUniqueID(int, sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.GraphicsPrimitive int makeUniqueID(int, sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.GraphicsPrimitive java.lang.String simplename(java.lang.reflect.Field[], java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.GraphicsPrimitive sun.java2d.SurfaceData convertFrom(sun.java2d.loops.Blit, sun.java2d.SurfaceData, int, int, int, int, sun.java2d.SurfaceData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.GraphicsPrimitive sun.java2d.SurfaceData convertFrom(sun.java2d.loops.Blit, sun.java2d.SurfaceData, int, int, int, int, sun.java2d.SurfaceData, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.GraphicsPrimitive sun.java2d.loops.Blit createConverter(sun.java2d.loops.SurfaceType, sun.java2d.loops.SurfaceType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.GraphicsPrimitive void setupGeneralBinaryOp(sun.java2d.loops.GraphicsPrimitive.GeneralBinaryOp) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.GraphicsPrimitive void setupGeneralBinaryOp(sun.java2d.loops.GraphicsPrimitive.GeneralBinaryOp) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.GraphicsPrimitive void setupGeneralUnaryOp(sun.java2d.loops.GraphicsPrimitive.GeneralUnaryOp) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.GraphicsPrimitive void setupGeneralUnaryOp(sun.java2d.loops.GraphicsPrimitive.GeneralUnaryOp) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.GraphicsPrimitiveMgr void main(java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.GraphicsPrimitiveMgr void register(sun.java2d.loops.GraphicsPrimitive[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.GraphicsPrimitiveMgr.1 int compare(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.GraphicsPrimitiveMgr.1 int compare(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.GraphicsPrimitiveMgr.2 int compare(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.GraphicsPrimitiveMgr.2 int compare(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.GraphicsPrimitiveProxy java.lang.String getPackageName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.MaskBlit.TraceMaskBlit TraceMaskBlit(sun.java2d.loops.MaskBlit) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.MaskFill.General void MaskFill(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, java.awt.Composite, int, int, int, int, byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.MaskFill.General void MaskFill(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, java.awt.Composite, int, int, int, int, byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.MaskFill.TraceMaskFill TraceMaskFill(sun.java2d.loops.MaskFill) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.OpaqueCopyAnyToArgb void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.OpaqueCopyAnyToArgb void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.OpaqueCopyAnyToArgb void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.OpaqueCopyAnyToArgb void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.OpaqueCopyArgbToAny void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.OpaqueCopyArgbToAny void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.OpaqueCopyArgbToAny void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.OpaqueCopyArgbToAny void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.PixelWriterDrawHandler PixelWriterDrawHandler(sun.java2d.SurfaceData, sun.java2d.loops.PixelWriter, sun.java2d.pipe.Region, int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.ProcessPath boolean doProcessPath(sun.java2d.loops.ProcessPath.ProcessHandler, java.awt.geom.Path2D.Float, float, float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.ProcessPath boolean doProcessPath(sun.java2d.loops.ProcessPath.ProcessHandler, java.awt.geom.Path2D.Float, float, float) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.ProcessPath boolean drawPath(sun.java2d.loops.ProcessPath.DrawHandler, java.awt.geom.Path2D.Float, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.ProcessPath boolean drawPath(sun.java2d.loops.ProcessPath.DrawHandler, sun.java2d.loops.ProcessPath.EndSubPathHandler, java.awt.geom.Path2D.Float, int, int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.ProcessPath boolean fillPath(sun.java2d.loops.ProcessPath.DrawHandler, java.awt.geom.Path2D.Float, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.ProcessPath int CLIPCLAMP(float, float, float[], int, int, int, int, int, int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.ProcessPath int CLIPCLAMP(int, int, int[], int, int, int, int, int, int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.ProcessPath int TESTANDCLIP(float, float, float[], int, int, int, int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.ProcessPath int TESTANDCLIP(int, int, int[], int, int, int, int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.ProcessPath int access$100(int, int, int[], int, int, int, int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.ProcessPath int access$300(int, int, int[], int, int, int, int, int, int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.ProcessPath void DrawMonotonicCubic(sun.java2d.loops.ProcessPath.ProcessHandler, float[], boolean, int[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.ProcessPath void DrawMonotonicQuad(sun.java2d.loops.ProcessPath.ProcessHandler, float[], boolean, int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.ProcessPath void DrawMonotonicQuad(sun.java2d.loops.ProcessPath.ProcessHandler, float[], boolean, int[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.ProcessPath void FillPolygon(sun.java2d.loops.ProcessPath.FillProcessHandler, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.ProcessPath void ProcessCubic(sun.java2d.loops.ProcessPath.ProcessHandler, float[], int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.ProcessPath void ProcessCubic(sun.java2d.loops.ProcessPath.ProcessHandler, float[], int[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.ProcessPath void ProcessFirstMonotonicPartOfCubic(sun.java2d.loops.ProcessPath.ProcessHandler, float[], int[], float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.ProcessPath void ProcessFirstMonotonicPartOfCubic(sun.java2d.loops.ProcessPath.ProcessHandler, float[], int[], float) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.ProcessPath void ProcessFirstMonotonicPartOfQuad(sun.java2d.loops.ProcessPath.ProcessHandler, float[], int[], float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.ProcessPath void ProcessFirstMonotonicPartOfQuad(sun.java2d.loops.ProcessPath.ProcessHandler, float[], int[], float) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.ProcessPath void ProcessLine(sun.java2d.loops.ProcessPath.ProcessHandler, float, float, float, float, int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.ProcessPath void ProcessMonotonicCubic(sun.java2d.loops.ProcessPath.ProcessHandler, float[], int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.ProcessPath void ProcessMonotonicCubic(sun.java2d.loops.ProcessPath.ProcessHandler, float[], int[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.ProcessPath void ProcessMonotonicQuad(sun.java2d.loops.ProcessPath.ProcessHandler, float[], int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.ProcessPath void ProcessMonotonicQuad(sun.java2d.loops.ProcessPath.ProcessHandler, float[], int[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.ProcessPath void ProcessQuad(sun.java2d.loops.ProcessPath.ProcessHandler, float[], int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.ProcessPath void ProcessQuad(sun.java2d.loops.ProcessPath.ProcessHandler, float[], int[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.ProcessPath.ActiveEdgeList void delete(sun.java2d.loops.ProcessPath.Edge) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.ProcessPath.ActiveEdgeList void delete(sun.java2d.loops.ProcessPath.Edge) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.ProcessPath.ActiveEdgeList void insert(sun.java2d.loops.ProcessPath.Point, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.ProcessPath.ActiveEdgeList void insert(sun.java2d.loops.ProcessPath.Point, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.ScaledBlit.TraceScaledBlit TraceScaledBlit(sun.java2d.loops.ScaledBlit) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.SetDrawLineANY void DrawLine(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.SetDrawLineANY void DrawLine(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.SetDrawLineANY void DrawLine(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.SetDrawLineANY void DrawLine(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.SetDrawPathANY void DrawPath(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, java.awt.geom.Path2D.Float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.SetDrawPathANY void DrawPath(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, java.awt.geom.Path2D.Float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.SetDrawPathANY void DrawPath(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, java.awt.geom.Path2D.Float) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.SetDrawPathANY void DrawPath(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, java.awt.geom.Path2D.Float) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.SetDrawPathANY void DrawPath(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, java.awt.geom.Path2D.Float) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.SetDrawPathANY void DrawPath(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, java.awt.geom.Path2D.Float) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.SetDrawPolygonsANY void DrawPolygons(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int[], int[], int[], int, int, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.SetDrawPolygonsANY void DrawPolygons(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int[], int[], int[], int, int, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.SetDrawPolygonsANY void DrawPolygons(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int[], int[], int[], int, int, int, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.SetDrawPolygonsANY void DrawPolygons(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int[], int[], int[], int, int, int, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.SetDrawRectANY void DrawRect(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.SetDrawRectANY void DrawRect(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.SetDrawRectANY void DrawRect(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.SetDrawRectANY void DrawRect(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.SetFillPathANY void FillPath(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, java.awt.geom.Path2D.Float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.SetFillPathANY void FillPath(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, java.awt.geom.Path2D.Float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.SetFillPathANY void FillPath(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, java.awt.geom.Path2D.Float) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.SetFillPathANY void FillPath(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, java.awt.geom.Path2D.Float) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.SetFillPathANY void FillPath(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, java.awt.geom.Path2D.Float) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.SetFillPathANY void FillPath(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, java.awt.geom.Path2D.Float) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.SetFillRectANY void FillRect(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.SetFillRectANY void FillRect(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.SetFillRectANY void FillRect(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.SetFillRectANY void FillRect(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.SetFillSpansANY void FillSpans(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, sun.java2d.pipe.SpanIterator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.SetFillSpansANY void FillSpans(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, sun.java2d.pipe.SpanIterator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.SetFillSpansANY void FillSpans(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, sun.java2d.pipe.SpanIterator) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.SetFillSpansANY void FillSpans(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, sun.java2d.pipe.SpanIterator) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.SetFillSpansANY void FillSpans(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, sun.java2d.pipe.SpanIterator) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.SetFillSpansANY void FillSpans(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, sun.java2d.pipe.SpanIterator) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.SurfaceType SurfaceType(sun.java2d.loops.SurfaceType, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.TransformBlit.TraceTransformBlit TraceTransformBlit(sun.java2d.loops.TransformBlit) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.TransformHelper.TraceTransformHelper TraceTransformHelper(sun.java2d.loops.TransformHelper) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.XORComposite XORComposite(java.awt.Color, sun.java2d.SurfaceData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.XORComposite XORComposite(java.awt.Color, sun.java2d.SurfaceData) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.XORComposite java.awt.CompositeContext createContext(java.awt.image.ColorModel, java.awt.image.ColorModel, java.awt.RenderingHints) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.XORComposite java.awt.CompositeContext createContext(java.awt.image.ColorModel, java.awt.image.ColorModel, java.awt.RenderingHints) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.XorCopyArgbToAny void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.XorCopyArgbToAny void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.XorCopyArgbToAny void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.XorCopyArgbToAny void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.XorCopyArgbToAny void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.XorCopyArgbToAny void Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.XorDrawGlyphListAAANY void DrawGlyphListAA(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, sun.font.GlyphList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.XorDrawGlyphListAAANY void DrawGlyphListAA(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, sun.font.GlyphList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.XorDrawGlyphListAAANY void DrawGlyphListAA(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, sun.font.GlyphList) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.XorDrawGlyphListAAANY void DrawGlyphListAA(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, sun.font.GlyphList) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.XorDrawGlyphListAAANY void DrawGlyphListAA(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, sun.font.GlyphList) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.XorDrawGlyphListAAANY void DrawGlyphListAA(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, sun.font.GlyphList) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.XorDrawGlyphListANY void DrawGlyphList(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, sun.font.GlyphList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.XorDrawGlyphListANY void DrawGlyphList(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, sun.font.GlyphList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.XorDrawGlyphListANY void DrawGlyphList(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, sun.font.GlyphList) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.XorDrawGlyphListANY void DrawGlyphList(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, sun.font.GlyphList) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.XorDrawGlyphListANY void DrawGlyphList(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, sun.font.GlyphList) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.XorDrawGlyphListANY void DrawGlyphList(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, sun.font.GlyphList) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.XorDrawLineANY void DrawLine(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.XorDrawLineANY void DrawLine(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.XorDrawLineANY void DrawLine(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.XorDrawLineANY void DrawLine(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.XorDrawPathANY void DrawPath(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, java.awt.geom.Path2D.Float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.XorDrawPathANY void DrawPath(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, java.awt.geom.Path2D.Float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.XorDrawPathANY void DrawPath(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, java.awt.geom.Path2D.Float) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.XorDrawPathANY void DrawPath(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, java.awt.geom.Path2D.Float) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.XorDrawPathANY void DrawPath(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, java.awt.geom.Path2D.Float) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.XorDrawPathANY void DrawPath(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, java.awt.geom.Path2D.Float) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.XorDrawPolygonsANY void DrawPolygons(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int[], int[], int[], int, int, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.XorDrawPolygonsANY void DrawPolygons(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int[], int[], int[], int, int, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.XorDrawPolygonsANY void DrawPolygons(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int[], int[], int[], int, int, int, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.XorDrawPolygonsANY void DrawPolygons(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int[], int[], int[], int, int, int, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.XorDrawRectANY void DrawRect(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.XorDrawRectANY void DrawRect(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.XorDrawRectANY void DrawRect(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.XorDrawRectANY void DrawRect(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.XorFillPathANY void FillPath(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, java.awt.geom.Path2D.Float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.XorFillPathANY void FillPath(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, java.awt.geom.Path2D.Float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.XorFillPathANY void FillPath(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, java.awt.geom.Path2D.Float) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.XorFillPathANY void FillPath(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, java.awt.geom.Path2D.Float) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.XorFillPathANY void FillPath(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, java.awt.geom.Path2D.Float) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.XorFillPathANY void FillPath(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, java.awt.geom.Path2D.Float) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.XorFillRectANY void FillRect(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.XorFillRectANY void FillRect(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.XorFillRectANY void FillRect(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.XorFillRectANY void FillRect(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.XorFillSpansANY void FillSpans(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, sun.java2d.pipe.SpanIterator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.XorFillSpansANY void FillSpans(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, sun.java2d.pipe.SpanIterator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.XorFillSpansANY void FillSpans(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, sun.java2d.pipe.SpanIterator) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.XorFillSpansANY void FillSpans(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, sun.java2d.pipe.SpanIterator) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.XorFillSpansANY void FillSpans(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, sun.java2d.pipe.SpanIterator) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.XorFillSpansANY void FillSpans(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, sun.java2d.pipe.SpanIterator) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.java2d.loops.XorPixelWriter void xorPixel(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.XorPixelWriter.ByteData ByteData(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.XorPixelWriter.ByteData void xorPixel(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.XorPixelWriter.ByteData void xorPixel(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.XorPixelWriter.DoubleData DoubleData(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.XorPixelWriter.DoubleData void xorPixel(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.XorPixelWriter.DoubleData void xorPixel(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.XorPixelWriter.FloatData FloatData(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.XorPixelWriter.FloatData void xorPixel(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.XorPixelWriter.FloatData void xorPixel(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.XorPixelWriter.IntData IntData(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.XorPixelWriter.IntData void xorPixel(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.XorPixelWriter.IntData void xorPixel(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.XorPixelWriter.ShortData ShortData(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.java2d.loops.XorPixelWriter.ShortData void xorPixel(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.loops.XorPixelWriter.ShortData void xorPixel(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
