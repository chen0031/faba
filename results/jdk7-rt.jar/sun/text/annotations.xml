<root>
  <item name="sun.text.CharArrayCodePointIterator CharArrayCodePointIterator(char[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.text.CharArrayCodePointIterator CharArrayCodePointIterator(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.text.CodePointIterator sun.text.CodePointIterator create(char[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.text.CodePointIterator sun.text.CodePointIterator create(char[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.text.CodePointIterator sun.text.CodePointIterator create(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.text.CodePointIterator sun.text.CodePointIterator create(char[], int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_-&gt;!null;null,_,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.text.CodePointIterator sun.text.CodePointIterator create(java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.text.CodePointIterator sun.text.CodePointIterator create(java.text.CharacterIterator)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.text.CompactByteArray CompactByteArray(short[], byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.text.CompactByteArray boolean arrayRegionMatches(byte[], int, byte[], int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,null,_,_-&gt;true;null,_,_,_,_-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="sun.text.CompactByteArray boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.text.IntHashtable boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.text.Normalizer boolean isNormalized(java.lang.CharSequence, java.text.Normalizer.Form, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.text.Normalizer boolean isNormalized(java.lang.CharSequence, java.text.Normalizer.Form, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.text.Normalizer java.lang.String normalize(java.lang.CharSequence, java.text.Normalizer.Form, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.text.Normalizer java.lang.String normalize(java.lang.CharSequence, java.text.Normalizer.Form, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
