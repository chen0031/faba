<root>
  <item name="sun.misc.ASCIICaseInsensitiveComparator int compare(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ASCIICaseInsensitiveComparator int compare(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ASCIICaseInsensitiveComparator int compare(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ASCIICaseInsensitiveComparator int compare(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ASCIICaseInsensitiveComparator int lowerCaseHashCode(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.BASE64Decoder void decodeAtom(java.io.PushbackInputStream, java.io.OutputStream, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.BASE64Encoder void encodeAtom(java.io.OutputStream, byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.BASE64Encoder void encodeAtom(java.io.OutputStream, byte[], int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Cache java.lang.Object get(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Cache java.lang.Object put(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Cache java.lang.Object put(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Cache java.lang.Object remove(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.CacheEnumerator CacheEnumerator(sun.misc.CacheEntry[], boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.CharacterDecoder byte[] decodeBuffer(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.CharacterDecoder java.nio.ByteBuffer decodeBufferToByteBuffer(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.CharacterEncoder byte[] getBytes(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.CharacterEncoder int readFully(java.io.InputStream, byte[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.CharacterEncoder java.lang.String encode(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.CharacterEncoder java.lang.String encode(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.CharacterEncoder java.lang.String encodeBuffer(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.CharacterEncoder java.lang.String encodeBuffer(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.CharacterEncoder void encode(byte[], java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.CharacterEncoder void encode(byte[], java.io.OutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.CharacterEncoder void encode(java.io.InputStream, java.io.OutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.CharacterEncoder void encode(java.nio.ByteBuffer, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.CharacterEncoder void encode(java.nio.ByteBuffer, java.io.OutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.CharacterEncoder void encodeBuffer(byte[], java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.CharacterEncoder void encodeBuffer(byte[], java.io.OutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.CharacterEncoder void encodeBuffer(java.io.InputStream, java.io.OutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.CharacterEncoder void encodeBuffer(java.nio.ByteBuffer, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.CharacterEncoder void encodeBuffer(java.nio.ByteBuffer, java.io.OutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.CharacterEncoder void encodeBufferPrefix(java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Cleaner boolean remove(sun.misc.Cleaner) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ExtensionDependency boolean checkExtensionAgainst(java.lang.String, java.util.jar.Attributes, java.io.File) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ExtensionDependency boolean checkExtensionAgainst(java.lang.String, java.util.jar.Attributes, java.io.File) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ExtensionDependency boolean installExtension(sun.misc.ExtensionInfo, sun.misc.ExtensionInfo) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ExtensionDependency java.io.File[] access$300(java.io.File[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ExtensionDependency java.io.File[] getExtFiles(java.io.File[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ExtensionDependency void access$200(sun.misc.ExtensionDependency, java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ExtensionInfo ExtensionInfo(java.lang.String, java.util.jar.Attributes) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ExtensionInfo int compareExtensionVersion(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ExtensionInfo int compareExtensionVersion(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ExtensionInfo int strictCompareExtensionVersion(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.FDBigInt FDBigInt(sun.misc.FDBigInt) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.FDBigInt int cmp(sun.misc.FDBigInt) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.FDBigInt int quoRemIteration(sun.misc.FDBigInt) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.FDBigInt sun.misc.FDBigInt add(sun.misc.FDBigInt) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.FDBigInt sun.misc.FDBigInt mult(sun.misc.FDBigInt) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.FDBigInt sun.misc.FDBigInt sub(sun.misc.FDBigInt) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.FIFOQueueEnumerator FIFOQueueEnumerator(sun.misc.Queue) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.FloatingDecimal int getHexDigit(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.FloatingDecimal java.lang.String stripLeadingZeros(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.FloatingDecimal sun.misc.FloatingDecimal readJavaFormatString(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.GC.LatencyRequest int compareTo(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.GC.LatencyRequest int compareTo(sun.misc.GC.LatencyRequest) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Hashing int murmur3_32(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Hashing int murmur3_32(char[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Hashing int murmur3_32(int, byte[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Hashing int murmur3_32(int, char[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Hashing int murmur3_32(int, int[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Hashing int murmur3_32(int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.HexDumpEncoder void encodeAtom(java.io.OutputStream, byte[], int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.HexDumpEncoder void encodeBufferPrefix(java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.HexDumpEncoder void hexDigit(java.io.PrintStream, byte) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.JarFilter boolean accept(java.io.File, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.JarIndex JarIndex(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.JarIndex void add(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.JarIndex void addToList(java.lang.String, java.lang.String, java.util.HashMap) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.JarIndex void read(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.JarIndex void write(java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.LIFOQueueEnumerator LIFOQueueEnumerator(sun.misc.Queue) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.LRUCache void moveToFront(java.lang.Object[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Launcher java.net.URL getFileURL(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Launcher java.net.URL[] access$300(java.io.File[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Launcher java.net.URL[] pathToURLs(java.io.File[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Launcher.AppClassLoader AppClassLoader(java.net.URL[], java.lang.ClassLoader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Launcher.AppClassLoader java.lang.Class loadClass(java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Launcher.AppClassLoader java.security.PermissionCollection getPermissions(java.security.CodeSource) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Launcher.AppClassLoader void appendToClassPathForInstrumentation(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Launcher.ExtClassLoader ExtClassLoader(java.io.File[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Launcher.ExtClassLoader java.net.URL[] getExtURLs(java.io.File[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.MessageUtils java.lang.String subst(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.MessageUtils java.lang.String subst(java.lang.String, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.MessageUtils java.lang.String subst(java.lang.String, java.lang.String, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.MessageUtils java.lang.String subst(java.lang.String, java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.MessageUtils java.lang.String substProp(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.MessageUtils java.lang.String substProp(java.lang.String, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.MessageUtils java.lang.String substProp(java.lang.String, java.lang.String, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.MetaIndex MetaIndex(java.util.List&lt;java.lang.String&gt;, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.NativeSignalHandler void handle(sun.misc.Signal) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.PathPermissions java.io.File[] access$000(sun.misc.PathPermissions) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.PathPermissions java.security.Permissions access$100(sun.misc.PathPermissions) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Perf java.nio.ByteBuffer attach(int, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Perf java.nio.ByteBuffer attach(java.lang.String, int, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Perf void access$100(sun.misc.Perf, java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator int access$508(sun.misc.ProxyGenerator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator java.lang.String access$000(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator java.lang.String access$600(java.lang.Class[], java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator java.lang.String access$900(sun.misc.ProxyGenerator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator java.lang.String dotToSlash(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator java.lang.String getFieldType(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator java.lang.String getFriendlyMethodSignature(java.lang.String, java.lang.Class[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator java.lang.String getFriendlyMethodSignature(java.lang.String, java.lang.Class[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator java.lang.String getMethodDescriptor(java.lang.Class[], java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator java.lang.String getParameterDescriptors(java.lang.Class[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator java.util.List access$1100(java.lang.Class[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator java.util.List&lt;java.lang.Class&lt;?&gt;&gt; computeUniqueCatchList(java.lang.Class&lt;?&gt;[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator sun.misc.ProxyGenerator.ConstantPool access$400(sun.misc.ProxyGenerator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void access$1000(sun.misc.ProxyGenerator, int, java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void access$1000(sun.misc.ProxyGenerator, int, java.io.DataOutputStream) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void access$1200(sun.misc.ProxyGenerator, int, java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void access$1200(sun.misc.ProxyGenerator, int, java.io.DataOutputStream) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void access$1300(sun.misc.ProxyGenerator, int, java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void access$1300(sun.misc.ProxyGenerator, int, java.io.DataOutputStream) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void access$1400(sun.misc.ProxyGenerator, int, java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void access$1400(sun.misc.ProxyGenerator, int, java.io.DataOutputStream) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void access$1500(sun.misc.ProxyGenerator, int, java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void access$1500(sun.misc.ProxyGenerator, int, java.io.DataOutputStream) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void access$1600(sun.misc.ProxyGenerator, int, java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void access$1600(sun.misc.ProxyGenerator, int, java.io.DataOutputStream) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void access$1700(sun.misc.ProxyGenerator, java.lang.Class, java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void access$1700(sun.misc.ProxyGenerator, java.lang.Class, java.io.DataOutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void access$1700(sun.misc.ProxyGenerator, java.lang.Class, java.io.DataOutputStream) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void access$1800(sun.misc.ProxyGenerator, int, java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void access$1800(sun.misc.ProxyGenerator, int, java.io.DataOutputStream) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void access$800(sun.misc.ProxyGenerator, int, java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void access$800(sun.misc.ProxyGenerator, int, java.io.DataOutputStream) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void addProxyMethod(java.lang.reflect.Method, java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void checkReturnTypes(java.util.List&lt;sun.misc.ProxyGenerator.ProxyMethod&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void codeClassForName(java.lang.Class, java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void codeClassForName(java.lang.Class, java.io.DataOutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void codeLocalLoadStore(int, int, int, java.io.DataOutputStream) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void code_aload(int, java.io.DataOutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void code_astore(int, java.io.DataOutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void code_dload(int, java.io.DataOutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void code_fload(int, java.io.DataOutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void code_iload(int, java.io.DataOutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void code_ipush(int, java.io.DataOutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void code_ldc(int, java.io.DataOutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void code_lload(int, java.io.DataOutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void collectCompatibleTypes(java.lang.Class&lt;?&gt;[], java.lang.Class&lt;?&gt;[], java.util.List&lt;java.lang.Class&lt;?&gt;&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ConstantPool short getClass(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ConstantPool short getFieldRef(java.lang.String, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ConstantPool short getFieldRef(java.lang.String, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ConstantPool short getFieldRef(java.lang.String, java.lang.String, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ConstantPool short getInterfaceMethodRef(java.lang.String, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ConstantPool short getInterfaceMethodRef(java.lang.String, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ConstantPool short getInterfaceMethodRef(java.lang.String, java.lang.String, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ConstantPool short getMethodRef(java.lang.String, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ConstantPool short getMethodRef(java.lang.String, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ConstantPool short getMethodRef(java.lang.String, java.lang.String, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ConstantPool short getNameAndType(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ConstantPool short getNameAndType(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ConstantPool short getString(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ConstantPool short getUtf8(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ConstantPool.IndirectEntry void write(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ConstantPool.ValueEntry void write(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.FieldInfo FieldInfo(sun.misc.ProxyGenerator, java.lang.String, java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.FieldInfo FieldInfo(sun.misc.ProxyGenerator, java.lang.String, java.lang.String, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.FieldInfo FieldInfo(sun.misc.ProxyGenerator, java.lang.String, java.lang.String, int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.FieldInfo void write(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.MethodInfo MethodInfo(sun.misc.ProxyGenerator, java.lang.String, java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.MethodInfo MethodInfo(sun.misc.ProxyGenerator, java.lang.String, java.lang.String, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.MethodInfo MethodInfo(sun.misc.ProxyGenerator, java.lang.String, java.lang.String, int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.MethodInfo void write(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.PrimitiveTypeInfo PrimitiveTypeInfo(java.lang.Class, java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.PrimitiveTypeInfo PrimitiveTypeInfo(java.lang.Class, java.lang.Class) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.PrimitiveTypeInfo void add(java.lang.Class, java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.PrimitiveTypeInfo void add(java.lang.Class, java.lang.Class) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ProxyMethod ProxyMethod(sun.misc.ProxyGenerator, java.lang.String, java.lang.Class[], java.lang.Class, java.lang.Class[], java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ProxyMethod ProxyMethod(sun.misc.ProxyGenerator, java.lang.String, java.lang.Class[], java.lang.Class, java.lang.Class[], java.lang.Class, sun.misc.ProxyGenerator.1) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ProxyMethod sun.misc.ProxyGenerator.MethodInfo access$200(sun.misc.ProxyGenerator.ProxyMethod) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ProxyMethod void access$1900(sun.misc.ProxyGenerator.ProxyMethod, java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ProxyMethod void access$1900(sun.misc.ProxyGenerator.ProxyMethod, java.io.DataOutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ProxyMethod void codeFieldInitialization(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ProxyMethod void codeUnwrapReturnValue(java.lang.Class, java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ProxyMethod void codeUnwrapReturnValue(java.lang.Class, java.io.DataOutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ProxyMethod void codeWrapArgument(java.lang.Class, int, java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ProxyMethod void codeWrapArgument(java.lang.Class, int, java.io.DataOutputStream) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Regexp Regexp(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Regexp boolean matches(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.RegexpNode void print(java.io.PrintStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.RegexpPool java.lang.Object delete(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.RegexpPool java.lang.Object match(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.RegexpPool java.lang.Object matchAfter(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.RegexpPool java.lang.Object matchNext(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.RegexpPool void add(java.lang.String, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.RegexpPool void add(java.lang.String, java.lang.Object, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.RegexpPool void print(java.io.PrintStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Service int parseLine(java.lang.Class, java.net.URL, java.io.BufferedReader, int, java.util.List, java.util.Set) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Service void access$000(java.lang.Class, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Service void access$200(java.lang.Class, java.lang.String, java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Service void fail(java.lang.Class, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Service void fail(java.lang.Class, java.lang.String, java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Service void fail(java.lang.Class, java.net.URL, int, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Signal sun.misc.SignalHandler handle(sun.misc.Signal, sun.misc.SignalHandler) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Signal void raise(sun.misc.Signal) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.SoftCache java.lang.ref.ReferenceQueue access$500(sun.misc.SoftCache) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.SoftCache java.util.Map access$700(sun.misc.SoftCache) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.SoftCache void access$800(sun.misc.SoftCache) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.SoftCache.Entry java.util.Map.Entry access$900(sun.misc.SoftCache.Entry) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.SoftCache.ValueCell boolean access$000(sun.misc.SoftCache.ValueCell) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.SoftCache.ValueCell java.lang.Object access$100(sun.misc.SoftCache.ValueCell) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Sort void quicksort(java.lang.Object[], sun.misc.Compare) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Sort void swap(java.lang.Object[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.TimerThread void enqueue(sun.misc.Timer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.TimerThread void requeue(sun.misc.Timer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.UCDecoder int decodeLinePrefix(java.io.PushbackInputStream, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.UCDecoder void decodeAtom(java.io.PushbackInputStream, java.io.OutputStream, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.UCDecoder void decodeAtom(java.io.PushbackInputStream, java.io.OutputStream, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.UCDecoder void decodeLineSuffix(java.io.PushbackInputStream, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.UCEncoder void encodeAtom(java.io.OutputStream, byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.UCEncoder void encodeAtom(java.io.OutputStream, byte[], int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.UCEncoder void encodeBufferPrefix(java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.UCEncoder void encodeLinePrefix(java.io.OutputStream, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.UCEncoder void encodeLineSuffix(java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath URLClassPath(java.net.URL[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath URLClassPath(java.net.URL[], java.net.URLStreamHandlerFactory) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath java.net.URLStreamHandler access$100(sun.misc.URLClassPath) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath java.net.URL[] pathToURLs(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath sun.misc.URLClassPath.Loader access$000(sun.misc.URLClassPath, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath void push(java.net.URL[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath.FileLoader FileLoader(java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader JarLoader(java.net.URL, java.net.URLStreamHandler, java.util.HashMap&lt;java.lang.String,sun.misc.URLClassPath.Loader&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader boolean isOptimizable(java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader boolean validIndex(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader java.net.URL access$400(sun.misc.URLClassPath.JarLoader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader java.net.URLStreamHandler access$1100(sun.misc.URLClassPath.JarLoader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader java.net.URL[] parseClassPath(java.net.URL, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader java.util.HashMap access$900(sun.misc.URLClassPath.JarLoader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader java.util.jar.JarFile access$500(sun.misc.URLClassPath.JarLoader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader java.util.jar.JarFile access$502(sun.misc.URLClassPath.JarLoader, java.util.jar.JarFile) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader java.util.jar.JarFile access$600(sun.misc.URLClassPath.JarLoader, java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader java.util.jar.JarFile access$600(sun.misc.URLClassPath.JarLoader, java.net.URL) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader java.util.jar.JarFile getJarFile(java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader sun.misc.JarIndex access$700(sun.misc.URLClassPath.JarLoader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader sun.misc.JarIndex access$702(sun.misc.URLClassPath.JarLoader, sun.misc.JarIndex) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader sun.misc.MetaIndex access$800(sun.misc.URLClassPath.JarLoader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath.Loader java.net.URL access$200(sun.misc.URLClassPath.Loader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath.Loader java.net.URL findResource(java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath.Loader sun.misc.Resource getResource(java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.UUDecoder int decodeLinePrefix(java.io.PushbackInputStream, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.UUDecoder void decodeAtom(java.io.PushbackInputStream, java.io.OutputStream, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.UUDecoder void decodeBufferPrefix(java.io.PushbackInputStream, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.UUDecoder void decodeBufferSuffix(java.io.PushbackInputStream, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.UUDecoder void decodeLineSuffix(java.io.PushbackInputStream, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.UUEncoder void encodeAtom(java.io.OutputStream, byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.UUEncoder void encodeAtom(java.io.OutputStream, byte[], int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.UUEncoder void encodeBufferPrefix(java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.UUEncoder void encodeLinePrefix(java.io.OutputStream, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Unsafe int fieldOffset(java.lang.reflect.Field) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Unsafe java.lang.Object staticFieldBase(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.VM boolean allowThreadSuspension(java.lang.ThreadGroup, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.VM java.lang.String getSavedProperty(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.VM void saveAndRemoveProperties(java.util.Properties) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.VMSupport boolean isClassPathAttributePresent(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.VMSupport byte[] serializePropertiesToByteArray(java.util.Properties) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Version void print(java.io.PrintStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
