<root>
  <item name="sun.reflect.AccessorGenerator boolean canWidenTo(java.lang.Class, java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.AccessorGenerator boolean isPrimitive(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.AccessorGenerator java.lang.String getClassName(java.lang.Class, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.AccessorGenerator java.lang.String internalize(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.AccessorGenerator void emitMethod(short, int, sun.reflect.ClassFileAssembler, sun.reflect.ClassFileAssembler, short[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.ByteVectorFactory sun.reflect.ByteVector create()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.ByteVectorFactory sun.reflect.ByteVector create(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.ClassDefiner.1 java.lang.ClassLoader run()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.ClassFileAssembler void append(sun.reflect.ByteVector) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.ClassFileAssembler void append(sun.reflect.ClassFileAssembler) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.ClassFileAssembler void emitConstantPoolUTF8(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.ClassFileAssembler void opc_goto(sun.reflect.Label) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.ClassFileAssembler void opc_if_icmpeq(sun.reflect.Label) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.ClassFileAssembler void opc_ifeq(sun.reflect.Label) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.ClassFileAssembler void opc_ifnonnull(sun.reflect.Label) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.ClassFileAssembler void opc_ifnull(sun.reflect.Label) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.MethodAccessorGenerator sun.reflect.ConstructorAccessor generateConstructor(java.lang.Class, java.lang.Class[], java.lang.Class[], int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.MethodAccessorGenerator sun.reflect.MagicAccessorImpl generate(java.lang.Class, java.lang.String, java.lang.Class[], java.lang.Class, java.lang.Class[], int, boolean, boolean, java.lang.Class) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.MethodAccessorGenerator sun.reflect.MethodAccessor generateMethod(java.lang.Class, java.lang.String, java.lang.Class[], java.lang.Class, java.lang.Class[], int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.MethodAccessorGenerator sun.reflect.SerializationConstructorAccessorImpl generateSerializationConstructor(java.lang.Class, java.lang.Class[], java.lang.Class[], int, java.lang.Class) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.Reflection boolean isCallerSensitive(java.lang.reflect.Method) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.Reflection boolean isSameClassPackage(java.lang.Class, java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.Reflection boolean isSameClassPackage(java.lang.Class, java.lang.Class) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.Reflection boolean isSubclassOf(java.lang.Class, java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.reflect.Reflection java.util.Map registerFilter(java.util.Map, java.lang.Class, java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.Reflection java.util.Map registerFilter(java.util.Map, java.lang.Class, java.lang.String[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_-&gt;!null;_,!null,_-&gt;!null;_,_,!null-&gt;!null;_,_,null-&gt;!null;_,null,_-&gt;!null;null,_,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.Reflection void ensureMemberAccess(java.lang.Class, java.lang.Class, java.lang.Object, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.Reflection void ensureMemberAccess(java.lang.Class, java.lang.Class, java.lang.Object, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.ReflectionFactory boolean access$002(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;false-&gt;false;true-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="sun.reflect.ReflectionFactory boolean access$202(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;false-&gt;false;true-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="sun.reflect.ReflectionFactory java.lang.reflect.Constructor newConstructorForSerialization(java.lang.Class, java.lang.reflect.Constructor) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.ReflectionFactory sun.reflect.ConstructorAccessor newConstructorAccessor(java.lang.reflect.Constructor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.ReflectionFactory sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.ReflectionFactory sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,false-&gt;!null;_,true-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UTF8 byte[] encode(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UTF8 int utf8Length(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeBooleanFieldAccessorImpl UnsafeBooleanFieldAccessorImpl(java.lang.reflect.Field) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeBooleanFieldAccessorImpl java.lang.Object get(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeByteFieldAccessorImpl UnsafeByteFieldAccessorImpl(java.lang.reflect.Field) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeByteFieldAccessorImpl java.lang.Object get(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeCharacterFieldAccessorImpl UnsafeCharacterFieldAccessorImpl(java.lang.reflect.Field) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeCharacterFieldAccessorImpl java.lang.Object get(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeDoubleFieldAccessorImpl UnsafeDoubleFieldAccessorImpl(java.lang.reflect.Field) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeDoubleFieldAccessorImpl java.lang.Object get(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeFieldAccessorFactory sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeFieldAccessorFactory sun.reflect.FieldAccessor newFieldAccessor(java.lang.reflect.Field, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,false-&gt;!null;_,true-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeFieldAccessorImpl UnsafeFieldAccessorImpl(java.lang.reflect.Field) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeFieldAccessorImpl java.lang.IllegalArgumentException newGetIllegalArgumentException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeFieldAccessorImpl java.lang.String getSetMessage(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeFieldAccessorImpl void ensureObj(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeFloatFieldAccessorImpl UnsafeFloatFieldAccessorImpl(java.lang.reflect.Field) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeFloatFieldAccessorImpl java.lang.Object get(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeIntegerFieldAccessorImpl UnsafeIntegerFieldAccessorImpl(java.lang.reflect.Field) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeIntegerFieldAccessorImpl java.lang.Object get(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeLongFieldAccessorImpl UnsafeLongFieldAccessorImpl(java.lang.reflect.Field) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeLongFieldAccessorImpl java.lang.Object get(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeObjectFieldAccessorImpl UnsafeObjectFieldAccessorImpl(java.lang.reflect.Field) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeQualifiedBooleanFieldAccessorImpl UnsafeQualifiedBooleanFieldAccessorImpl(java.lang.reflect.Field, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeQualifiedBooleanFieldAccessorImpl java.lang.Object get(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeQualifiedByteFieldAccessorImpl UnsafeQualifiedByteFieldAccessorImpl(java.lang.reflect.Field, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeQualifiedByteFieldAccessorImpl java.lang.Object get(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeQualifiedCharacterFieldAccessorImpl UnsafeQualifiedCharacterFieldAccessorImpl(java.lang.reflect.Field, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeQualifiedCharacterFieldAccessorImpl java.lang.Object get(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeQualifiedDoubleFieldAccessorImpl UnsafeQualifiedDoubleFieldAccessorImpl(java.lang.reflect.Field, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeQualifiedDoubleFieldAccessorImpl java.lang.Object get(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeQualifiedFieldAccessorImpl UnsafeQualifiedFieldAccessorImpl(java.lang.reflect.Field, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeQualifiedFloatFieldAccessorImpl UnsafeQualifiedFloatFieldAccessorImpl(java.lang.reflect.Field, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeQualifiedFloatFieldAccessorImpl java.lang.Object get(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeQualifiedIntegerFieldAccessorImpl UnsafeQualifiedIntegerFieldAccessorImpl(java.lang.reflect.Field, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeQualifiedIntegerFieldAccessorImpl java.lang.Object get(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeQualifiedLongFieldAccessorImpl UnsafeQualifiedLongFieldAccessorImpl(java.lang.reflect.Field, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeQualifiedLongFieldAccessorImpl java.lang.Object get(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeQualifiedObjectFieldAccessorImpl UnsafeQualifiedObjectFieldAccessorImpl(java.lang.reflect.Field, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeQualifiedShortFieldAccessorImpl UnsafeQualifiedShortFieldAccessorImpl(java.lang.reflect.Field, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeQualifiedShortFieldAccessorImpl java.lang.Object get(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeQualifiedStaticBooleanFieldAccessorImpl UnsafeQualifiedStaticBooleanFieldAccessorImpl(java.lang.reflect.Field, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeQualifiedStaticBooleanFieldAccessorImpl java.lang.Object get(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeQualifiedStaticByteFieldAccessorImpl UnsafeQualifiedStaticByteFieldAccessorImpl(java.lang.reflect.Field, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeQualifiedStaticByteFieldAccessorImpl java.lang.Object get(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeQualifiedStaticCharacterFieldAccessorImpl UnsafeQualifiedStaticCharacterFieldAccessorImpl(java.lang.reflect.Field, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeQualifiedStaticCharacterFieldAccessorImpl java.lang.Object get(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeQualifiedStaticDoubleFieldAccessorImpl UnsafeQualifiedStaticDoubleFieldAccessorImpl(java.lang.reflect.Field, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeQualifiedStaticDoubleFieldAccessorImpl java.lang.Object get(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeQualifiedStaticFieldAccessorImpl UnsafeQualifiedStaticFieldAccessorImpl(java.lang.reflect.Field, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeQualifiedStaticFloatFieldAccessorImpl UnsafeQualifiedStaticFloatFieldAccessorImpl(java.lang.reflect.Field, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeQualifiedStaticFloatFieldAccessorImpl java.lang.Object get(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeQualifiedStaticIntegerFieldAccessorImpl UnsafeQualifiedStaticIntegerFieldAccessorImpl(java.lang.reflect.Field, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeQualifiedStaticIntegerFieldAccessorImpl java.lang.Object get(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeQualifiedStaticLongFieldAccessorImpl UnsafeQualifiedStaticLongFieldAccessorImpl(java.lang.reflect.Field, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeQualifiedStaticLongFieldAccessorImpl java.lang.Object get(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl UnsafeQualifiedStaticObjectFieldAccessorImpl(java.lang.reflect.Field, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeQualifiedStaticShortFieldAccessorImpl UnsafeQualifiedStaticShortFieldAccessorImpl(java.lang.reflect.Field, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeQualifiedStaticShortFieldAccessorImpl java.lang.Object get(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeShortFieldAccessorImpl UnsafeShortFieldAccessorImpl(java.lang.reflect.Field) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeShortFieldAccessorImpl java.lang.Object get(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeStaticBooleanFieldAccessorImpl UnsafeStaticBooleanFieldAccessorImpl(java.lang.reflect.Field) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeStaticBooleanFieldAccessorImpl java.lang.Object get(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeStaticByteFieldAccessorImpl UnsafeStaticByteFieldAccessorImpl(java.lang.reflect.Field) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeStaticByteFieldAccessorImpl java.lang.Object get(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeStaticCharacterFieldAccessorImpl UnsafeStaticCharacterFieldAccessorImpl(java.lang.reflect.Field) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeStaticCharacterFieldAccessorImpl java.lang.Object get(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeStaticDoubleFieldAccessorImpl UnsafeStaticDoubleFieldAccessorImpl(java.lang.reflect.Field) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeStaticDoubleFieldAccessorImpl java.lang.Object get(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeStaticFieldAccessorImpl UnsafeStaticFieldAccessorImpl(java.lang.reflect.Field) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeStaticFloatFieldAccessorImpl UnsafeStaticFloatFieldAccessorImpl(java.lang.reflect.Field) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeStaticFloatFieldAccessorImpl java.lang.Object get(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeStaticIntegerFieldAccessorImpl UnsafeStaticIntegerFieldAccessorImpl(java.lang.reflect.Field) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeStaticIntegerFieldAccessorImpl java.lang.Object get(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeStaticLongFieldAccessorImpl UnsafeStaticLongFieldAccessorImpl(java.lang.reflect.Field) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeStaticLongFieldAccessorImpl java.lang.Object get(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeStaticObjectFieldAccessorImpl UnsafeStaticObjectFieldAccessorImpl(java.lang.reflect.Field) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeStaticShortFieldAccessorImpl UnsafeStaticShortFieldAccessorImpl(java.lang.reflect.Field) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.UnsafeStaticShortFieldAccessorImpl java.lang.Object get(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
