<root>
  <item name="sun.reflect.generics.repository.AbstractRepository AbstractRepository(java.lang.String, sun.reflect.generics.factory.GenericsFactory) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.repository.AbstractRepository T getTree()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="abstract virtual sun.reflect.generics.repository.AbstractRepository T parse(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.repository.AbstractRepository sun.reflect.generics.factory.GenericsFactory getFactory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.reflect.generics.repository.AbstractRepository sun.reflect.generics.visitor.Reifier getReifier()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.reflect.generics.repository.AbstractRepository sun.reflect.generics.visitor.Reifier getReifier()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.repository.ClassRepository ClassRepository(java.lang.String, sun.reflect.generics.factory.GenericsFactory) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.repository.ClassRepository sun.reflect.generics.repository.ClassRepository make(java.lang.String, sun.reflect.generics.factory.GenericsFactory) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.repository.ClassRepository sun.reflect.generics.repository.ClassRepository make(java.lang.String, sun.reflect.generics.factory.GenericsFactory)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.reflect.generics.repository.ClassRepository sun.reflect.generics.tree.ClassSignature parse(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.repository.ClassRepository sun.reflect.generics.tree.ClassSignature parse(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.reflect.generics.repository.ClassRepository sun.reflect.generics.tree.ClassSignature parse(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.repository.ClassRepository sun.reflect.generics.tree.ClassSignature parse(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.reflect.generics.repository.ClassRepository sun.reflect.generics.tree.Tree parse(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.repository.ClassRepository sun.reflect.generics.tree.Tree parse(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.reflect.generics.repository.ClassRepository sun.reflect.generics.tree.Tree parse(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.repository.ClassRepository sun.reflect.generics.tree.Tree parse(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.repository.ConstructorRepository ConstructorRepository(java.lang.String, sun.reflect.generics.factory.GenericsFactory) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.repository.ConstructorRepository sun.reflect.generics.repository.ConstructorRepository make(java.lang.String, sun.reflect.generics.factory.GenericsFactory) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.repository.ConstructorRepository sun.reflect.generics.repository.ConstructorRepository make(java.lang.String, sun.reflect.generics.factory.GenericsFactory)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.reflect.generics.repository.ConstructorRepository sun.reflect.generics.tree.MethodTypeSignature parse(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.repository.ConstructorRepository sun.reflect.generics.tree.MethodTypeSignature parse(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.reflect.generics.repository.ConstructorRepository sun.reflect.generics.tree.MethodTypeSignature parse(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.repository.ConstructorRepository sun.reflect.generics.tree.MethodTypeSignature parse(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.reflect.generics.repository.ConstructorRepository sun.reflect.generics.tree.Tree parse(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.repository.ConstructorRepository sun.reflect.generics.tree.Tree parse(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.repository.ConstructorRepository sun.reflect.generics.tree.Tree parse(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.reflect.generics.repository.ConstructorRepository sun.reflect.generics.tree.Tree parse(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.repository.FieldRepository FieldRepository(java.lang.String, sun.reflect.generics.factory.GenericsFactory) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.repository.FieldRepository sun.reflect.generics.repository.FieldRepository make(java.lang.String, sun.reflect.generics.factory.GenericsFactory) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.repository.FieldRepository sun.reflect.generics.repository.FieldRepository make(java.lang.String, sun.reflect.generics.factory.GenericsFactory)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.repository.FieldRepository sun.reflect.generics.tree.Tree parse(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.reflect.generics.repository.FieldRepository sun.reflect.generics.tree.Tree parse(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.repository.FieldRepository sun.reflect.generics.tree.TypeSignature parse(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.reflect.generics.repository.FieldRepository sun.reflect.generics.tree.TypeSignature parse(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.repository.GenericDeclRepository GenericDeclRepository(java.lang.String, sun.reflect.generics.factory.GenericsFactory) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.repository.MethodRepository MethodRepository(java.lang.String, sun.reflect.generics.factory.GenericsFactory) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.repository.MethodRepository sun.reflect.generics.repository.MethodRepository make(java.lang.String, sun.reflect.generics.factory.GenericsFactory) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.repository.MethodRepository sun.reflect.generics.repository.MethodRepository make(java.lang.String, sun.reflect.generics.factory.GenericsFactory)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
