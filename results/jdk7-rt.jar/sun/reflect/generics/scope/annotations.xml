<root>
  <item name="sun.reflect.generics.scope.ClassScope sun.reflect.generics.scope.ClassScope make(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.scope.ConstructorScope sun.reflect.generics.scope.ConstructorScope make(java.lang.reflect.Constructor)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.scope.ConstructorScope sun.reflect.generics.scope.Scope computeEnclosingScope()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.scope.DummyScope java.lang.reflect.TypeVariable lookup(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.reflect.generics.scope.MethodScope sun.reflect.generics.scope.MethodScope make(java.lang.reflect.Method)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.scope.MethodScope sun.reflect.generics.scope.Scope computeEnclosingScope()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
