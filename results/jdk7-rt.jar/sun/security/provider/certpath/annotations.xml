<root>
  <item name="sun.security.provider.certpath.AdaptableX509CertSelector boolean match(java.security.cert.Certificate)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.AdjacencyList AdjacencyList(java.util.List) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.AdjacencyList boolean buildList(java.util.List, int, sun.security.provider.certpath.BuildStep) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.AdjacencyList java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.AlgorithmChecker AlgorithmChecker(java.security.cert.TrustAnchor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.AlgorithmChecker AlgorithmChecker(java.security.cert.TrustAnchor, java.security.AlgorithmConstraints) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.AlgorithmChecker void check(java.security.PublicKey, java.security.cert.X509CRL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.AlgorithmChecker void check(java.security.PublicKey, sun.security.x509.AlgorithmId) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.AlgorithmChecker void check(java.security.PublicKey, sun.security.x509.AlgorithmId) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.BasicChecker BasicChecker(java.security.cert.TrustAnchor, java.util.Date, java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.BasicChecker java.security.PublicKey makeInheritedParamsKey(java.security.PublicKey, java.security.PublicKey) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.BasicChecker java.security.PublicKey makeInheritedParamsKey(java.security.PublicKey, java.security.PublicKey) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.BasicChecker void check(java.security.cert.Certificate, java.util.Collection) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.BasicChecker void updateState(java.security.cert.X509Certificate) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.BasicChecker void verifySignature(java.security.cert.X509Certificate, java.security.PublicKey, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.BasicChecker void verifyTimestamp(java.security.cert.X509Certificate, java.util.Date) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.BuildStep java.lang.String fullToString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.BuildStep java.lang.String resultToString(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.BuildStep java.lang.String verboseToString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.Builder Builder(java.security.cert.PKIXBuilderParameters, javax.security.auth.x500.X500Principal) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.Builder boolean addMatchingCerts(java.security.cert.X509CertSelector, java.util.Collection, java.util.Collection, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.Builder boolean isLocalCertStore(java.security.cert.CertStore) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.Builder int distance(sun.security.x509.GeneralNameInterface, sun.security.x509.GeneralNameInterface, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.Builder int hops(sun.security.x509.GeneralNameInterface, sun.security.x509.GeneralNameInterface, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.CertId CertId(java.security.cert.X509Certificate, sun.security.x509.SerialNumber) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.CertId CertId(sun.security.util.DerInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.CertId java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.CertId void encode(sun.security.util.DerOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.CollectionCertStore CollectionCertStore(java.security.cert.CertStoreParameters) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.ConstraintsChecker int mergeBasicConstraints(java.security.cert.X509Certificate, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.ConstraintsChecker sun.security.x509.NameConstraintsExtension mergeNameConstraints(java.security.cert.X509Certificate, sun.security.x509.NameConstraintsExtension)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.CrlRevocationChecker CrlRevocationChecker(java.security.cert.TrustAnchor, java.security.cert.PKIXParameters) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.CrlRevocationChecker CrlRevocationChecker(java.security.cert.TrustAnchor, java.security.cert.PKIXParameters, java.util.Collection) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.CrlRevocationChecker CrlRevocationChecker(java.security.cert.TrustAnchor, java.security.cert.PKIXParameters, java.util.Collection, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.CrlRevocationChecker boolean certCanSignCrl(java.security.cert.X509Certificate) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.CrlRevocationChecker boolean check(java.security.cert.X509Certificate, java.security.PublicKey, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.CrlRevocationChecker void buildToNewKey(java.security.cert.X509Certificate, java.security.PublicKey, java.util.Set) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.CrlRevocationChecker void check(java.security.cert.Certificate, java.util.Collection) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.CrlRevocationChecker void verifyWithSeparateSigningKey(java.security.cert.X509Certificate, java.security.PublicKey, boolean, java.util.Set) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.CrlRevocationChecker.RejectKeySelector boolean match(java.security.cert.Certificate)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.CrlRevocationChecker.RejectKeySelector java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.DistributionPointFetcher boolean issues(sun.security.x509.X509CertImpl, sun.security.x509.X509CRLImpl, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.DistributionPointFetcher boolean issues(sun.security.x509.X509CertImpl, sun.security.x509.X509CRLImpl, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.DistributionPointFetcher boolean verifyCRL(sun.security.x509.X509CertImpl, sun.security.x509.DistributionPoint, java.security.cert.X509CRL, boolean[], boolean, java.security.PublicKey, java.lang.String, java.util.Set, java.util.List, java.util.Date) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.DistributionPointFetcher boolean verifyCRL(sun.security.x509.X509CertImpl, sun.security.x509.DistributionPoint, java.security.cert.X509CRL, boolean[], boolean, java.security.PublicKey, java.lang.String, java.util.Set, java.util.List, java.util.Date) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.DistributionPointFetcher boolean verifyCRL(sun.security.x509.X509CertImpl, sun.security.x509.DistributionPoint, java.security.cert.X509CRL, boolean[], boolean, java.security.PublicKey, java.lang.String, java.util.Set, java.util.List, java.util.Date)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,null,_,_,_,_,_,_-&gt;false;_,_,null,_,_,_,_,_,_,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.DistributionPointFetcher java.security.cert.X509CRL getCRL(sun.security.x509.URIName) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.DistributionPointFetcher java.util.Collection getCRLs(java.security.cert.X509CRLSelector, sun.security.x509.X509CertImpl, sun.security.x509.DistributionPoint, boolean[], boolean, java.security.PublicKey, java.lang.String, java.util.List, java.util.Set, java.util.Date) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.DistributionPointFetcher java.util.Collection getCRLs(sun.security.x509.X500Name, javax.security.auth.x500.X500Principal, java.util.List) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.DistributionPointFetcher java.util.Collection getCRLs(sun.security.x509.X500Name, javax.security.auth.x500.X500Principal, java.util.List) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.DistributionPointFetcher sun.security.x509.GeneralNames getFullNames(sun.security.x509.X500Name, sun.security.x509.RDN) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.DistributionPointFetcher sun.security.x509.GeneralNames getFullNames(sun.security.x509.X500Name, sun.security.x509.RDN)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;_,null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.ForwardBuilder ForwardBuilder(java.security.cert.PKIXBuilderParameters, javax.security.auth.x500.X500Principal, boolean, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.ForwardBuilder boolean getCerts(sun.security.x509.AuthorityInfoAccessExtension, java.util.Collection)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;false;null,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.ForwardBuilder java.util.Collection getMatchingCerts(sun.security.provider.certpath.State, java.util.List) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.ForwardBuilder java.util.Collection getMatchingCerts(sun.security.provider.certpath.State, java.util.List)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;_,null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.ForwardBuilder void addCertToPath(java.security.cert.X509Certificate, java.util.LinkedList) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.ForwardBuilder void getMatchingCACerts(sun.security.provider.certpath.ForwardState, java.util.List, java.util.Collection) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.ForwardBuilder void getMatchingCACerts(sun.security.provider.certpath.ForwardState, java.util.List, java.util.Collection) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.ForwardBuilder void removeFinalCertFromPath(java.util.LinkedList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.ForwardBuilder void verifyCert(java.security.cert.X509Certificate, sun.security.provider.certpath.State, java.util.List) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.ForwardBuilder.PKIXCertComparator int compare(java.security.cert.X509Certificate, java.security.cert.X509Certificate) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.ForwardState java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.IndexedCollectionCertStore IndexedCollectionCertStore(java.security.cert.CertStoreParameters) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.IndexedCollectionCertStore java.util.Collection engineGetCRLs(java.security.cert.CRLSelector)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.IndexedCollectionCertStore java.util.Collection engineGetCertificates(java.security.cert.CertSelector)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.IndexedCollectionCertStore void buildIndex(java.util.Collection) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.IndexedCollectionCertStore void indexCRL(java.security.cert.X509CRL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.IndexedCollectionCertStore void indexCertificate(java.security.cert.X509Certificate) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.KeyChecker void verifyCAKeyUsage(java.security.cert.X509Certificate) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.OCSP java.net.URI getResponderURI(sun.security.x509.X509CertImpl) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.OCSP sun.security.provider.certpath.OCSP.RevocationStatus check(java.security.cert.X509Certificate, java.security.cert.X509Certificate) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.OCSP sun.security.provider.certpath.OCSP.RevocationStatus check(java.security.cert.X509Certificate, java.security.cert.X509Certificate, java.net.URI, java.security.cert.X509Certificate, java.util.Date) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.OCSP sun.security.provider.certpath.OCSP.RevocationStatus check(java.security.cert.X509Certificate, java.security.cert.X509Certificate, java.net.URI, java.security.cert.X509Certificate, java.util.Date) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.OCSP sun.security.provider.certpath.OCSP.RevocationStatus check(java.security.cert.X509Certificate, java.security.cert.X509Certificate, java.net.URI, java.util.List, java.util.Date) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.OCSP sun.security.provider.certpath.OCSP.RevocationStatus check(java.security.cert.X509Certificate, java.security.cert.X509Certificate, java.net.URI, java.util.List, java.util.Date) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.OCSP sun.security.provider.certpath.OCSPResponse check(java.util.List, java.net.URI, java.util.List, java.util.Date) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.OCSP sun.security.provider.certpath.OCSPResponse check(java.util.List, java.net.URI, java.util.List, java.util.Date) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.OCSPChecker java.lang.String stripOutSeparators(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.OCSPChecker java.lang.String stripOutSeparators(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.OCSPChecker java.lang.String[] getOCSPProperties()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.OCSPChecker java.net.URI getOCSPServerURI(sun.security.x509.X509CertImpl, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.OCSPResponse OCSPResponse(byte[], java.util.Date, java.util.List) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.OCSPResponse boolean verifyResponse(byte[], java.security.cert.X509Certificate, sun.security.x509.AlgorithmId, byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.OCSPResponse boolean verifyResponse(byte[], java.security.cert.X509Certificate, sun.security.x509.AlgorithmId, byte[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.OCSPResponse boolean verifyResponse(byte[], java.security.cert.X509Certificate, sun.security.x509.AlgorithmId, byte[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.OCSPResponse.SingleResponse SingleResponse(sun.security.util.DerValue) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.OCSPResponse.SingleResponse SingleResponse(sun.security.util.DerValue, java.util.Date) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.OCSPResponse.SingleResponse SingleResponse(sun.security.util.DerValue, java.util.Date, sun.security.provider.certpath.OCSPResponse.1) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.OCSPResponse.SingleResponse java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.OCSPResponse.SingleResponse java.util.Map getSingleExtensions()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.OCSPResponse.SingleResponse sun.security.provider.certpath.CertId access$100(sun.security.provider.certpath.OCSPResponse.SingleResponse) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.PKIXCertPathValidator boolean isWorthTrying(java.security.cert.X509Certificate, java.security.cert.X509Certificate)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.PKIXCertPathValidator java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath, java.security.cert.CertPathParameters) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.PKIXCertPathValidator java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath, java.security.cert.CertPathParameters) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.PKIXCertPathValidator java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath, java.security.cert.CertPathParameters)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.PKIXCertPathValidator java.security.cert.PolicyNode doValidate(java.security.cert.TrustAnchor, java.security.cert.CertPath, java.util.ArrayList, java.security.cert.PKIXParameters, sun.security.provider.certpath.PolicyNodeImpl) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.PKIXCertPathValidator java.security.cert.PolicyNode doValidate(java.security.cert.TrustAnchor, java.security.cert.CertPath, java.util.ArrayList, java.security.cert.PKIXParameters, sun.security.provider.certpath.PolicyNodeImpl) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.PKIXCertPathValidator java.security.cert.PolicyNode doValidate(java.security.cert.TrustAnchor, java.security.cert.CertPath, java.util.ArrayList, java.security.cert.PKIXParameters, sun.security.provider.certpath.PolicyNodeImpl) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.PKIXCertPathValidator void populateVariables(java.security.cert.PKIXParameters) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.PKIXMasterCertPathValidator boolean isRevocationCheck(java.security.cert.PKIXCertPathChecker, int, java.util.List)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.PKIXMasterCertPathValidator void validate(java.security.cert.CertPath, java.util.List) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.PolicyChecker PolicyChecker(java.util.Set, int, boolean, boolean, boolean, boolean, sun.security.provider.certpath.PolicyNodeImpl) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.PolicyChecker boolean processParents(int, boolean, boolean, sun.security.provider.certpath.PolicyNodeImpl, java.lang.String, java.util.Set, boolean) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.PolicyChecker boolean processParents(int, boolean, boolean, sun.security.provider.certpath.PolicyNodeImpl, java.lang.String, java.util.Set, boolean) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.PolicyChecker int mergeExplicitPolicy(int, sun.security.x509.X509CertImpl, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.PolicyChecker int mergeInhibitAnyPolicy(int, sun.security.x509.X509CertImpl) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.PolicyChecker int mergePolicyMapping(int, sun.security.x509.X509CertImpl) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.PolicyChecker sun.security.provider.certpath.PolicyNodeImpl processPolicies(int, java.util.Set, int, int, int, boolean, sun.security.provider.certpath.PolicyNodeImpl, sun.security.x509.X509CertImpl, boolean) 7">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.PolicyChecker sun.security.provider.certpath.PolicyNodeImpl processPolicyMappings(sun.security.x509.X509CertImpl, int, int, sun.security.provider.certpath.PolicyNodeImpl, boolean, java.util.Set) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.PolicyChecker sun.security.provider.certpath.PolicyNodeImpl processPolicyMappings(sun.security.x509.X509CertImpl, int, int, sun.security.provider.certpath.PolicyNodeImpl, boolean, java.util.Set)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.PolicyChecker sun.security.provider.certpath.PolicyNodeImpl removeInvalidNodes(sun.security.provider.certpath.PolicyNodeImpl, int, java.util.Set, sun.security.x509.CertificatePoliciesExtension) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.PolicyChecker sun.security.provider.certpath.PolicyNodeImpl rewriteLeafNodes(int, java.util.Set, sun.security.provider.certpath.PolicyNodeImpl) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.PolicyNodeImpl PolicyNodeImpl(sun.security.provider.certpath.PolicyNodeImpl, sun.security.provider.certpath.PolicyNodeImpl) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.PolicyNodeImpl java.lang.String asString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.PolicyNodeImpl java.lang.String policyToString(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.PolicyNodeImpl java.lang.String policyToString(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.PolicyNodeImpl java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.PolicyNodeImpl java.util.Set getExpectedPolicies()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.PolicyNodeImpl java.util.Set getPolicyNodes(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.PolicyNodeImpl java.util.Set getPolicyNodesExpected(int, java.lang.String, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.PolicyNodeImpl java.util.Set getPolicyQualifiers()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.ReverseBuilder ReverseBuilder(java.security.cert.PKIXBuilderParameters, javax.security.auth.x500.X500Principal) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.ReverseBuilder boolean isPathCompleted(java.security.cert.X509Certificate) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.ReverseBuilder java.util.Collection getMatchingCACerts(sun.security.provider.certpath.ReverseState, java.util.List) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.ReverseBuilder java.util.Collection getMatchingCACerts(sun.security.provider.certpath.ReverseState, java.util.List)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;_,null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.ReverseBuilder java.util.Collection getMatchingCerts(sun.security.provider.certpath.State, java.util.List) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.ReverseBuilder java.util.Collection getMatchingCerts(sun.security.provider.certpath.State, java.util.List)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;_,null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.ReverseBuilder java.util.Collection getMatchingEECerts(sun.security.provider.certpath.ReverseState, java.util.List) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.ReverseBuilder java.util.Collection getMatchingEECerts(sun.security.provider.certpath.ReverseState, java.util.List)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;_,null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.ReverseBuilder void addCertToPath(java.security.cert.X509Certificate, java.util.LinkedList) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.ReverseBuilder void removeFinalCertFromPath(java.util.LinkedList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.ReverseBuilder void verifyCert(java.security.cert.X509Certificate, sun.security.provider.certpath.State, java.util.List) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.ReverseBuilder.PKIXCertComparator int compare(java.security.cert.X509Certificate, java.security.cert.X509Certificate) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.ReverseState java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.ReverseState void updateState(java.security.cert.TrustAnchor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.SunCertPathBuilder boolean anchorIsTarget(java.security.cert.TrustAnchor, java.security.cert.X509CertSelector) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.SunCertPathBuilder java.security.cert.CertPathBuilderResult buildCertPath(boolean, boolean, java.util.List) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.SunCertPathBuilder java.security.cert.CertPathBuilderResult engineBuild(java.security.cert.CertPathParameters) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.SunCertPathBuilder java.util.List addVertices(java.util.Collection, java.util.List) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.SunCertPathBuilder java.util.List addVertices(java.util.Collection, java.util.List) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.SunCertPathBuilder javax.security.auth.x500.X500Principal getTargetSubjectDN(java.util.List, java.security.cert.X509CertSelector) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.SunCertPathBuilder void buildForward(java.util.List, java.util.LinkedList, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.SunCertPathBuilder void buildReverse(java.util.List, java.util.LinkedList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.SunCertPathBuilder void depthFirstSearchForward(javax.security.auth.x500.X500Principal, sun.security.provider.certpath.ForwardState, sun.security.provider.certpath.ForwardBuilder, java.util.List, java.util.LinkedList) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.SunCertPathBuilder void depthFirstSearchForward(javax.security.auth.x500.X500Principal, sun.security.provider.certpath.ForwardState, sun.security.provider.certpath.ForwardBuilder, java.util.List, java.util.LinkedList) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.SunCertPathBuilder void depthFirstSearchReverse(javax.security.auth.x500.X500Principal, sun.security.provider.certpath.ReverseState, sun.security.provider.certpath.ReverseBuilder, java.util.List, java.util.LinkedList) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.SunCertPathBuilder void depthFirstSearchReverse(javax.security.auth.x500.X500Principal, sun.security.provider.certpath.ReverseState, sun.security.provider.certpath.ReverseBuilder, java.util.List, java.util.LinkedList) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.SunCertPathBuilder.CertStoreComparator int compare(java.security.cert.CertStore, java.security.cert.CertStore) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.SunCertPathBuilderParameters SunCertPathBuilderParameters(java.security.KeyStore, java.security.cert.CertSelector) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.SunCertPathBuilderParameters java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.SunCertPathBuilderResult SunCertPathBuilderResult(java.security.cert.CertPath, java.security.cert.TrustAnchor, java.security.cert.PolicyNode, java.security.PublicKey, sun.security.provider.certpath.AdjacencyList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.SunCertPathBuilderResult SunCertPathBuilderResult(java.security.cert.CertPath, java.security.cert.TrustAnchor, java.security.cert.PolicyNode, java.security.PublicKey, sun.security.provider.certpath.AdjacencyList) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.SunCertPathBuilderResult SunCertPathBuilderResult(java.security.cert.CertPath, java.security.cert.TrustAnchor, java.security.cert.PolicyNode, java.security.PublicKey, sun.security.provider.certpath.AdjacencyList) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.URICertStore URICertStore(java.security.cert.CertStoreParameters) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.URICertStore java.security.cert.CertStore getInstance(sun.security.x509.AccessDescription) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.URICertStore java.util.Collection getMatchingCRLs(java.security.cert.X509CRL, java.security.cert.CRLSelector)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.URICertStore java.util.Collection getMatchingCerts(java.util.Collection, java.security.cert.CertSelector)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.URICertStore.URICertStoreParameters boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.URICertStore.URICertStoreParameters java.net.URI access$000(sun.security.provider.certpath.URICertStore.URICertStoreParameters) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.Vertex java.lang.String certToString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.Vertex java.lang.String indexToString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.Vertex java.lang.String moreToString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.Vertex java.lang.String throwableToString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.Vertex java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.X509CertPath X509CertPath(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.X509CertPath X509CertPath(java.io.InputStream, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.X509CertPath X509CertPath(java.util.List) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.X509CertPath byte[] readAllBytes(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.X509CertPath java.util.List parsePKCS7(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.X509CertPath java.util.List parsePKCS7(java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.X509CertPath java.util.List parsePKIPATH(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.X509CertificatePair X509CertificatePair(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.X509CertificatePair java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.X509CertificatePair void emit(sun.security.util.DerOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.security.provider.certpath.X509CertificatePair void parse(sun.security.util.DerValue) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
