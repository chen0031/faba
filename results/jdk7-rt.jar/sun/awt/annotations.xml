<root>
  <item name="abstract virtual sun.awt.AWTAccessor.AWTEventAccessor boolean isSystemGenerated(java.awt.AWTEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.AWTEventAccessor byte[] getBData(java.awt.AWTEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.AWTEventAccessor java.security.AccessControlContext getAccessControlContext(java.awt.AWTEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.AWTEventAccessor void setBData(java.awt.AWTEvent, byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.AWTEventAccessor void setPosted(java.awt.AWTEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.AWTEventAccessor void setSystemGenerated(java.awt.AWTEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.CheckboxMenuItemAccessor boolean getState(java.awt.CheckboxMenuItem) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.ComponentAccessor boolean canBeFocusOwner(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.ComponentAccessor boolean getBackgroundEraseDisabled(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.ComponentAccessor boolean getIgnoreRepaint(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.ComponentAccessor boolean isDisplayable(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.ComponentAccessor boolean isEnabled(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.ComponentAccessor boolean isLightweight(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.ComponentAccessor boolean isVisible(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.ComponentAccessor boolean requestFocus(java.awt.Component, sun.awt.CausedFocusEvent.Cause) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.ComponentAccessor int getHeight(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.ComponentAccessor int getWidth(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.ComponentAccessor int getX(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.ComponentAccessor int getY(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.ComponentAccessor java.awt.Color getBackground(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.ComponentAccessor java.awt.Color getForeground(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.ComponentAccessor java.awt.Container getParent(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.ComponentAccessor java.awt.Cursor getCursor(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.ComponentAccessor java.awt.Font getFont(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.ComponentAccessor java.awt.Point getLocation(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.ComponentAccessor java.awt.Rectangle getBounds(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.ComponentAccessor java.awt.peer.ComponentPeer getPeer(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.ComponentAccessor java.security.AccessControlContext getAccessControlContext(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.ComponentAccessor sun.awt.AppContext getAppContext(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.ComponentAccessor void processEvent(java.awt.Component, java.awt.AWTEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.ComponentAccessor void setAppContext(java.awt.Component, sun.awt.AppContext) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.ComponentAccessor void setBackground(java.awt.Component, java.awt.Color) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.ComponentAccessor void setBackgroundEraseDisabled(java.awt.Component, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.ComponentAccessor void setGraphicsConfiguration(java.awt.Component, java.awt.GraphicsConfiguration) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.ComponentAccessor void setLocation(java.awt.Component, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.ComponentAccessor void setMixingCutoutShape(java.awt.Component, java.awt.Shape) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.ComponentAccessor void setParent(java.awt.Component, java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.ComponentAccessor void setPeer(java.awt.Component, java.awt.peer.ComponentPeer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.ComponentAccessor void setSize(java.awt.Component, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.ContainerAccessor void validateUnconditionally(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.CursorAccessor int getType(java.awt.Cursor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.CursorAccessor long getPData(java.awt.Cursor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.CursorAccessor void setPData(java.awt.Cursor, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.DefaultKeyboardFocusManagerAccessor void consumeNextKeyTyped(java.awt.DefaultKeyboardFocusManager, java.awt.event.KeyEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.EventQueueAccessor boolean isDispatchThreadImpl(java.awt.EventQueue) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.EventQueueAccessor boolean noEvents(java.awt.EventQueue) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.EventQueueAccessor java.lang.Thread getDispatchThread(java.awt.EventQueue) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.EventQueueAccessor void invokeAndWait(java.lang.Object, java.lang.Runnable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.EventQueueAccessor void removeSourceEvents(java.awt.EventQueue, java.lang.Object, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.EventQueueAccessor void wakeup(java.awt.EventQueue, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.FileDialogAccessor boolean isMultipleMode(java.awt.FileDialog) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.FileDialogAccessor void setDirectory(java.awt.FileDialog, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.FileDialogAccessor void setFile(java.awt.FileDialog, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.FileDialogAccessor void setFiles(java.awt.FileDialog, java.io.File[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.FrameAccessor int getExtendedState(java.awt.Frame) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.FrameAccessor java.awt.Rectangle getMaximizedBounds(java.awt.Frame) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.FrameAccessor void setExtendedState(java.awt.Frame, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.KeyEventAccessor void setExtendedKeyCode(java.awt.event.KeyEvent, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.KeyEventAccessor void setPrimaryLevelUnicode(java.awt.event.KeyEvent, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.KeyEventAccessor void setRawCode(java.awt.event.KeyEvent, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.KeyboardFocusManagerAccessor java.awt.KeyboardFocusManager getCurrentKeyboardFocusManager(sun.awt.AppContext) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.MenuAccessor java.util.Vector getItems(java.awt.Menu) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.MenuBarAccessor java.awt.Menu getHelpMenu(java.awt.MenuBar) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.MenuBarAccessor java.util.Vector getMenus(java.awt.MenuBar) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.MenuComponentAccessor java.awt.Font getFont_NoClientCode(java.awt.MenuComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.MenuComponentAccessor java.awt.MenuContainer getParent(java.awt.MenuComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.MenuComponentAccessor sun.awt.AppContext getAppContext(java.awt.MenuComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.MenuComponentAccessor void setAppContext(java.awt.MenuComponent, sun.awt.AppContext) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.MenuItemAccessor boolean isEnabled(java.awt.MenuItem) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.MenuItemAccessor boolean isItemEnabled(java.awt.MenuItem) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.MenuItemAccessor java.awt.MenuShortcut getShortcut(java.awt.MenuItem) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.MenuItemAccessor java.lang.String getActionCommandImpl(java.awt.MenuItem) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.MenuItemAccessor java.lang.String getLabel(java.awt.MenuItem) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.PopupMenuAccessor boolean isTrayIconPopup(java.awt.PopupMenu) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.ScrollPaneAdjustableAccessor void setTypedValue(java.awt.ScrollPaneAdjustable, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.SequencedEventAccessor java.awt.AWTEvent getNested(java.awt.AWTEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.SystemTrayAccessor void firePropertyChange(java.awt.SystemTray, java.lang.String, java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.TrayIconAccessor void addNotify(java.awt.TrayIcon) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.TrayIconAccessor void removeNotify(java.awt.TrayIcon) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.WindowAccessor boolean isAutoRequestFocus(java.awt.Window) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.WindowAccessor boolean isTrayIconWindow(java.awt.Window) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.WindowAccessor float getOpacity(java.awt.Window) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.WindowAccessor java.awt.Dimension getSecurityWarningSize(java.awt.Window) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.WindowAccessor java.awt.Shape getShape(java.awt.Window) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.WindowAccessor java.awt.geom.Point2D calculateSecurityWarningPosition(java.awt.Window, double, double, double, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.WindowAccessor void setLWRequestStatus(java.awt.Window, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.WindowAccessor void setOpacity(java.awt.Window, float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.WindowAccessor void setOpaque(java.awt.Window, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.WindowAccessor void setSecurityWarningPosition(java.awt.Window, java.awt.geom.Point2D, float, float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.WindowAccessor void setSecurityWarningPosition(java.awt.Window, java.awt.geom.Point2D, float, float) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.WindowAccessor void setSecurityWarningSize(java.awt.Window, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.WindowAccessor void setShape(java.awt.Window, java.awt.Shape) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.WindowAccessor void setTrayIconWindow(java.awt.Window, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.AWTAccessor.WindowAccessor void updateWindow(java.awt.Window) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.AWTAutoShutdown void dumpPeers(sun.util.logging.PlatformLogger) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.AWTAutoShutdown.1 1(java.lang.Object, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.AWTCharset AWTCharset(java.lang.String, java.nio.charset.Charset) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.AWTCharset.Decoder Decoder(sun.awt.AWTCharset) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.AWTCharset.Decoder Decoder(sun.awt.AWTCharset, java.nio.charset.CharsetDecoder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.AWTCharset.Decoder Decoder(sun.awt.AWTCharset, java.nio.charset.CharsetDecoder) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.AWTCharset.Decoder void implOnMalformedInput(java.nio.charset.CodingErrorAction) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.AWTCharset.Decoder void implOnMalformedInput(java.nio.charset.CodingErrorAction) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.AWTCharset.Decoder void implOnUnmappableCharacter(java.nio.charset.CodingErrorAction) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.AWTCharset.Decoder void implOnUnmappableCharacter(java.nio.charset.CodingErrorAction) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.AWTCharset.Encoder Encoder(sun.awt.AWTCharset) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.AWTCharset.Encoder Encoder(sun.awt.AWTCharset, java.nio.charset.CharsetEncoder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.AWTCharset.Encoder Encoder(sun.awt.AWTCharset, java.nio.charset.CharsetEncoder) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.AWTCharset.Encoder void implOnMalformedInput(java.nio.charset.CodingErrorAction) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.AWTCharset.Encoder void implOnMalformedInput(java.nio.charset.CodingErrorAction) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.AWTCharset.Encoder void implOnUnmappableCharacter(java.nio.charset.CodingErrorAction) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.AWTCharset.Encoder void implOnUnmappableCharacter(java.nio.charset.CodingErrorAction) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.AWTPermissionFactory java.awt.AWTPermission newPermission(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.AWTPermissionFactory java.awt.AWTPermission newPermission(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.AWTPermissionFactory java.security.Permission newPermission(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.AWTPermissionFactory java.security.Permission newPermission(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.AppContext.6 java.lang.Object get(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.AppContext.6 void put(java.lang.Object, java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.AppContext.6 void remove(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.CGraphicsDevice void enterFullScreenExclusive(java.awt.Window) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.CGraphicsDevice void exitFullScreenExclusive(java.awt.Window) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.CGraphicsDevice void setDisplayMode(java.awt.DisplayMode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.CausedFocusEvent CausedFocusEvent(java.awt.Component, int, boolean, java.awt.Component, sun.awt.CausedFocusEvent.Cause) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.CustomCursor CustomCursor(java.awt.Image, java.awt.Point, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.CustomCursor CustomCursor(java.awt.Image, java.awt.Point, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.CustomCursor void createNativeCursor(java.awt.Image, int[], int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.DebugSettings void access$000(sun.awt.DebugSettings) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.DebugSettings void access$100(sun.awt.DebugSettings) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.DebugSettings void access$200(sun.awt.DebugSettings) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.DebugSettings void access$300(sun.awt.DebugSettings) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.EmbeddedFrame java.applet.Applet getAppletIfAncestorOf(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.EmbeddedFrame void addTraversingOutListeners(java.awt.KeyboardFocusManager) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.EmbeddedFrame void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.EmbeddedFrame void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.EmbeddedFrame void removeTraversingOutListeners(java.awt.KeyboardFocusManager) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.EventListenerAggregate EventListenerAggregate(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.FontConfiguration boolean isEmpty(short[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.FontConfiguration boolean isLogicalFontFaceName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.FontConfiguration boolean isLogicalFontFaceNameLC(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.FontConfiguration boolean isLogicalFontFamilyName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.FontConfiguration int getArrayIndex(java.lang.String[], java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.FontConfiguration java.lang.String getCompatibilityFamilyName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.FontConfiguration java.lang.String getCompatibilityFamilyName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.FontConfiguration java.lang.String getLogicalFontFaceName(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.FontConfiguration java.lang.String[] split(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.FontConfiguration java.lang.String[] split(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.FontConfiguration java.nio.charset.CharsetEncoder getFontCharsetEncoder(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.FontConfiguration java.util.Vector access$2600(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.FontConfiguration java.util.Vector splitSequence(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.FontConfiguration short access$1500(short[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.FontConfiguration short getShortArrayID(short[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.FontConfiguration short[] access$200(java.util.HashMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.FontConfiguration short[] toList(java.util.HashMap&lt;java.lang.String,java.lang.Short&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.FontConfiguration sun.awt.FontDescriptor[] getFontDescriptors(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.FontConfiguration void printTable(short[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.FontConfiguration void saveBinary(java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.FontConfiguration void writeShortTable(java.io.DataOutputStream, short[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.FontConfiguration.PropertiesHandler java.lang.Short getID(java.util.HashMap&lt;java.lang.String,java.lang.Short&gt;, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.FontConfiguration.PropertiesHandler void access$2400(sun.awt.FontConfiguration.PropertiesHandler, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.FontConfiguration.PropertiesHandler void access$2400(sun.awt.FontConfiguration.PropertiesHandler, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.FontConfiguration.PropertiesHandler void parseProperty(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.FontConfiguration.PropertiesHandler.FontProperties java.lang.Object put(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.FontConfiguration.PropertiesHandler.FontProperties java.lang.Object put(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.FontDescriptor FontDescriptor(java.lang.String, java.nio.charset.CharsetEncoder, int[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.GlobalCursorManager java.awt.Component findComponentAt(java.awt.Container, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.GlobalCursorManager java.awt.Point getLocationOnScreen(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.GlobalCursorManager void access$000(sun.awt.GlobalCursorManager, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.GlobalCursorManager void updateCursorImmediately(java.awt.event.InputEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.GlobalCursorManager void updateCursorImmediately(java.awt.event.InputEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.HToolkit java.awt.PrintJob getPrintJob(java.awt.Frame, java.lang.String, java.awt.JobAttributes, java.awt.PageAttributes) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.HToolkit java.awt.PrintJob getPrintJob(java.awt.Frame, java.lang.String, java.awt.JobAttributes, java.awt.PageAttributes) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.HToolkit java.awt.PrintJob getPrintJob(java.awt.Frame, java.lang.String, java.util.Properties) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.HToolkit java.awt.PrintJob getPrintJob(java.awt.Frame, java.lang.String, java.util.Properties) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.HeadlessToolkit java.awt.PrintJob getPrintJob(java.awt.Frame, java.lang.String, java.awt.JobAttributes, java.awt.PageAttributes) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.HeadlessToolkit java.awt.PrintJob getPrintJob(java.awt.Frame, java.lang.String, java.awt.JobAttributes, java.awt.PageAttributes) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.HeadlessToolkit java.awt.PrintJob getPrintJob(java.awt.Frame, java.lang.String, java.util.Properties) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.HeadlessToolkit java.awt.PrintJob getPrintJob(java.awt.Frame, java.lang.String, java.util.Properties) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.HorizBagLayout java.awt.Dimension minimumLayoutSize(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.HorizBagLayout java.awt.Dimension minimumLayoutSize(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.HorizBagLayout java.awt.Dimension preferredLayoutSize(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.HorizBagLayout java.awt.Dimension preferredLayoutSize(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.HorizBagLayout void layoutContainer(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.HorizBagLayout void layoutContainer(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.IconInfo IconInfo(int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.IconInfo IconInfo(java.awt.Image) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.IconInfo IconInfo(long[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.IconInfo int[] longArrayToIntArray(long[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.IconInfo java.awt.Image intArrayToImage(int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.IconInfo long[] intArrayToLongArray(int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.ModalityEvent ModalityEvent(java.lang.Object, sun.awt.ModalityListener, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.OSInfo.WindowsVersion int compareTo(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.OSInfo.WindowsVersion int compareTo(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.OSInfo.WindowsVersion int compareTo(sun.awt.OSInfo.WindowsVersion) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.OSInfo.WindowsVersion int compareTo(sun.awt.OSInfo.WindowsVersion) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.OrientableFlowLayout java.awt.Dimension minimumLayoutSize(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.OrientableFlowLayout java.awt.Dimension minimumLayoutSize(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.OrientableFlowLayout java.awt.Dimension preferredLayoutSize(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.OrientableFlowLayout java.awt.Dimension preferredLayoutSize(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.OrientableFlowLayout void layoutContainer(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.OrientableFlowLayout void layoutContainer(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.PaintEventDispatcher java.awt.event.PaintEvent createPaintEvent(java.awt.Component, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.PaintEventDispatcher java.awt.event.PaintEvent createPaintEvent(java.awt.Component, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.PeerEvent PeerEvent(java.lang.Object, java.lang.Runnable, java.lang.Object, boolean, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.PeerEvent PeerEvent(java.lang.Object, java.lang.Runnable, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.PlatformFont java.lang.Object[] makeConvertedMultiFontChars(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.PlatformFont java.lang.Object[] makeConvertedMultiFontChars(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.PlatformFont java.lang.Object[] makeConvertedMultiFontString(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.PlatformFont java.lang.Object[] makeConvertedMultiFontString(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.PlatformFont sun.awt.CharsetString[] makeMultiCharsetString(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.PlatformFont sun.awt.CharsetString[] makeMultiCharsetString(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.PlatformFont sun.awt.CharsetString[] makeMultiCharsetString(java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.PlatformFont sun.awt.CharsetString[] makeMultiCharsetString(java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.PostEventQueue void postEvent(java.awt.AWTEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.PostEventQueue void postEvent(java.awt.AWTEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.RepaintArea void add(java.awt.Rectangle, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.RepaintArea void add(java.awt.Rectangle, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.ScrollPaneWheelScroller int getIncrementFromAdjustable(java.awt.Adjustable, java.awt.event.MouseWheelEvent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.ScrollPaneWheelScroller java.awt.Adjustable getAdjustableToScroll(java.awt.ScrollPane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.ScrollPaneWheelScroller void scrollAdjustable(java.awt.Adjustable, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.SunGraphicsCallback void constrainGraphics(java.awt.Graphics, java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.SunGraphicsCallback void constrainGraphics(java.awt.Graphics, java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.SunGraphicsCallback void constrainGraphics(java.awt.Graphics, java.awt.Rectangle) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.SunGraphicsCallback void constrainGraphics(java.awt.Graphics, java.awt.Rectangle) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.SunGraphicsCallback void run(java.awt.Component, java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.SunGraphicsCallback void runComponents(java.awt.Component[], java.awt.Graphics, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.SunGraphicsCallback void runComponents(java.awt.Component[], java.awt.Graphics, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.SunGraphicsCallback.PaintHeavyweightComponentsCallback void run(java.awt.Component, java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.SunGraphicsCallback.PrintHeavyweightComponentsCallback void run(java.awt.Component, java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.SunHints.Value Value(sun.awt.SunHints.Key, int, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.SunHints.Value void register(sun.awt.SunHints.Key, sun.awt.SunHints.Value) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.SunHints.Value void register(sun.awt.SunHints.Key, sun.awt.SunHints.Value) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.SunToolkit boolean access$102(sun.awt.SunToolkit, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.SunToolkit boolean access$200(sun.awt.SunToolkit) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.SunToolkit boolean access$302(sun.awt.SunToolkit, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.SunToolkit boolean isLightweightOrUnknown(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.SunToolkit boolean isModalExcluded(java.awt.Window) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.SunToolkit java.awt.Container getNativeContainer(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.SunToolkit java.awt.EventQueue getSystemEventQueueImplPP(sun.awt.AppContext) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.SunToolkit java.awt.FontMetrics getFontMetrics(java.awt.Font) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.SunToolkit java.awt.FontMetrics getFontMetrics(java.awt.Font) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.SunToolkit java.awt.RenderingHints getDesktopAAHintsByName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.SunToolkit java.lang.Object access$000(sun.awt.SunToolkit) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.SunToolkit void checkAndSetPolicy(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.SunToolkit void dumpPeers(sun.util.logging.PlatformLogger) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.SunToolkit void executeOnEDTAndWait(java.lang.Object, java.lang.Runnable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.SunToolkit void executeOnEventHandlerThread(java.lang.Object, java.lang.Runnable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.SunToolkit void executeOnEventHandlerThread(java.lang.Object, java.lang.Runnable, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.SunToolkit void executeOnEventHandlerThread(sun.awt.PeerEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.SunToolkit void initEQ(sun.awt.AppContext) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.SunToolkit void invokeLaterOnAppContext(sun.awt.AppContext, java.lang.Runnable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.SunToolkit void notifyModalityChange(int, java.awt.Dialog) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.SunToolkit void notifyModalityPopped(java.awt.Dialog) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.SunToolkit void notifyModalityPopped(java.awt.Dialog) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.SunToolkit void notifyModalityPushed(java.awt.Dialog) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.SunToolkit void notifyModalityPushed(java.awt.Dialog) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.SunToolkit void postEvent(sun.awt.AppContext, java.awt.AWTEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.SunToolkit void postEvent(sun.awt.AppContext, java.awt.AWTEvent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.SunToolkit void postPriorityEvent(java.awt.AWTEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.SunToolkit void setModalExcluded(java.awt.Window) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.SunToolkit.2 2(java.lang.Object, java.lang.Runnable, long, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.SunToolkit.3 3(sun.awt.SunToolkit, java.lang.Object, java.lang.Runnable, long, long) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.SunToolkitSubclass void flushPendingEvents(sun.awt.AppContext) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.Symbol.Encoder java.nio.charset.CoderResult encodeLoop(java.nio.CharBuffer, java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.Symbol.Encoder java.nio.charset.CoderResult encodeLoop(java.nio.CharBuffer, java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.Symbol.Encoder java.nio.charset.CoderResult encodeLoop(java.nio.CharBuffer, java.nio.ByteBuffer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.Symbol.Encoder java.nio.charset.CoderResult encodeLoop(java.nio.CharBuffer, java.nio.ByteBuffer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.TimedWindowEvent TimedWindowEvent(java.awt.Window, int, java.awt.Window, int, int, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.TimedWindowEvent TimedWindowEvent(java.awt.Window, int, java.awt.Window, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.TracedEventQueue void postEvent(java.awt.AWTEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.TracedEventQueue void postEvent(java.awt.AWTEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.UNIXToolkit java.lang.Object lazilyLoadDesktopProperty(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.UNIXToolkit java.lang.Object lazilyLoadDesktopProperty(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.UngrabEvent UngrabEvent(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.VariableGridLayout java.lang.String fracsToString(double[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.VariableGridLayout void allocateExtraSpace(double[], java.util.BitSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.VariableGridLayout void allocateExtraSpace(double[], java.util.BitSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.VariableGridLayout void layoutContainer(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.VariableGridLayout void layoutContainer(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.VerticalBagLayout java.awt.Dimension minimumLayoutSize(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.VerticalBagLayout java.awt.Dimension minimumLayoutSize(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.VerticalBagLayout java.awt.Dimension preferredLayoutSize(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.VerticalBagLayout java.awt.Dimension preferredLayoutSize(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.VerticalBagLayout void layoutContainer(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.VerticalBagLayout void layoutContainer(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.X11CustomCursor X11CustomCursor(java.awt.Image, java.awt.Point, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.X11CustomCursor X11CustomCursor(java.awt.Image, java.awt.Point, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.X11CustomCursor void createNativeCursor(java.awt.Image, int[], int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.X11CustomCursor void createNativeCursor(java.awt.Image, int[], int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.X11CustomCursor.1CCount int compareTo(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.X11CustomCursor.1CCount int compareTo(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.X11FontManager java.lang.String getFileNameFromPlatformName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.X11FontManager java.lang.String getFileNameFromPlatformName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.X11FontManager java.lang.String getObliqueLucidaFontID(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.X11FontManager java.lang.String getX11FontName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.X11FontManager javax.swing.plaf.FontUIResource getFontConfigFUIR(java.lang.String, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.X11FontManager javax.swing.plaf.FontUIResource getFontConfigFUIR(java.lang.String, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.X11FontManager void registerFontDirs(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.X11FontManager void registerFontDirs(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.X11GraphicsConfig java.awt.image.VolatileImage createBackBufferImage(java.awt.Component, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.X11GraphicsConfig java.awt.image.VolatileImage createBackBufferImage(java.awt.Component, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.X11GraphicsConfig long createBackBuffer(sun.awt.X11ComponentPeer, int, java.awt.BufferCapabilities) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.X11GraphicsConfig long createBackBuffer(sun.awt.X11ComponentPeer, int, java.awt.BufferCapabilities) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.X11GraphicsConfig long createBackBuffer(sun.awt.X11ComponentPeer, int, java.awt.BufferCapabilities) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.X11GraphicsConfig sun.java2d.SurfaceData createSurfaceData(sun.awt.X11ComponentPeer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.X11GraphicsConfig sun.java2d.SurfaceData createSurfaceData(sun.awt.X11ComponentPeer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.X11GraphicsConfig void flip(sun.awt.X11ComponentPeer, java.awt.Component, java.awt.image.VolatileImage, int, int, int, int, java.awt.BufferCapabilities.FlipContents) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.X11GraphicsDevice java.awt.DisplayMode access$100(sun.awt.X11GraphicsDevice) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.X11GraphicsDevice void access$000(java.awt.Window) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.X11GraphicsDevice void enterFullScreenExclusive(java.awt.Window) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.X11GraphicsDevice void exitFullScreenExclusive(java.awt.Window) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.X11InputMethod boolean setLocale(java.util.Locale) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.X11InputMethod boolean setLocale(java.util.Locale) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="abstract virtual sun.awt.X11InputMethod java.awt.Container getParent(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.X11InputMethod java.util.Map mapInputMethodHighlight(java.awt.im.InputMethodHighlight) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.X11InputMethod.IntBuffer void insert(int, int[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.X11InputMethod.IntBuffer void replace(int, int[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.XSettings java.util.Map update(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.XSettings java.util.Map update(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.XSettings long access$000(sun.awt.XSettings) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.XSettings long access$002(sun.awt.XSettings, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.XSettings.Update Update(sun.awt.XSettings, byte[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
