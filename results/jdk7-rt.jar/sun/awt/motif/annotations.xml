<root>
  <item name="virtual sun.awt.motif.MFontConfiguration java.lang.String getFallbackFamilyName(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.motif.MFontConfiguration java.lang.String getFallbackFamilyName(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.motif.MFontConfiguration java.lang.String getMotifFontSet(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.motif.MFontConfiguration java.lang.String getMotifFontSet(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.motif.MToolkit java.awt.Container getNativeContainer(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.motif.MToolkit java.awt.FontMetrics getFontMetrics(java.awt.Font) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.motif.MToolkit java.awt.FontMetrics getFontMetrics(java.awt.Font) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.motif.MToolkit java.lang.Object lazilyLoadDesktopProperty(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.motif.MToolkit java.lang.Object lazilyLoadDesktopProperty(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.motif.MToolkit void access$000(sun.awt.motif.MToolkit) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.motif.MToolkit void grab(java.awt.Window) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.motif.MToolkit void grab(java.awt.Window) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.motif.MToolkit void parseXSettings(int, byte[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.motif.MToolkit void ungrab(java.awt.Window) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.motif.MToolkit void ungrab(java.awt.Window) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.motif.X11CNS11643 X11CNS11643(int, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.motif.X11CNS11643.Decoder java.nio.charset.CoderResult decodeLoop(java.nio.ByteBuffer, java.nio.CharBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.motif.X11CNS11643.Decoder java.nio.charset.CoderResult decodeLoop(java.nio.ByteBuffer, java.nio.CharBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.motif.X11CNS11643.Decoder java.nio.charset.CoderResult decodeLoop(java.nio.ByteBuffer, java.nio.CharBuffer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.motif.X11CNS11643.Decoder java.nio.charset.CoderResult decodeLoop(java.nio.ByteBuffer, java.nio.CharBuffer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.motif.X11CNS11643.Encoder java.nio.charset.CoderResult encodeLoop(java.nio.CharBuffer, java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.motif.X11CNS11643.Encoder java.nio.charset.CoderResult encodeLoop(java.nio.CharBuffer, java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.motif.X11CNS11643.Encoder java.nio.charset.CoderResult encodeLoop(java.nio.CharBuffer, java.nio.ByteBuffer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.motif.X11CNS11643.Encoder java.nio.charset.CoderResult encodeLoop(java.nio.CharBuffer, java.nio.ByteBuffer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.motif.X11Dingbats.Encoder java.nio.charset.CoderResult encodeLoop(java.nio.CharBuffer, java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.motif.X11Dingbats.Encoder java.nio.charset.CoderResult encodeLoop(java.nio.CharBuffer, java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.motif.X11Dingbats.Encoder java.nio.charset.CoderResult encodeLoop(java.nio.CharBuffer, java.nio.ByteBuffer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.motif.X11Dingbats.Encoder java.nio.charset.CoderResult encodeLoop(java.nio.CharBuffer, java.nio.ByteBuffer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.motif.X11FontMetrics int stringWidth(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="virtual sun.awt.motif.X11FontMetrics int stringWidth(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.motif.X11FontMetrics java.awt.FontMetrics getFontMetrics(java.awt.Font) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
