<root>
  <item name="sun.management.Agent void error(java.lang.Exception) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.Agent void startAgent(java.util.Properties) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.Agent void startDiscoveryService(java.util.Properties) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.AgentConfigurationError AgentConfigurationError(java.lang.String, java.lang.String...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.AgentConfigurationError AgentConfigurationError(java.lang.String, java.lang.Throwable, java.lang.String...) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ConnectorAddressLink void export(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ConnectorAddressLink void exportRemote(java.util.Map&lt;java.lang.String,java.lang.String&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.FileSystemImpl boolean isAccessUserOnly(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.GarbageCollectionNotifInfoCompositeData com.sun.management.GarbageCollectionNotificationInfo access$000(sun.management.GarbageCollectionNotifInfoCompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.GarbageCollectionNotifInfoCompositeData com.sun.management.GcInfo getGcInfo(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.GarbageCollectionNotifInfoCompositeData java.lang.String getGcAction(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.GarbageCollectionNotifInfoCompositeData java.lang.String getGcCause(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.GarbageCollectionNotifInfoCompositeData java.lang.String getGcName(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.GarbageCollectionNotifInfoCompositeData void validateCompositeData(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.GarbageCollectorImpl void addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.GcInfoCompositeData java.util.Map&lt;java.lang.String,java.lang.management.MemoryUsage&gt; getMemoryUsageAfterGc(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.GcInfoCompositeData java.util.Map&lt;java.lang.String,java.lang.management.MemoryUsage&gt; getMemoryUsageBeforeGc(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.GcInfoCompositeData long getEndTime(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.GcInfoCompositeData long getId(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.GcInfoCompositeData long getStartTime(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.GcInfoCompositeData void validateCompositeData(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.HotSpotDiagnostic com.sun.management.VMOption getVMOption(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.HotSpotDiagnostic void setVMOption(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.HotSpotDiagnostic void setVMOption(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.HotspotCompilation sun.management.counter.Counter access$000(sun.management.HotspotCompilation, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.HotspotCompilation.CompilerThreadInfo CompilerThreadInfo(sun.management.HotspotCompilation, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.HotspotCompilation.CompilerThreadInfo CompilerThreadInfo(sun.management.HotspotCompilation, java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.LazyCompositeData boolean getBoolean(javax.management.openmbean.CompositeData, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.LazyCompositeData int getInt(javax.management.openmbean.CompositeData, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.LazyCompositeData java.lang.String getString(javax.management.openmbean.CompositeData, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.LazyCompositeData long getLong(javax.management.openmbean.CompositeData, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.LockDataConverter LockDataConverter(java.lang.management.ThreadInfo) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.LockDataConverter sun.management.LockDataConverter newLockDataConverter(java.lang.management.ThreadInfo) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ManagementFactoryHelper void addMBean(javax.management.MBeanServer, java.lang.Object, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ManagementFactoryHelper void unregisterMBean(javax.management.MBeanServer, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MappedMXBeanType.ArrayMXBeanType ArrayMXBeanType(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MappedMXBeanType.CompositeDataMXBeanType java.lang.Object toOpenTypeData(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MappedMXBeanType.EnumMXBeanType java.lang.Object toOpenTypeData(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MappedMXBeanType.GenericArrayMXBeanType GenericArrayMXBeanType(java.lang.reflect.GenericArrayType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MappedMXBeanType.ListMXBeanType ListMXBeanType(java.lang.reflect.ParameterizedType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MappedMXBeanType.ListMXBeanType java.lang.Object toJavaTypeData(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MappedMXBeanType.ListMXBeanType java.lang.Object toOpenTypeData(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MappedMXBeanType.MapMXBeanType MapMXBeanType(java.lang.reflect.ParameterizedType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MappedMXBeanType.MapMXBeanType java.lang.Object toJavaTypeData(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MappedMXBeanType.MapMXBeanType java.lang.Object toOpenTypeData(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MemoryNotifInfoCompositeData java.lang.String getPoolName(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MemoryNotifInfoCompositeData java.lang.management.MemoryUsage getUsage(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MemoryNotifInfoCompositeData long getCount(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MemoryNotifInfoCompositeData void validateCompositeData(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MemoryPoolImpl sun.management.Sensor access$000(sun.management.MemoryPoolImpl) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MemoryUsageCompositeData long getCommitted(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MemoryUsageCompositeData long getInit(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MemoryUsageCompositeData long getMax(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MemoryUsageCompositeData long getUsed(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MemoryUsageCompositeData void validateCompositeData(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MonitorInfoCompositeData int getIdentityHashCode(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MonitorInfoCompositeData int getLockedStackDepth(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MonitorInfoCompositeData java.lang.StackTraceElement getLockedStackFrame(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MonitorInfoCompositeData java.lang.String getClassName(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MonitorInfoCompositeData void validateCompositeData(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.NotificationEmitterSupport void addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.StackTraceElementCompositeData java.lang.StackTraceElement from(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.StackTraceElementCompositeData void validateCompositeData(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ThreadImpl boolean verifyThreadAllocatedMemory(long[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ThreadImpl boolean verifyThreadCpuTime(long[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ThreadImpl java.lang.management.ThreadInfo[] getThreadInfo(long[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ThreadImpl java.lang.management.ThreadInfo[] getThreadInfo(long[], boolean, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ThreadImpl java.lang.management.ThreadInfo[] getThreadInfo(long[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ThreadImpl long[] getThreadAllocatedBytes(long[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ThreadImpl long[] getThreadCpuTime(long[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ThreadImpl long[] getThreadUserTime(long[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ThreadImpl void verifyThreadIds(long[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ThreadInfoCompositeData ThreadInfoCompositeData(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ThreadInfoCompositeData boolean isCurrentVersion(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ThreadInfoCompositeData sun.management.ThreadInfoCompositeData getInstance(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ThreadInfoCompositeData void validateCompositeData(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.Util java.lang.String[] toStringArray(java.util.List&lt;java.lang.String&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.Util javax.management.ObjectName newObjectName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.VMOptionCompositeData boolean isWriteable(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.VMOptionCompositeData com.sun.management.VMOption.Origin getOrigin(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.VMOptionCompositeData java.lang.String getName(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.VMOptionCompositeData java.lang.String getValue(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.VMOptionCompositeData void validateCompositeData(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
