<root>
  <item name="sun.lwawt.LWButtonPeer javax.swing.JButton createDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWButtonPeer javax.swing.JComponent createDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWButtonPeer void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWCanvasPeer java.awt.GraphicsConfiguration getAppropriateGraphicsConfiguration(java.awt.GraphicsConfiguration)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWCheckboxPeer javax.swing.JComponent createDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWCheckboxPeer sun.lwawt.LWCheckboxPeer.CheckboxDelegate createDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWChoicePeer javax.swing.JComboBox createDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWChoicePeer javax.swing.JComponent createDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWChoicePeer void itemStateChanged(java.awt.event.ItemEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWChoicePeer.JComboBoxDelegate javax.swing.JPopupMenu access$000(sun.lwawt.LWChoicePeer.JComboBoxDelegate) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer boolean updateGraphicsData(java.awt.GraphicsConfiguration)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;false;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWComponentPeer java.awt.AWTEvent createDelegateEvent(java.awt.AWTEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWComponentPeer java.awt.Image createImage(java.awt.image.ImageProducer)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer java.awt.Point getLocationOnScreen()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer java.awt.Point localToWindow(java.awt.Point) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer java.awt.Point localToWindow(java.awt.Point)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer java.awt.Point windowToLocal(java.awt.Point, sun.lwawt.LWWindowPeer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer java.awt.Point windowToLocal(java.awt.Point, sun.lwawt.LWWindowPeer)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;_,null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer java.awt.Rectangle getSize()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer java.awt.Rectangle localToWindow(java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer java.awt.Rectangle localToWindow(java.awt.Rectangle)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer java.awt.Rectangle windowToLocal(java.awt.Rectangle, sun.lwawt.LWWindowPeer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer java.awt.Rectangle windowToLocal(java.awt.Rectangle, sun.lwawt.LWWindowPeer)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null;_,null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer java.awt.image.VolatileImage createVolatileImage(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer sun.java2d.pipe.Region computeVisibleRect(sun.lwawt.LWComponentPeer, sun.java2d.pipe.Region) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer void applyConstrain(java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer void coalescePaintEvent(java.awt.event.PaintEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer void handleEvent(java.awt.AWTEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer void handleJavaFocusEvent(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer void postEvent(java.awt.AWTEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer void resetColorsAndFont(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer void setBounds(java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWContainerPeer java.awt.Insets getInsets()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWLabelPeer java.awt.Dimension getMinimumSize()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWLabelPeer javax.swing.JComponent createDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWLabelPeer javax.swing.JLabel createDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWListPeer java.awt.Dimension getMinimumSize(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWListPeer java.awt.Dimension getPreferredSize(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWListPeer javax.swing.JComponent createDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWListPeer sun.lwawt.LWListPeer.ScrollableJList createDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWListPeer void access$000(sun.lwawt.LWListPeer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWListPeer.ScrollableJList ScrollableJList(sun.lwawt.LWListPeer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWListPeer.ScrollableJList javax.swing.DefaultListModel access$100(sun.lwawt.LWListPeer.ScrollableJList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWListPeer.ScrollableJList void valueChanged(javax.swing.event.ListSelectionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWListPeer.ScrollableJList.JListDelegate JListDelegate(sun.lwawt.LWListPeer.ScrollableJList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWListPeer.ScrollableJList.JListDelegate void processKeyEvent(java.awt.event.KeyEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWListPeer.ScrollableJList.JListDelegate void processMouseEvent(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWMouseInfoPeer boolean isWindowUnderMouse(java.awt.Window)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWMouseInfoPeer int fillPointWithCoords(java.awt.Point) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWPanelPeer javax.swing.JComponent createDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWPanelPeer javax.swing.JPanel createDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWScrollBarPeer javax.swing.JComponent createDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWScrollBarPeer javax.swing.JScrollBar createDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWScrollBarPeer void adjustmentValueChanged(java.awt.event.AdjustmentEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWScrollPanePeer java.awt.Rectangle getContentSize()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWScrollPanePeer javax.swing.JComponent createDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWScrollPanePeer javax.swing.JScrollPane createDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWTextAreaPeer java.awt.Dimension getMinimumSize()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWTextAreaPeer java.awt.Dimension getMinimumSize(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWTextAreaPeer java.awt.Dimension getPreferredSize(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWTextAreaPeer javax.swing.JComponent createDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWTextAreaPeer sun.lwawt.LWTextAreaPeer.ScrollableJTextArea createDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWTextComponentPeer java.awt.Dimension getPreferredSize(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWTextFieldPeer javax.swing.JComponent createDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWTextFieldPeer javax.swing.JPasswordField createDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWTextFieldPeer void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWTextFieldPeer void handleJavaFocusEvent(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.ButtonPeer createButton(java.awt.Button)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.CanvasPeer createCanvas(java.awt.Canvas)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.CheckboxPeer createCheckbox(java.awt.Checkbox)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.ChoicePeer createChoice(java.awt.Choice)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.DesktopPeer createDesktopPeer(java.awt.Desktop)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.DialogPeer createDialog(java.awt.Dialog) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.DialogPeer createDialog(java.awt.Dialog)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.FramePeer createFrame(java.awt.Frame) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.FramePeer createFrame(java.awt.Frame)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.LabelPeer createLabel(java.awt.Label)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.ListPeer createList(java.awt.List)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.MouseInfoPeer createMouseInfoPeerImpl()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.PanelPeer createPanel(java.awt.Panel)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.ScrollPanePeer createScrollPane(java.awt.ScrollPane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.ScrollbarPeer createScrollbar(java.awt.Scrollbar)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.TextAreaPeer createTextArea(java.awt.TextArea)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.TextFieldPeer createTextField(java.awt.TextField)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.WindowPeer createWindow(java.awt.Window) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.WindowPeer createWindow(java.awt.Window)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit sun.lwawt.LWWindowPeer createDelegatedPeer(java.awt.Window, sun.lwawt.PlatformComponent, sun.lwawt.PlatformWindow, sun.lwawt.LWWindowPeer.PeerType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit sun.lwawt.LWWindowPeer createDelegatedPeer(java.awt.Window, sun.lwawt.PlatformComponent, sun.lwawt.PlatformWindow, sun.lwawt.LWWindowPeer.PeerType) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit sun.lwawt.LWWindowPeer createDelegatedPeer(java.awt.Window, sun.lwawt.PlatformComponent, sun.lwawt.PlatformWindow, sun.lwawt.LWWindowPeer.PeerType)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_,_-&gt;!null;_,!null,_,_-&gt;!null;_,_,!null,_-&gt;!null;_,_,_,!null-&gt;!null;_,_,_,null-&gt;!null;_,_,null,_-&gt;!null;_,null,_,_-&gt;!null;null,_,_,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit sun.lwawt.LWWindowPeer createEmbeddedFrame(sun.lwawt.macosx.CEmbeddedFrame) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit sun.lwawt.LWWindowPeer createEmbeddedFrame(sun.lwawt.macosx.CEmbeddedFrame)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit sun.lwawt.LWWindowPeer createEmbeddedFrame(sun.lwawt.macosx.CViewEmbeddedFrame) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit sun.lwawt.LWWindowPeer createEmbeddedFrame(sun.lwawt.macosx.CViewEmbeddedFrame)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit sun.lwawt.macosx.CPrinterDialogPeer createCPrinterDialog(sun.lwawt.macosx.CPrinterDialog) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit sun.lwawt.macosx.CPrinterDialogPeer createCPrinterDialog(sun.lwawt.macosx.CPrinterDialog)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit void access$000(sun.lwawt.LWToolkit, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit void grab(java.awt.Window) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit void postEvent(java.awt.AWTEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit void ungrab(java.awt.Window) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWWindowPeer LWWindowPeer(java.awt.Window, sun.lwawt.PlatformComponent, sun.lwawt.PlatformWindow, sun.lwawt.LWWindowPeer.PeerType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWWindowPeer LWWindowPeer(java.awt.Window, sun.lwawt.PlatformComponent, sun.lwawt.PlatformWindow, sun.lwawt.LWWindowPeer.PeerType) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWWindowPeer boolean updateGraphicsData(java.awt.GraphicsConfiguration)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;false;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWWindowPeer int getGraphicsConfigScreen(java.awt.GraphicsConfiguration) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWWindowPeer java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWWindowPeer sun.lwawt.LWWindowPeer getWindowPeerOrSelf()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWWindowPeer void blockWindows(java.util.List) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWWindowPeer void postMouseEnteredExitedEvent(java.awt.Component, int, long, int, java.awt.Point, int, int, int, boolean, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWWindowPeer void postMouseEnteredExitedEvent(java.awt.Component, int, long, int, java.awt.Point, int, int, int, boolean, int) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
