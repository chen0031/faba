<root>
  <item name="java.lang.Character java.lang.String getName(int)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.CharacterData char[] toUpperCaseCharArray(int)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.CharacterName java.lang.String get(int)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.CharacterName.1 java.io.InputStream run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.CharacterName.1 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class T newInstance()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class T[] getEnumConstants()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class T[] getEnumConstantsShared()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class java.io.InputStream getResourceAsStream(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class java.lang.Class.EnclosingMethodInfo getEnclosingMethodInfo()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class java.lang.ClassLoader getClassLoader()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class java.lang.Package getPackage()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class java.lang.String getCanonicalName()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class java.lang.String getSimpleBinaryName()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class java.lang.reflect.Constructor&lt;?&gt; getEnclosingConstructor()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class java.lang.reflect.Constructor&lt;T&gt;[] privateGetDeclaredConstructors(boolean)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class java.lang.reflect.Field getDeclaredField(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class java.lang.reflect.Field getField(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class java.lang.reflect.Field getField0(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class java.lang.reflect.Field searchFields(java.lang.reflect.Field[], java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class java.lang.reflect.Field[] privateGetDeclaredFields(boolean)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class java.lang.reflect.Field[] privateGetPublicFields(java.util.Set&lt;java.lang.Class&lt;?&gt;&gt;)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class java.lang.reflect.Method getDeclaredMethod(java.lang.String, java.lang.Class&lt;?&gt;...)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class java.lang.reflect.Method getEnclosingMethod()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class java.lang.reflect.Method getMethod(java.lang.String, java.lang.Class&lt;?&gt;...)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class java.lang.reflect.Method getMethod0(java.lang.String, java.lang.Class&lt;?&gt;[])">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class java.lang.reflect.Method searchMethods(java.lang.reflect.Method[], java.lang.String, java.lang.Class&lt;?&gt;[])">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class java.lang.reflect.Method[] privateGetDeclaredMethods(boolean)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class java.lang.reflect.Method[] privateGetPublicMethods()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class java.lang.reflect.Type getGenericSuperclass()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class java.net.URL getResource(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class.1 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class.1 java.lang.Void run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class.3 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class.3 java.lang.Void run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class.4 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class.4 java.lang.Void run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassLoader java.io.InputStream getResourceAsStream(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassLoader java.io.InputStream getSystemResourceAsStream(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassLoader java.lang.Class defineTransformedClass(java.lang.String, byte[], int, int, java.security.ProtectionDomain, java.lang.ClassFormatError, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassLoader java.lang.Class findBootstrapClassOrNull(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassLoader java.lang.Class loadClassInternal(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassLoader java.lang.Class&lt;?&gt; defineClass(byte[], int, int)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassLoader java.lang.Class&lt;?&gt; defineClass(java.lang.String, byte[], int, int)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassLoader java.lang.Class&lt;?&gt; defineClass(java.lang.String, byte[], int, int, java.security.ProtectionDomain)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassLoader java.lang.Class&lt;?&gt; defineClass(java.lang.String, java.nio.ByteBuffer, java.security.ProtectionDomain)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassLoader java.lang.Class&lt;?&gt; findLoadedClass(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassLoader java.lang.Class&lt;?&gt; loadClass(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassLoader java.lang.Class&lt;?&gt; loadClass(java.lang.String, boolean)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassLoader java.lang.ClassLoader getClassLoader(java.lang.Class&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassLoader java.lang.ClassLoader getParent()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassLoader java.lang.ClassLoader getSystemClassLoader()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassLoader java.lang.String defineClassSourceLocation(java.security.ProtectionDomain)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassLoader java.lang.String findLibrary(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassLoader java.lang.Void checkCreateClassLoader()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassLoader java.net.URL findResource(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassLoader java.net.URL getBootstrapResource(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassLoader java.net.URL getResource(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassLoader java.net.URL getSystemResource(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassLoader.1 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassLoader.1 java.lang.Void run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassLoader.3 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassLoaderHelper java.io.File mapAlternativeName(java.io.File)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassValue.ClassValueMap java.lang.ClassValue.Entry&lt;?&gt; findReplacement(java.lang.ClassValue.Entry&lt;?&gt;[], int)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassValue.ClassValueMap java.lang.ClassValue.Entry&lt;?&gt; placeInCache(java.lang.ClassValue.Entry&lt;?&gt;[], int, java.lang.ClassValue.Entry&lt;?&gt;, boolean)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassValue.ClassValueMap java.lang.ClassValue.Entry&lt;T&gt; finishEntry(java.lang.ClassValue&lt;T&gt;, java.lang.ClassValue.Entry&lt;T&gt;)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassValue.ClassValueMap java.lang.ClassValue.Entry&lt;T&gt; overwrittenEntry(java.lang.ClassValue.Entry&lt;T&gt;)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassValue.ClassValueMap java.lang.ClassValue.Entry&lt;T&gt; probeBackupLocations(java.lang.ClassValue.Entry&lt;?&gt;[], java.lang.ClassValue&lt;T&gt;)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassValue.Entry java.lang.ClassValue&lt;T&gt; classValueOrNull()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Compiler.1 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Compiler.1 java.lang.Void run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ConditionalSpecialCasing char[] lookUpTable(java.lang.String, int, java.util.Locale, boolean)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ConditionalSpecialCasing char[] toLowerCaseCharArray(java.lang.String, int, java.util.Locale)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ConditionalSpecialCasing char[] toUpperCaseCharArray(java.lang.String, int, java.util.Locale)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Package java.lang.Package getPackage(java.lang.Class&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Package java.util.jar.Manifest access$100(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Package java.util.jar.Manifest loadManifest(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ProcessBuilder.Redirect java.io.File file()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ProcessEnvironment byte[] toEnvironmentBlock(java.util.Map&lt;java.lang.String,java.lang.String&gt;, int[])">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringEnvironment java.lang.Object get(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringEnvironment java.lang.Object put(java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringEnvironment java.lang.Object remove(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringEnvironment java.lang.String get(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringEnvironment java.lang.String put(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringEnvironment java.lang.String remove(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringEnvironment java.lang.String toString(java.lang.ProcessEnvironment.Value)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ProcessImpl byte[] toCString(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.SecurityManager java.lang.Class&lt;?&gt; currentLoadedClass()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.SecurityManager java.lang.ClassLoader currentClassLoader()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.SecurityManager java.lang.String[] getPackages(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.String byte[] getBytes()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StringCoding T deref(java.lang.ThreadLocal&lt;java.lang.ref.SoftReference&lt;T&gt;&gt;)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StringCoding byte[] encode(char[], int, int)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StringCoding char[] decode(byte[], int, int)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StringCoding java.nio.charset.Charset lookupCharset(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.System.1 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Thread java.lang.ClassLoader getContextClassLoader()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ThreadGroup java.lang.Void checkParentAccess(java.lang.ThreadGroup)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ThreadLocal T get()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ThreadLocal T initialValue()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ThreadLocal T setInitialValue()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ThreadLocal.ThreadLocalMap java.lang.ThreadLocal.ThreadLocalMap.Entry access$000(java.lang.ThreadLocal.ThreadLocalMap, java.lang.ThreadLocal)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ThreadLocal.ThreadLocalMap java.lang.ThreadLocal.ThreadLocalMap.Entry getEntry(java.lang.ThreadLocal)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ThreadLocal.ThreadLocalMap java.lang.ThreadLocal.ThreadLocalMap.Entry getEntryAfterMiss(java.lang.ThreadLocal, int, java.lang.ThreadLocal.ThreadLocalMap.Entry)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Throwable java.lang.Throwable getCause()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.UNIXProcess.2 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.UNIXProcess.2 java.lang.Void run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.UNIXProcess.ProcessPipeInputStream byte[] drainInputStream(java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
</root>
