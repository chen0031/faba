<root>
  <item name="sun.invoke.util.BytecodeDescriptor java.lang.Class&lt;?&gt; parseSig(java.lang.String, int[], int, java.lang.ClassLoader)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.invoke.util.BytecodeName java.lang.Object[] parseBytecodeName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.Number primitiveConversion(sun.invoke.util.Wrapper, java.lang.Object, boolean)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.Object zeroObject()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.invoke.MethodHandle box(java.lang.Class&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.invoke.MethodHandle box(sun.invoke.util.Wrapper)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.invoke.MethodHandle box(sun.invoke.util.Wrapper, boolean)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.invoke.MethodHandle convertPrimitive(java.lang.Class&lt;?&gt;, java.lang.Class&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.invoke.MethodHandle convertPrimitive(sun.invoke.util.Wrapper, sun.invoke.util.Wrapper)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.invoke.MethodHandle findCollector(java.lang.String, int, java.lang.Class&lt;?&gt;, java.lang.Class&lt;?&gt;...)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.invoke.MethodHandle identity(java.lang.Class&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.invoke.MethodHandle identity(sun.invoke.util.Wrapper)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.invoke.MethodHandle varargsArray(int)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.invoke.MethodHandle varargsArray(java.lang.Class&lt;?&gt;, int)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.invoke.MethodHandle varargsList(int)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.invoke.MethodHandle zeroConstantFunction(sun.invoke.util.Wrapper)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.invoke.util.ValueConversions.1 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.invoke.util.ValueConversions.1 java.lang.Void run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.invoke.util.ValueConversions.2 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.invoke.util.ValueConversions.2 java.lang.Void run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.invoke.util.Wrapper java.lang.Object wrap(int)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.invoke.util.Wrapper java.lang.Object wrap(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.invoke.util.Wrapper sun.invoke.util.Wrapper findPrimitiveType(java.lang.Class&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.invoke.util.Wrapper sun.invoke.util.Wrapper findWrapperType(java.lang.Class&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.invoke.util.Wrapper sun.invoke.util.Wrapper forBasicType(java.lang.Class&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.invoke.util.Wrapper sun.invoke.util.Wrapper forPrimitiveType(java.lang.Class&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.invoke.util.Wrapper sun.invoke.util.Wrapper forWrapperType(java.lang.Class&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
</root>
