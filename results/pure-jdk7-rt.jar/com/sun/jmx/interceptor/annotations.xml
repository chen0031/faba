<root>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.ResourceContext createClassLoaderContext(java.lang.ClassLoader, javax.management.ObjectName)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.ResourceContext makeResourceContextFor(java.lang.Object, javax.management.ObjectName)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor java.io.ObjectInputStream deserialize(java.lang.String, byte[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor java.io.ObjectInputStream deserialize(java.lang.String, javax.management.ObjectName, byte[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor java.io.ObjectInputStream deserialize(javax.management.ObjectName, byte[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor java.lang.Object instantiate(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor java.lang.Object instantiate(java.lang.String, java.lang.Object[], java.lang.String[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor java.lang.Object instantiate(java.lang.String, javax.management.ObjectName)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor java.lang.Object instantiate(java.lang.String, javax.management.ObjectName, java.lang.Object[], java.lang.String[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor java.lang.String getDefaultDomain()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor javax.management.loading.ClassLoaderRepository getClassLoaderRepository()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.ListenerWrapper ListenerWrapper(javax.management.NotificationListener, javax.management.ObjectName, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
</root>
