<root>
  <item name="com.sun.imageio.plugins.gif.GIFImageMetadata boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.gif.GIFImageMetadata void mergeNativeTree(org.w3c.dom.Node)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.gif.GIFImageMetadata void mergeStandardTree(org.w3c.dom.Node)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.gif.GIFImageMetadata void reset()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.gif.GIFImageMetadata void setFromTree(java.lang.String, org.w3c.dom.Node)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.gif.GIFImageMetadataFormat boolean canNodeAppear(java.lang.String, javax.imageio.ImageTypeSpecifier)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.gif.GIFImageMetadataFormatResources GIFImageMetadataFormatResources()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.imageio.plugins.gif.GIFImageMetadataFormatResources java.lang.Object[][] getContents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.gif.GIFImageReader GIFImageReader(javax.imageio.spi.ImageReaderSpi)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.imageio.plugins.gif.GIFImageReader javax.imageio.ImageReadParam getDefaultReadParam()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.gif.GIFImageReader void checkIndex(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.imageio.plugins.gif.GIFImageReader void computeDecodeThisRow()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.imageio.plugins.gif.GIFImageReader void initNext32Bits()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.imageio.plugins.gif.GIFImageReader void resetStreamSettings()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.imageio.plugins.gif.GIFImageReaderSpi java.lang.String getDescription(java.util.Locale)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.gif.GIFImageReaderSpi javax.imageio.ImageReader createReaderInstance(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.gif.GIFImageWriteParam GIFImageWriteParam(java.util.Locale)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.imageio.plugins.gif.GIFImageWriter GIFImageWriter(com.sun.imageio.plugins.gif.GIFImageWriterSpi)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.imageio.plugins.gif.GIFImageWriter boolean canWriteSequence()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.gif.GIFImageWriter int getGifPaletteSize(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.gif.GIFImageWriter void resetLocal()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.imageio.plugins.gif.GIFImageWriterSpi java.lang.String getDescription(java.util.Locale)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.gif.GIFImageWriterSpi javax.imageio.ImageWriter createWriterInstance(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.gif.GIFMetadata void fatal(org.w3c.dom.Node, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.gif.GIFStreamMetadata boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.gif.GIFStreamMetadata javax.imageio.metadata.IIOMetadataNode getStandardTextNode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.gif.GIFStreamMetadata javax.imageio.metadata.IIOMetadataNode getStandardTransparencyNode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.gif.GIFStreamMetadata void mergeNativeTree(org.w3c.dom.Node)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.gif.GIFStreamMetadata void mergeStandardTree(org.w3c.dom.Node)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.gif.GIFStreamMetadata void reset()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.gif.GIFStreamMetadata void setFromTree(java.lang.String, org.w3c.dom.Node)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.gif.GIFStreamMetadataFormat boolean canNodeAppear(java.lang.String, javax.imageio.ImageTypeSpecifier)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.gif.GIFStreamMetadataFormatResources GIFStreamMetadataFormatResources()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.imageio.plugins.gif.GIFStreamMetadataFormatResources java.lang.Object[][] getContents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.gif.GIFWritableImageMetadata boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.gif.GIFWritableImageMetadata void reset()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.imageio.plugins.gif.GIFWritableStreamMetadata boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.gif.GIFWritableStreamMetadata void reset()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
</root>
