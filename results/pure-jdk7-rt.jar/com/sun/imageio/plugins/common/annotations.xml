<root>
  <item name="com.sun.imageio.plugins.common.BitFile BitFile(javax.imageio.stream.ImageOutputStream, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.imageio.plugins.common.BogusColorSpace BogusColorSpace(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.imageio.plugins.common.BogusColorSpace int getType(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.common.I18N I18N()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.common.I18NImpl I18NImpl()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.common.ImageUtil ImageUtil()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.common.ImageUtil boolean isIndicesForGrayscale(byte[], byte[], byte[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.common.InputStreamAdapter InputStreamAdapter(javax.imageio.stream.ImageInputStream)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.imageio.plugins.common.LZWStringTable LZWStringTable()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.imageio.plugins.common.LZWStringTable int hash(short, byte)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.common.LZWStringTable short findCharString(short, byte)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.common.PaletteBuilder boolean canCreatePalette(javax.imageio.ImageTypeSpecifier)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.common.PaletteBuilder.ColorNode int getRGB()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.common.ReaderUtil ReaderUtil()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.common.StandardMetadataFormat boolean canNodeAppear(java.lang.String, javax.imageio.ImageTypeSpecifier)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.common.StandardMetadataFormatResources StandardMetadataFormatResources()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.imageio.plugins.common.StandardMetadataFormatResources java.lang.Object[][] getContents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.common.SubImageInputStream long length()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.common.SubImageInputStream void finalize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
</root>
