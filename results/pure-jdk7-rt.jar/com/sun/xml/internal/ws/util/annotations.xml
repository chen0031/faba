<root>
  <item name="com.sun.xml.internal.ws.util.ASCIIUtility ASCIIUtility()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.ASCIIUtility byte[] getBytes(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.ASCIIUtility java.lang.String toString(byte[], int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.ByteArrayBuffer ByteArrayBuffer()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ByteArrayBuffer ByteArrayBuffer(byte[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ByteArrayBuffer ByteArrayBuffer(byte[], int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ByteArrayBuffer ByteArrayBuffer(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ByteArrayBuffer byte[] getRawData()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.ByteArrayBuffer byte[] toByteArray()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.ByteArrayBuffer int size()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.ByteArrayBuffer java.io.InputStream newInputStream()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.ByteArrayBuffer java.io.InputStream newInputStream(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.ByteArrayBuffer void close()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.ByteArrayBuffer void ensureCapacity(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ByteArrayBuffer void reset()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ByteArrayDataSource ByteArrayDataSource(byte[], int, int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ByteArrayDataSource ByteArrayDataSource(byte[], int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ByteArrayDataSource ByteArrayDataSource(byte[], java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ByteArrayDataSource java.io.InputStream getInputStream()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.ByteArrayDataSource java.io.OutputStream getOutputStream()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.ByteArrayDataSource java.lang.String getContentType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.ByteArrayDataSource java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.CompletedFuture CompletedFuture(T, java.lang.Throwable)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.CompletedFuture boolean cancel(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.CompletedFuture boolean isCancelled()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.CompletedFuture boolean isDone()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.Constants Constants()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.DOMUtil DOMUtil()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.DOMUtil java.lang.String fixNull(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.FastInfosetReflection FastInfosetReflection()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.FastInfosetUtil FastInfosetUtil()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.HandlerAnnotationInfo HandlerAnnotationInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.HandlerAnnotationInfo java.util.List&lt;javax.xml.ws.handler.Handler&gt; getHandlers()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.HandlerAnnotationInfo java.util.Set&lt;java.lang.String&gt; getRoles()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.HandlerAnnotationInfo void setHandlers(java.util.List&lt;javax.xml.ws.handler.Handler&gt;)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.HandlerAnnotationInfo void setRoles(java.util.Set&lt;java.lang.String&gt;)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.HandlerAnnotationProcessor HandlerAnnotationProcessor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.JAXWSUtils JAXWSUtils()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.MetadataUtil MetadataUtil()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.NamespaceSupport java.lang.Iterable&lt;java.lang.String&gt; getDeclaredPrefixes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.NamespaceSupport void popContext()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.NamespaceSupport void slideContextUp()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.NamespaceSupport.Context java.lang.Iterable&lt;java.lang.String&gt; getDeclaredPrefixes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.NamespaceSupport.Context void setParent(com.sun.xml.internal.ws.util.NamespaceSupport.Context)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.NoCloseInputStream NoCloseInputStream(java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.NoCloseInputStream void close()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.NoCloseOutputStream NoCloseOutputStream(java.io.OutputStream)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.NoCloseOutputStream void close()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.Pool Pool()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.Pool.Marshaller Marshaller(javax.xml.bind.JAXBContext)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.Pool.Unmarshaller Unmarshaller(javax.xml.bind.JAXBContext)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap QNameMap()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap boolean isEmpty()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap com.sun.xml.internal.ws.util.QNameMap.Entry&lt;V&gt; getOne()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap int indexFor(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap int size()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap java.lang.Iterable&lt;V&gt; values()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap java.util.Iterator&lt;com.sun.xml.internal.ws.util.QNameMap.Entry&lt;V&gt;&gt; newEntryIterator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap java.util.Set&lt;com.sun.xml.internal.ws.util.QNameMap.Entry&lt;V&gt;&gt; entrySet()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap.Entry Entry(int, java.lang.String, java.lang.String, V, com.sun.xml.internal.ws.util.QNameMap.Entry&lt;V&gt;)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap.Entry V getValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap.Entry V setValue(V)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap.Entry javax.xml.namespace.QName createQName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap.EntryIterator EntryIterator(com.sun.xml.internal.ws.util.QNameMap)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap.EntrySet EntrySet(com.sun.xml.internal.ws.util.QNameMap)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap.EntrySet boolean remove(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap.EntrySet int size()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap.EntrySet java.util.Iterator&lt;com.sun.xml.internal.ws.util.QNameMap.Entry&lt;V&gt;&gt; iterator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap.HashIterator HashIterator(com.sun.xml.internal.ws.util.QNameMap)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap.HashIterator boolean hasNext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap.HashIterator com.sun.xml.internal.ws.util.QNameMap.Entry&lt;V&gt; nextEntry()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap.HashIterator void remove()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap.ValueIterator ValueIterator(com.sun.xml.internal.ws.util.QNameMap)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ReadAllStream ReadAllStream()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ReadAllStream.FileStream FileStream()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.ReadAllStream.MemoryStream MemoryStream()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.ReadAllStream.MemoryStream boolean fetch()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ReadAllStream.MemoryStream int read()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ReadAllStream.MemoryStream.Chunk Chunk(byte[], int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ReadAllStream.MemoryStream.Chunk com.sun.xml.internal.ws.util.ReadAllStream.MemoryStream.Chunk createNext(byte[], int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ReadOnlyPropertyException java.lang.String getPropertyName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.RuntimeVersion RuntimeVersion()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.RuntimeVersion java.lang.String getVersion()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.ServiceConfigurationError ServiceConfigurationError(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ServiceFinder ServiceFinder(java.lang.Class&lt;T&gt;, java.lang.ClassLoader)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ServiceFinder com.sun.xml.internal.ws.util.ServiceFinder&lt;T&gt; find(java.lang.Class&lt;T&gt;, java.lang.ClassLoader)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.ServiceFinder java.util.Iterator&lt;T&gt; iterator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.ServiceFinder.LazyIterator LazyIterator(java.lang.Class&lt;T&gt;, java.lang.ClassLoader)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ServiceFinder.LazyIterator void remove()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.StreamUtils StreamUtils()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.StringUtils StringUtils()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.UtilException java.lang.String getDefaultResourceBundleName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.Version Version(java.lang.String, java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.Version java.lang.String fixNull(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.Version java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.VersionUtil VersionUtil()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.VersionUtil boolean isValidVersion(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.VersionUtil boolean isVersion20(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.VersionUtil java.lang.String getValidVersionString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
</root>
