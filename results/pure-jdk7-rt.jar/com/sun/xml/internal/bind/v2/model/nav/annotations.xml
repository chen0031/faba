<root>
  <item name="com.sun.xml.internal.bind.v2.model.nav.GenericArrayTypeImpl GenericArrayTypeImpl(java.lang.reflect.Type)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.nav.GenericArrayTypeImpl java.lang.reflect.Type getGenericComponentType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.nav.ParameterizedTypeImpl java.lang.Class&lt;?&gt; getRawType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.nav.ParameterizedTypeImpl java.lang.reflect.Type getOwnerType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.nav.ReflectionNavigator ReflectionNavigator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.nav.ReflectionNavigator boolean isBridgeMethod(java.lang.reflect.Method)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.nav.ReflectionNavigator boolean isFinalMethod(java.lang.reflect.Method)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.nav.ReflectionNavigator boolean isParameterizedType(java.lang.reflect.Type)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.nav.ReflectionNavigator boolean isPublicField(java.lang.reflect.Field)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.nav.ReflectionNavigator boolean isPublicMethod(java.lang.reflect.Method)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.nav.ReflectionNavigator boolean isStaticField(java.lang.reflect.Field)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.nav.ReflectionNavigator boolean isStaticMethod(java.lang.reflect.Method)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.nav.ReflectionNavigator boolean isTransient(java.lang.reflect.Field)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.nav.ReflectionNavigator com.sun.xml.internal.bind.v2.model.nav.ReflectionNavigator getInstance()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.nav.ReflectionNavigator com.sun.xml.internal.bind.v2.runtime.Location getClassLocation(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.nav.ReflectionNavigator com.sun.xml.internal.bind.v2.runtime.Location getFieldLocation(java.lang.reflect.Field)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.nav.ReflectionNavigator com.sun.xml.internal.bind.v2.runtime.Location getMethodLocation(java.lang.reflect.Method)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.nav.ReflectionNavigator java.lang.Class asDecl(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.nav.ReflectionNavigator java.lang.Class getDeclaringClassForField(java.lang.reflect.Field)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.nav.ReflectionNavigator java.lang.Class getDeclaringClassForMethod(java.lang.reflect.Method)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.nav.ReflectionNavigator java.lang.Class ref(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.nav.ReflectionNavigator java.lang.Class use(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.nav.ReflectionNavigator java.lang.String getFieldName(java.lang.reflect.Field)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.nav.ReflectionNavigator java.lang.String getMethodName(java.lang.reflect.Method)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.nav.ReflectionNavigator java.lang.reflect.Type getVoidType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.nav.ReflectionNavigator.BinderArg BinderArg(java.lang.reflect.TypeVariable[], java.lang.reflect.Type[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.nav.TypeVisitor TypeVisitor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.nav.WildcardTypeImpl WildcardTypeImpl(java.lang.reflect.Type[], java.lang.reflect.Type[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.nav.WildcardTypeImpl java.lang.reflect.Type[] getLowerBounds()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.model.nav.WildcardTypeImpl java.lang.reflect.Type[] getUpperBounds()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
</root>
