<root>
  <item name="com.sun.media.sound.AbstractDataLine boolean isActive()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AbstractDataLine boolean isRunning()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AbstractDataLine boolean isStartedRunning()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AbstractDataLine float getLevel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AbstractDataLine int available()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AbstractDataLine int getBufferSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AbstractDataLine int setBufferSize(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AbstractDataLine javax.sound.sampled.AudioFormat getFormat()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AbstractDataLine void drain()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AbstractDataLine void flush()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AbstractDataLine void setActive(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.AbstractLine boolean isOpen()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AbstractLine com.sun.media.sound.AbstractMixer getMixer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AbstractLine javax.sound.sampled.Control[] getControls()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AbstractLine javax.sound.sampled.Line.Info getLineInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AbstractLine long getLongFramePosition()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice AbstractMidiDevice(javax.sound.midi.MidiDevice.Info)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice boolean hasReceivers()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice boolean hasTransmitters()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice boolean isOpen()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice com.sun.media.sound.AbstractMidiDevice.TransmitterList getTransmitterList()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice java.util.List getOpenKeepingObjects()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice java.util.List&lt;javax.sound.midi.Receiver&gt; getReceiverList()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice javax.sound.midi.MidiDevice.Info getDeviceInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice javax.sound.midi.Receiver createReceiver()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice javax.sound.midi.Transmitter createTransmitter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice long getId()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice long getMicrosecondPosition()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice.AbstractReceiver AbstractReceiver(com.sun.media.sound.AbstractMidiDevice)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice.AbstractReceiver boolean isOpen()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice.AbstractReceiver javax.sound.midi.MidiDevice getMidiDevice()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice.BasicTransmitter BasicTransmitter(com.sun.media.sound.AbstractMidiDevice)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice.BasicTransmitter javax.sound.midi.MidiDevice getMidiDevice()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice.BasicTransmitter javax.sound.midi.Receiver getReceiver()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice.BasicTransmitter void setTransmitterList(com.sun.media.sound.AbstractMidiDevice.TransmitterList)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice.TransmitterList TransmitterList(com.sun.media.sound.AbstractMidiDevice)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice.TransmitterList void receiverChanged(com.sun.media.sound.AbstractMidiDevice.BasicTransmitter, javax.sound.midi.Receiver, javax.sound.midi.Receiver)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDeviceProvider AbstractMidiDeviceProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDeviceProvider.Info Info(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDeviceProvider.Info int getIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDeviceProvider.Info void setIndex(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.AbstractMixer boolean isSynchronizationSupported(javax.sound.sampled.Line[], boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AbstractMixer javax.sound.sampled.Line.Info[] getSourceLineInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AbstractMixer javax.sound.sampled.Line.Info[] getTargetLineInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AbstractMixer javax.sound.sampled.Mixer.Info getMixerInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AbstractMixer void synchronize(javax.sound.sampled.Line[], boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AbstractMixer void unsynchronize(javax.sound.sampled.Line[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AiffFileFormat AiffFileFormat(javax.sound.sampled.AudioFileFormat.Type, int, javax.sound.sampled.AudioFormat, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.AiffFileFormat int getCommChunkSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AiffFileFormat int getFverChunkSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AiffFileFormat int getHeaderSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AiffFileFormat int getSsndChunkOffset()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AiffFileReader AiffFileReader()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AiffFileWriter AiffFileWriter()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.AlawCodec AlawCodec()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.AlawCodec.AlawCodecStream short search(short, short[], short)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AuFileFormat int getAuType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AuFileReader AuFileReader()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AuFileWriter AuFileWriter()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.AudioFileSoundbankReader AudioFileSoundbankReader()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter AudioFloatConverter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter javax.sound.sampled.AudioFormat getFormat()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion16SB AudioFloatConversion16SB()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion16SB byte[] toByteArray(float[], int, int, byte[], int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="3"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion16SB float[] toFloatArray(byte[], int, float[], int, int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="2"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion16SL AudioFloatConversion16SL()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion16SL byte[] toByteArray(float[], int, int, byte[], int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="3"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion16SL float[] toFloatArray(byte[], int, float[], int, int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="2"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion16UB AudioFloatConversion16UB()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion16UB byte[] toByteArray(float[], int, int, byte[], int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="3"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion16UB float[] toFloatArray(byte[], int, float[], int, int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="2"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion16UL AudioFloatConversion16UL()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion16UL byte[] toByteArray(float[], int, int, byte[], int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="3"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion16UL float[] toFloatArray(byte[], int, float[], int, int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="2"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion24SB AudioFloatConversion24SB()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion24SB byte[] toByteArray(float[], int, int, byte[], int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="3"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion24SB float[] toFloatArray(byte[], int, float[], int, int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="2"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion24SL AudioFloatConversion24SL()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion24SL byte[] toByteArray(float[], int, int, byte[], int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="3"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion24SL float[] toFloatArray(byte[], int, float[], int, int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="2"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion24UB AudioFloatConversion24UB()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion24UB byte[] toByteArray(float[], int, int, byte[], int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="3"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion24UB float[] toFloatArray(byte[], int, float[], int, int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="2"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion24UL AudioFloatConversion24UL()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion24UL byte[] toByteArray(float[], int, int, byte[], int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="3"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion24UL float[] toFloatArray(byte[], int, float[], int, int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="2"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32B AudioFloatConversion32B()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32L AudioFloatConversion32L()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32SB AudioFloatConversion32SB()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32SB byte[] toByteArray(float[], int, int, byte[], int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="3"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32SB float[] toFloatArray(byte[], int, float[], int, int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="2"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32SL AudioFloatConversion32SL()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32SL byte[] toByteArray(float[], int, int, byte[], int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="3"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32SL float[] toFloatArray(byte[], int, float[], int, int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="2"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32UB AudioFloatConversion32UB()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32UB byte[] toByteArray(float[], int, int, byte[], int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="3"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32UB float[] toFloatArray(byte[], int, float[], int, int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="2"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32UL AudioFloatConversion32UL()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32UL byte[] toByteArray(float[], int, int, byte[], int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="3"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32UL float[] toFloatArray(byte[], int, float[], int, int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="2"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32xSB AudioFloatConversion32xSB(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32xSB byte[] toByteArray(float[], int, int, byte[], int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="3"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32xSB float[] toFloatArray(byte[], int, float[], int, int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="2"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32xSL AudioFloatConversion32xSL(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32xSL byte[] toByteArray(float[], int, int, byte[], int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="3"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32xSL float[] toFloatArray(byte[], int, float[], int, int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="2"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32xUB AudioFloatConversion32xUB(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32xUB byte[] toByteArray(float[], int, int, byte[], int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="3"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32xUB float[] toFloatArray(byte[], int, float[], int, int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="2"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32xUL AudioFloatConversion32xUL(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32xUL byte[] toByteArray(float[], int, int, byte[], int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="3"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32xUL float[] toFloatArray(byte[], int, float[], int, int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="2"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion64B AudioFloatConversion64B()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion64L AudioFloatConversion64L()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion8S AudioFloatConversion8S()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion8S byte[] toByteArray(float[], int, int, byte[], int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="3"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion8S float[] toFloatArray(byte[], int, float[], int, int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="2"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion8U AudioFloatConversion8U()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion8U byte[] toByteArray(float[], int, int, byte[], int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="3"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion8U float[] toFloatArray(byte[], int, float[], int, int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="2"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatFormatConverter AudioFloatFormatConverter()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatFormatConverter javax.sound.sampled.AudioFormat.Encoding[] getSourceEncodings()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatFormatConverter javax.sound.sampled.AudioFormat.Encoding[] getTargetEncodings()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatFormatConverter.AudioFloatInputStreamChannelMixer javax.sound.sampled.AudioFormat getFormat()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatFormatConverter.AudioFloatInputStreamResampler int available()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatFormatConverter.AudioFloatInputStreamResampler javax.sound.sampled.AudioFormat getFormat()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatFormatConverter.AudioFloatInputStreamResampler long getFrameLength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatInputStream AudioFloatInputStream()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatInputStream.BytaArrayAudioFloatInputStream boolean markSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatInputStream.BytaArrayAudioFloatInputStream int available()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatInputStream.BytaArrayAudioFloatInputStream javax.sound.sampled.AudioFormat getFormat()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatInputStream.BytaArrayAudioFloatInputStream long getFrameLength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatInputStream.BytaArrayAudioFloatInputStream long skip(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatInputStream.BytaArrayAudioFloatInputStream void close()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatInputStream.BytaArrayAudioFloatInputStream void mark(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatInputStream.BytaArrayAudioFloatInputStream void reset()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSInfo DLSInfo()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSInstrument DLSInstrument()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSInstrument DLSInstrument(com.sun.media.sound.DLSSoundbank)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSInstrument byte[] getGuid()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSInstrument com.sun.media.sound.DLSInfo getInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSInstrument com.sun.media.sound.ModelIdentifier convertToModelDest(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSInstrument com.sun.media.sound.ModelIdentifier convertToModelSrc(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSInstrument com.sun.media.sound.ModelPatch getPatch()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSInstrument java.lang.Object getData()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSInstrument java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSInstrument java.util.List&lt;com.sun.media.sound.DLSModulator&gt; getModulators()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSInstrument java.util.List&lt;com.sun.media.sound.DLSRegion&gt; getRegions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSInstrument void setGuid(byte[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSModulator DLSModulator()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSModulator int getControl()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSModulator int getDestination()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSModulator int getDestinationFormat(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSModulator int getScale()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSModulator int getSource()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSModulator int getTransform()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSModulator int getVersion()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSModulator java.lang.String getDestinationName(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSModulator java.lang.String getSourceName(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSModulator void setControl(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSModulator void setDestination(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSModulator void setScale(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSModulator void setSource(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSModulator void setTransform(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSModulator void setVersion(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSRegion DLSRegion()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSRegion com.sun.media.sound.DLSSample getSample()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSRegion com.sun.media.sound.DLSSampleOptions getSampleoptions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSRegion int getExclusiveClass()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSRegion int getFusoptions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSRegion int getKeyfrom()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSRegion int getKeyto()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSRegion int getOptions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSRegion int getPhasegroup()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSRegion int getVelfrom()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSRegion int getVelto()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSRegion java.util.List&lt;com.sun.media.sound.DLSModulator&gt; getModulators()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSRegion long getChannel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSRegion void setChannel(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSRegion void setExclusiveClass(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSRegion void setFusoptions(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSRegion void setKeyfrom(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSRegion void setKeyto(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSRegion void setModulators(java.util.List&lt;com.sun.media.sound.DLSModulator&gt;)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSRegion void setOptions(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSRegion void setPhasegroup(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSRegion void setSample(com.sun.media.sound.DLSSample)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSRegion void setSampleoptions(com.sun.media.sound.DLSSampleOptions)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSRegion void setVelfrom(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSRegion void setVelto(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSSample DLSSample()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSSample DLSSample(javax.sound.midi.Soundbank)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSSample byte[] getGuid()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSSample com.sun.media.sound.DLSInfo getInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSSample com.sun.media.sound.DLSSampleOptions getSampleoptions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSSample com.sun.media.sound.ModelByteBuffer getDataBuffer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSSample java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSSample javax.sound.sampled.AudioFormat getFormat()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSSample void setData(byte[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSSample void setData(byte[], int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSSample void setData(com.sun.media.sound.ModelByteBuffer)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSSample void setFormat(javax.sound.sampled.AudioFormat)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSSample void setGuid(byte[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSSample void setSampleoptions(com.sun.media.sound.DLSSampleOptions)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSSampleLoop DLSSampleLoop()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSSampleLoop long getLength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSSampleLoop long getStart()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSSampleLoop long getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSSampleLoop void setLength(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSSampleLoop void setStart(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSSampleLoop void setType(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSSampleOptions DLSSampleOptions()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSSampleOptions int getAttenuation()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSSampleOptions int getUnitynote()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSSampleOptions java.util.List&lt;com.sun.media.sound.DLSSampleLoop&gt; getLoops()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSSampleOptions long getOptions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSSampleOptions short getFinetune()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSSampleOptions void setAttenuation(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSSampleOptions void setFinetune(short)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSSampleOptions void setOptions(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSSampleOptions void setUnitynote(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank com.sun.media.sound.DLSInfo getInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank java.lang.String getDescription()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank java.lang.String getVendor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank long getMajor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank long getMinor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank void setMajor(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank void setMinor(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank.DLSID DLSID()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank.DLSID DLSID(long, int, int, int, int, int, int, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank.DLSID boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank.DLSID int hashCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DLSSoundbankReader DLSSoundbankReader()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DataPusher DataPusher(javax.sound.sampled.SourceDataLine, javax.sound.sampled.AudioFormat, byte[], int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice void implClose()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice void implOpen()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice void implStart()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice void implStop()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectBAOS byte[] getInternalBuffer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectClip boolean isAutoClosing()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectClip boolean requiresServicing()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectClip int getFrameLength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectDL.Gain float getLinearGain()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectDL.Mute Mute(com.sun.media.sound.DirectAudioDevice.DirectDL)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectDLI DirectDLI(java.lang.Class, javax.sound.sampled.AudioFormat[], javax.sound.sampled.AudioFormat[], int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectDLI javax.sound.sampled.AudioFormat[] getHardwareFormats()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DirectAudioDeviceProvider javax.sound.sampled.Mixer.Info[] getMixerInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DirectAudioDeviceProvider void &lt;clinit&gt;()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DirectAudioDeviceProvider.DirectAudioDeviceInfo int getDeviceID()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DirectAudioDeviceProvider.DirectAudioDeviceInfo int getIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DirectAudioDeviceProvider.DirectAudioDeviceInfo int getMaxSimulLines()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank EmergencySoundbank()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank double[] imgPart(double[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank double[] loopExtend(double[], int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank double[] realPart(double[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank float[] loopExtend(float[], int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank float[] toFloat(double[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank void fadeUp(double[], int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="0"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank void fadeUp(float[], int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="0"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank void normalize(double[], double)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="0"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank void normalize(float[], double)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="0"/>
  </item>
  <item name="com.sun.media.sound.EventDispatcher EventDispatcher()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.EventDispatcher void autoClosingClipClosed(com.sun.media.sound.AutoClosingClip)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.EventDispatcher.ClipInfo boolean isExpired(long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.EventDispatcher.ClipInfo com.sun.media.sound.AutoClosingClip getClip()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.EventDispatcher.EventInfo int getListenerCount()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.EventDispatcher.EventInfo java.lang.Object getEvent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.EventDispatcher.EventInfo java.lang.Object getListener(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.FFT void bitreversal(double[])">
    <annotation name="org.jetbrains.annotations.ParamChange" params="0"/>
  </item>
  <item name="com.sun.media.sound.FFT void calc(int, double[], int, double[])">
    <annotation name="org.jetbrains.annotations.ParamChange" params="1"/>
  </item>
  <item name="com.sun.media.sound.FFT void calcF2E(int, double[], int, int, double[])">
    <annotation name="org.jetbrains.annotations.ParamChange" params="1"/>
  </item>
  <item name="com.sun.media.sound.FFT void calcF4F(int, double[], int, int, double[])">
    <annotation name="org.jetbrains.annotations.ParamChange" params="1"/>
  </item>
  <item name="com.sun.media.sound.FFT void calcF4FE(int, double[], int, int, double[])">
    <annotation name="org.jetbrains.annotations.ParamChange" params="1"/>
  </item>
  <item name="com.sun.media.sound.FFT void calcF4I(int, double[], int, int, double[])">
    <annotation name="org.jetbrains.annotations.ParamChange" params="1"/>
  </item>
  <item name="com.sun.media.sound.FFT void calcF4IE(int, double[], int, int, double[])">
    <annotation name="org.jetbrains.annotations.ParamChange" params="1"/>
  </item>
  <item name="com.sun.media.sound.FFT void transform(double[])">
    <annotation name="org.jetbrains.annotations.ParamChange" params="0"/>
  </item>
  <item name="com.sun.media.sound.FastShortMessage int getChannel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.FastShortMessage int getCommand()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.FastShortMessage int getData1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.FastShortMessage int getData2()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.FastShortMessage int getPackedMsg()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.FastShortMessage int getStatus()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.FastSysexMessage byte[] getReadOnlyMessage()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.InvalidDataException InvalidDataException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.InvalidDataException InvalidDataException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.InvalidFormatException InvalidFormatException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.InvalidFormatException InvalidFormatException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.JARSoundbankReader JARSoundbankReader()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.JARSoundbankReader javax.sound.midi.Soundbank getSoundbank(java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.JDK13Services JDK13Services()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.JSSecurityManager JSSecurityManager()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.JSSecurityManager boolean hasSecurityManager()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.JavaSoundAudioClip void update(javax.sound.sampled.LineEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.JavaSoundAudioClip.DirectBAOS byte[] getInternalBuffer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.MidiDeviceReceiverEnvelope MidiDeviceReceiverEnvelope(javax.sound.midi.MidiDevice, javax.sound.midi.Receiver)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.MidiDeviceReceiverEnvelope javax.sound.midi.MidiDevice getMidiDevice()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.MidiDeviceReceiverEnvelope javax.sound.midi.Receiver getReceiver()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.MidiDeviceTransmitterEnvelope MidiDeviceTransmitterEnvelope(javax.sound.midi.MidiDevice, javax.sound.midi.Transmitter)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.MidiDeviceTransmitterEnvelope javax.sound.midi.MidiDevice getMidiDevice()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.MidiDeviceTransmitterEnvelope javax.sound.midi.Transmitter getTransmitter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.MidiInDevice MidiInDevice(com.sun.media.sound.AbstractMidiDeviceProvider.Info)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.MidiInDevice boolean hasTransmitters()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.MidiInDevice javax.sound.midi.Transmitter createTransmitter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.MidiInDevice.MidiInTransmitter MidiInTransmitter(com.sun.media.sound.MidiInDevice)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.MidiInDeviceProvider MidiInDeviceProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.MidiInDeviceProvider com.sun.media.sound.AbstractMidiDeviceProvider.Info[] getInfoCache()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.MidiInDeviceProvider javax.sound.midi.MidiDevice createDevice(com.sun.media.sound.AbstractMidiDeviceProvider.Info)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.MidiInDeviceProvider javax.sound.midi.MidiDevice[] getDeviceCache()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.MidiOutDevice MidiOutDevice(com.sun.media.sound.AbstractMidiDeviceProvider.Info)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.MidiOutDevice boolean hasReceivers()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.MidiOutDevice javax.sound.midi.Receiver createReceiver()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.MidiOutDevice.MidiOutReceiver MidiOutReceiver(com.sun.media.sound.MidiOutDevice)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.MidiOutDeviceProvider MidiOutDeviceProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.MidiOutDeviceProvider com.sun.media.sound.AbstractMidiDeviceProvider.Info[] getInfoCache()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.MidiOutDeviceProvider javax.sound.midi.MidiDevice createDevice(com.sun.media.sound.AbstractMidiDeviceProvider.Info)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.MidiOutDeviceProvider javax.sound.midi.MidiDevice[] getDeviceCache()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.MidiUtils MidiUtils()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.MidiUtils double convertTempo(double)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.MidiUtils long microsec2ticks(long, double, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.MidiUtils long ticks2microsec(long, double, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.MidiUtils.TempoCache float getTempoMPQAt(long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.MidiUtils.TempoCache float getTempoMPQAt(long, float)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.MidiUtils.TempoCache int getCurrTempoMPQ()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer ModelAbstractChannelMixer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer boolean getMono()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer boolean getMute()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer boolean getOmni()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer boolean getSolo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer boolean localControl(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer int getChannelPressure()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer int getController(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer int getPitchBend()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer int getPolyPressure(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer int getProgram()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer void allNotesOff()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer void allSoundOff()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer void controlChange(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer void noteOff(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer void noteOff(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer void noteOn(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer void programChange(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer void programChange(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer void resetAllControllers()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer void setChannelPressure(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer void setMono(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer void setMute(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer void setOmni(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer void setPitchBend(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer void setPolyPressure(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer void setSolo(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator ModelAbstractOscillator()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator boolean isOn()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator float getAttenuation()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator float getPitch()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator float getSampleRate()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator int getChannels()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator int getNoteNumber()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator int getVelocity()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator int read(float[][], int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator java.lang.String getVendor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator java.lang.String getVersion()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator javax.sound.midi.MidiChannel getChannel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator javax.sound.midi.Patch getPatch()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator javax.sound.midi.SoundbankResource[] getResources()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator javax.sound.midi.VoiceStatus getVoice()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator void close()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator void init()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator void noteOff(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator void noteOn(javax.sound.midi.MidiChannel, javax.sound.midi.VoiceStatus, int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator void setPitch(float)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator void setSampleRate(float)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBuffer ModelByteBuffer(byte[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBuffer ModelByteBuffer(byte[], int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBuffer ModelByteBuffer(java.io.File, long, long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBuffer byte[] array()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelByteBuffer com.sun.media.sound.ModelByteBuffer getRoot()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelByteBuffer java.io.File getFile()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelByteBuffer long capacity()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelByteBuffer long getFilePointer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelByteBuffer.RandomFileInputStream boolean markSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelByteBuffer.RandomFileInputStream int available()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelByteBufferWavetable ModelByteBufferWavetable(com.sun.media.sound.ModelByteBuffer)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBufferWavetable ModelByteBufferWavetable(com.sun.media.sound.ModelByteBuffer, float)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBufferWavetable ModelByteBufferWavetable(com.sun.media.sound.ModelByteBuffer, javax.sound.sampled.AudioFormat)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBufferWavetable ModelByteBufferWavetable(com.sun.media.sound.ModelByteBuffer, javax.sound.sampled.AudioFormat, float)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBufferWavetable com.sun.media.sound.ModelByteBuffer get8BitExtensionBuffer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelByteBufferWavetable com.sun.media.sound.ModelByteBuffer getBuffer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelByteBufferWavetable com.sun.media.sound.ModelOscillatorStream open(float)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelByteBufferWavetable float getAttenuation()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelByteBufferWavetable float getLoopLength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelByteBufferWavetable float getLoopStart()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelByteBufferWavetable float getPitchcorrection()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelByteBufferWavetable int getLoopType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelByteBufferWavetable void set8BitExtensionBuffer(com.sun.media.sound.ModelByteBuffer)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBufferWavetable void setAttenuation(float)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBufferWavetable void setLoopLength(float)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBufferWavetable void setLoopStart(float)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBufferWavetable void setLoopType(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBufferWavetable void setPitchcorrection(float)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBufferWavetable.Buffer8PlusInputStream boolean markSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelByteBufferWavetable.Buffer8PlusInputStream int available()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelByteBufferWavetable.Buffer8PlusInputStream void mark(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBufferWavetable.Buffer8PlusInputStream void reset()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelConnectionBlock ModelConnectionBlock()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelConnectionBlock ModelConnectionBlock(double, com.sun.media.sound.ModelDestination)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelConnectionBlock com.sun.media.sound.ModelDestination getDestination()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelConnectionBlock double getScale()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelConnectionBlock void setDestination(com.sun.media.sound.ModelDestination)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelConnectionBlock void setScale(double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelDestination ModelDestination()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelDestination ModelDestination(com.sun.media.sound.ModelIdentifier)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelDestination com.sun.media.sound.ModelIdentifier getIdentifier()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelDestination com.sun.media.sound.ModelTransform getTransform()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelDestination void setIdentifier(com.sun.media.sound.ModelIdentifier)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelDestination void setTransform(com.sun.media.sound.ModelTransform)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelIdentifier ModelIdentifier(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelIdentifier ModelIdentifier(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelIdentifier ModelIdentifier(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelIdentifier ModelIdentifier(java.lang.String, java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelIdentifier boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelIdentifier int getInstance()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelIdentifier java.lang.String getObject()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelIdentifier java.lang.String getVariable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelIdentifier void setInstance(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelIdentifier void setObject(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelIdentifier void setVariable(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelInstrument ModelInstrument(javax.sound.midi.Soundbank, javax.sound.midi.Patch, java.lang.String, java.lang.Class&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelInstrument com.sun.media.sound.ModelChannelMixer getChannelMixer(javax.sound.midi.MidiChannel, javax.sound.sampled.AudioFormat)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelInstrument com.sun.media.sound.ModelPerformer[] getPerformers()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelInstrumentComparator ModelInstrumentComparator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelPatch ModelPatch(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelPatch ModelPatch(int, int, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelPatch boolean isPercussion()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelPerformer ModelPerformer()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelPerformer boolean isDefaultConnectionsEnabled()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelPerformer boolean isReleaseTriggered()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelPerformer boolean isSelfNonExclusive()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelPerformer int getExclusiveClass()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelPerformer int getKeyFrom()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelPerformer int getKeyTo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelPerformer int getVelFrom()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelPerformer int getVelTo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelPerformer java.lang.Object getUserObject()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelPerformer java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelPerformer java.util.List&lt;com.sun.media.sound.ModelConnectionBlock&gt; getConnectionBlocks()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelPerformer java.util.List&lt;com.sun.media.sound.ModelOscillator&gt; getOscillators()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelPerformer void setConnectionBlocks(java.util.List&lt;com.sun.media.sound.ModelConnectionBlock&gt;)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelPerformer void setDefaultConnectionsEnabled(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelPerformer void setExclusiveClass(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelPerformer void setKeyFrom(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelPerformer void setKeyTo(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelPerformer void setName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelPerformer void setReleaseTriggered(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelPerformer void setSelfNonExclusive(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelPerformer void setUserObject(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelPerformer void setVelFrom(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelPerformer void setVelTo(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelSource ModelSource()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelSource ModelSource(com.sun.media.sound.ModelIdentifier)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelSource ModelSource(com.sun.media.sound.ModelIdentifier, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelSource ModelSource(com.sun.media.sound.ModelIdentifier, boolean, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelSource ModelSource(com.sun.media.sound.ModelIdentifier, boolean, boolean, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelSource ModelSource(com.sun.media.sound.ModelIdentifier, com.sun.media.sound.ModelTransform)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelSource com.sun.media.sound.ModelIdentifier getIdentifier()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelSource com.sun.media.sound.ModelTransform getTransform()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelSource void setIdentifier(com.sun.media.sound.ModelIdentifier)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelSource void setTransform(com.sun.media.sound.ModelTransform)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelStandardDirector ModelStandardDirector(com.sun.media.sound.ModelPerformer[], com.sun.media.sound.ModelDirectedPlayer)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelStandardDirector void close()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelStandardIndexedDirector int restrict(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelStandardIndexedDirector int[] lookupIndex(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelStandardIndexedDirector void close()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelStandardTransform ModelStandardTransform()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelStandardTransform ModelStandardTransform(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelStandardTransform ModelStandardTransform(boolean, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelStandardTransform ModelStandardTransform(boolean, boolean, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelStandardTransform boolean getDirection()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelStandardTransform boolean getPolarity()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelStandardTransform int getTransform()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.ModelStandardTransform void setDirection(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelStandardTransform void setPolarity(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.ModelStandardTransform void setTransform(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.PCMtoPCMCodec PCMtoPCMCodec()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.PCMtoPCMCodec.PCMtoPCMCodecStream void switchEndian(byte[], int, int, int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="0"/>
  </item>
  <item name="com.sun.media.sound.PCMtoPCMCodec.PCMtoPCMCodecStream void switchSigned8bit(byte[], int, int, int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="0"/>
  </item>
  <item name="com.sun.media.sound.PCMtoPCMCodec.PCMtoPCMCodecStream void switchSignedBE(byte[], int, int, int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="0"/>
  </item>
  <item name="com.sun.media.sound.PCMtoPCMCodec.PCMtoPCMCodecStream void switchSignedLE(byte[], int, int, int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="0"/>
  </item>
  <item name="com.sun.media.sound.Platform Platform()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.Platform boolean isBigEndian()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.Platform boolean isSigned8()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.Platform java.lang.String getClasspath()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.Platform java.lang.String getJavahome()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.Platform void initialize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.PortMixer long getID()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.PortMixer void implStart()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.PortMixer void implStop()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.PortMixer.BoolCtrl BoolCtrl(long, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.PortMixer.BoolCtrl BoolCtrl(long, javax.sound.sampled.BooleanControl.Type)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.PortMixer.BoolCtrl javax.sound.sampled.BooleanControl.Type createType(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.PortMixer.BoolCtrl.BCT BCT(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.PortMixer.CompCtrl CompCtrl(java.lang.String, javax.sound.sampled.Control[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.PortMixer.CompCtrl.CCT CCT(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.PortMixer.FloatCtrl.FCT FCT(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.PortMixer.PortInfo PortInfo(java.lang.String, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.PortMixerProvider javax.sound.sampled.Mixer.Info[] getMixerInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.PortMixerProvider void &lt;clinit&gt;()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.PortMixerProvider.PortMixerInfo int getIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.Printer Printer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.Printer void debug(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.Printer void err(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.Printer void release(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.Printer void trace(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.Printer void verbose(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.RIFFInvalidDataException RIFFInvalidDataException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.RIFFInvalidDataException RIFFInvalidDataException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.RIFFInvalidFormatException RIFFInvalidFormatException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.RIFFInvalidFormatException RIFFInvalidFormatException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.RIFFReader int available()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.RIFFReader java.lang.String getFormat()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.RIFFReader java.lang.String getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.RIFFReader long getFilePointer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.RIFFReader long getSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.RIFFWriter boolean getWriteOverride()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.RIFFWriter void setWriteOverride(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.RIFFWriter.RandomAccessByteWriter RandomAccessByteWriter(java.io.OutputStream)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.RIFFWriter.RandomAccessByteWriter long getPointer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.RIFFWriter.RandomAccessByteWriter long length()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.RIFFWriter.RandomAccessByteWriter void seek(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.RIFFWriter.RandomAccessByteWriter void setLength(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer boolean hasReceivers()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer boolean hasTransmitters()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer boolean isRecording()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer boolean isRunning()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer boolean[] ensureBoolArraySize(boolean[], int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer com.sun.media.sound.MidiUtils.TempoCache getTempoCache()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer com.sun.media.sound.RealTimeSequencer.DataPump getDataPump()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer int getLoopCount()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer javax.sound.midi.Receiver createReceiver()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer javax.sound.midi.Sequence getSequence()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer javax.sound.midi.Sequencer.SyncMode getMasterSyncMode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer javax.sound.midi.Sequencer.SyncMode getSlaveSyncMode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer javax.sound.midi.Sequencer.SyncMode[] getMasterSyncModes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer javax.sound.midi.Sequencer.SyncMode[] getSlaveSyncModes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer javax.sound.midi.Transmitter createTransmitter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer long getLoopEndPoint()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer long getLoopStartPoint()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer void setAutoConnect(javax.sound.midi.Receiver)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer void setMasterSyncMode(javax.sound.midi.Sequencer.SyncMode)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer void setSlaveSyncMode(javax.sound.midi.Sequencer.SyncMode)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.ControllerListElement ControllerListElement(com.sun.media.sound.RealTimeSequencer, javax.sound.midi.ControllerEventListener, int[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.ControllerListElement int[] getControllers()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.ControllerListElement void removeControllers(int[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.DataPump boolean hasCachedTempo()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.DataPump boolean[] makeDisabledArray()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.DataPump float getTempoFactor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.DataPump float getTempoMPQ()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.DataPump long getTickPos()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.DataPump long millis2tick(long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.DataPump long tick2millis(long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.DataPump void init()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.DataPump void resetLoopCount()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.DataPump void setTempoFactor(float)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.DataPump void setTempoMPQ(float)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.PlayThread com.sun.media.sound.RealTimeSequencer.DataPump getDataPump()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.RealTimeSequencerInfo RealTimeSequencerInfo()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.RecordingTrack RecordingTrack(javax.sound.midi.Track, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.SequencerReceiver SequencerReceiver(com.sun.media.sound.RealTimeSequencer)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.SequencerTransmitter SequencerTransmitter(com.sun.media.sound.RealTimeSequencer)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencerProvider RealTimeSequencerProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencerProvider javax.sound.midi.MidiDevice.Info[] getDeviceInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Instrument SF2Instrument()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2Instrument SF2Instrument(com.sun.media.sound.SF2Soundbank)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2Instrument com.sun.media.sound.ModelDestination convertDestination(int, double[], com.sun.media.sound.ModelSource[])">
    <annotation name="org.jetbrains.annotations.ParamChange" params="1,2"/>
  </item>
  <item name="com.sun.media.sound.SF2Instrument com.sun.media.sound.SF2GlobalRegion getGlobalRegion()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Instrument java.lang.Object getData()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Instrument java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Instrument java.util.List&lt;com.sun.media.sound.SF2InstrumentRegion&gt; getRegions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Instrument javax.sound.midi.Patch getPatch()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Instrument long getGenre()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Instrument long getLibrary()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Instrument long getMorphology()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Instrument void setGenre(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2Instrument void setGlobalZone(com.sun.media.sound.SF2GlobalRegion)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2Instrument void setLibrary(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2Instrument void setMorphology(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2Instrument void setName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2InstrumentRegion com.sun.media.sound.SF2Layer getLayer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2InstrumentRegion void setLayer(com.sun.media.sound.SF2Layer)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2Layer SF2Layer()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2Layer SF2Layer(com.sun.media.sound.SF2Soundbank)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2Layer com.sun.media.sound.SF2GlobalRegion getGlobalRegion()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Layer java.lang.Object getData()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Layer java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Layer java.util.List&lt;com.sun.media.sound.SF2LayerRegion&gt; getRegions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Layer void setGlobalZone(com.sun.media.sound.SF2GlobalRegion)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2Layer void setName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2LayerRegion com.sun.media.sound.SF2Sample getSample()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2LayerRegion void setSample(com.sun.media.sound.SF2Sample)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2Modulator SF2Modulator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Modulator int getAmountSourceOperator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Modulator int getDestinationOperator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Modulator int getSourceOperator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Modulator int getTransportOperator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Modulator short getAmount()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Modulator void setAmount(short)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2Modulator void setAmountSourceOperator(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2Modulator void setDestinationOperator(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2Modulator void setSourceOperator(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2Modulator void setTransportOperator(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2Region java.util.List&lt;com.sun.media.sound.SF2Modulator&gt; getModulators()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Region java.util.Map&lt;java.lang.Integer,java.lang.Short&gt; getGenerators()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Region short getDefaultValue(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Sample SF2Sample()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2Sample SF2Sample(javax.sound.midi.Soundbank)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2Sample byte getPitchCorrection()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Sample com.sun.media.sound.ModelByteBuffer getData24Buffer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Sample com.sun.media.sound.ModelByteBuffer getDataBuffer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Sample int getOriginalPitch()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Sample int getSampleLink()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Sample int getSampleType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Sample java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Sample javax.sound.sampled.AudioFormat getFormat()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Sample long getEndLoop()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Sample long getSampleRate()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Sample long getStartLoop()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Sample void setData(byte[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2Sample void setData(byte[], int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2Sample void setData(com.sun.media.sound.ModelByteBuffer)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2Sample void setData24(byte[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2Sample void setData24(byte[], int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2Sample void setData24(com.sun.media.sound.ModelByteBuffer)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2Sample void setEndLoop(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2Sample void setName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2Sample void setOriginalPitch(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2Sample void setPitchCorrection(byte)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2Sample void setSampleLink(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2Sample void setSampleRate(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2Sample void setSampleType(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2Sample void setStartLoop(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank SF2Soundbank()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank int getRomVersionMajor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank int getRomVersionMinor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank java.lang.String getCreationDate()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank java.lang.String getDescription()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank java.lang.String getProduct()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank java.lang.String getRomName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank java.lang.String getTargetEngine()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank java.lang.String getTools()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank java.lang.String getVendor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank void setCreationDate(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank void setDescription(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank void setName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank void setProduct(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank void setRomName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank void setRomVersionMajor(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank void setRomVersionMinor(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank void setTargetEngine(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank void setTools(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank void setVendor(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SF2SoundbankReader SF2SoundbankReader()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SMFParser SMFParser()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SMFParser boolean trackFinished()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SMFParser int readUnsigned()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SMFParser long readVarInt()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SMFParser void read(byte[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
    <annotation name="org.jetbrains.annotations.ParamChange" params="0"/>
  </item>
  <item name="com.sun.media.sound.SimpleInstrument SimpleInstrument()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SimpleInstrument com.sun.media.sound.ModelPatch getPatch()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SimpleInstrument java.lang.Object getData()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SimpleInstrument java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SimpleInstrument void setName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SimpleInstrument.SimpleInstrumentPart SimpleInstrumentPart()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SimpleSoundbank SimpleSoundbank()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SimpleSoundbank java.lang.String getDescription()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SimpleSoundbank java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SimpleSoundbank java.lang.String getVendor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SimpleSoundbank java.lang.String getVersion()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SimpleSoundbank void setDescription(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SimpleSoundbank void setName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SimpleSoundbank void setVendor(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SimpleSoundbank void setVersion(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftAbstractResampler SoftAbstractResampler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftAbstractResampler.ModelAbstractResamplerStream void noteOff(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftAbstractResampler.ModelAbstractResamplerStream void noteOn(javax.sound.midi.MidiChannel, javax.sound.midi.VoiceStatus, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftAudioBuffer boolean isSilent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftAudioBuffer float[] array()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftAudioBuffer int getSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftAudioBuffer javax.sound.sampled.AudioFormat getFormat()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftAudioBuffer void swap(com.sun.media.sound.SoftAudioBuffer)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
    <annotation name="org.jetbrains.annotations.ParamChange" params="0"/>
  </item>
  <item name="com.sun.media.sound.SoftAudioPusher SoftAudioPusher(javax.sound.sampled.SourceDataLine, javax.sound.sampled.AudioInputStream, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftChannel boolean getMono()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftChannel boolean getMute()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftChannel boolean getOmni()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftChannel boolean getSolo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftChannel boolean localControl(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftChannel int findFreeVoice(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftChannel int getChannelPressure()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftChannel int getControlPerNote(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftChannel int getController(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftChannel int getPitchBend()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftChannel int getPolyPressure(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftChannel int getProgram()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftChannel int restrict14Bit(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftChannel int restrict7Bit(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftChannel.MidiControlObject MidiControlObject(com.sun.media.sound.SoftChannel)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftChannel.MidiControlObject double[] get(int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftChannelProxy SoftChannelProxy()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftChannelProxy javax.sound.midi.MidiChannel getChannel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftChannelProxy void setChannel(javax.sound.midi.MidiChannel)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftChorus SoftChorus()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftChorus void setInput(int, com.sun.media.sound.SoftAudioBuffer)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftChorus void setMixMode(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftChorus void setOutput(int, com.sun.media.sound.SoftAudioBuffer)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftChorus.LFODelay LFODelay(double, double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftChorus.LFODelay void setDepth(double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftChorus.LFODelay void setPhase(double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftChorus.LFODelay void setRate(double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftChorus.VariableDelay VariableDelay(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftChorus.VariableDelay void setDelay(float)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftChorus.VariableDelay void setFeedBack(float)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftChorus.VariableDelay void setGain(float)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftChorus.VariableDelay void setReverbSendGain(float)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftCubicResampler SoftCubicResampler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftCubicResampler int getPadding()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftCubicResampler void interpolate(float[], float[], float, float[], float, float[], int[], int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="1,3,5,6"/>
  </item>
  <item name="com.sun.media.sound.SoftEnvelopeGenerator SoftEnvelopeGenerator()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftEnvelopeGenerator double[] get(int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftFilter SoftFilter(float)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftFilter void reset()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftFilter void setFilterType(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftFilter void setFrequency(double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftFilter void setResonance(double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftInstrument com.sun.media.sound.ModelInstrument getSourceInstrument()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftInstrument com.sun.media.sound.SoftPerformer getPerformer(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftInstrument java.lang.Object getData()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftJitterCorrector.JitterStream byte[] nextWriteBuffer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftJitterCorrector.JitterStream int available()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftJitterCorrector.JitterStream void commit()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftLanczosResampler int getPadding()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftLanczosResampler void interpolate(float[], float[], float, float[], float, float[], int[], int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="1,3,5,6"/>
  </item>
  <item name="com.sun.media.sound.SoftLimiter SoftLimiter()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftLimiter void globalParameterControlChange(int[], long, long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftLimiter void init(float, float)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftLimiter void processControlLogic()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftLimiter void setInput(int, com.sun.media.sound.SoftAudioBuffer)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftLimiter void setMixMode(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftLimiter void setOutput(int, com.sun.media.sound.SoftAudioBuffer)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftLinearResampler SoftLinearResampler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftLinearResampler int getPadding()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftLinearResampler void interpolate(float[], float[], float, float[], float, float[], int[], int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="1,3,5,6"/>
  </item>
  <item name="com.sun.media.sound.SoftLinearResampler2 SoftLinearResampler2()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftLinearResampler2 int getPadding()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftLinearResampler2 void interpolate(float[], float[], float, float[], float, float[], int[], int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="1,3,5,6"/>
  </item>
  <item name="com.sun.media.sound.SoftLowFrequencyOscillator double[] get(int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftMainMixer int getBalance()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMainMixer int getCoarseTuning()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMainMixer int getFineTuning()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMainMixer int getVolume()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMainMixer javax.sound.sampled.AudioInputStream getInputStream()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMainMixer long getMicrosecondPosition()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMainMixer void close()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMainMixer.SoftChannelMixerContainer SoftChannelMixerContainer(com.sun.media.sound.SoftMainMixer)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftMidiAudioFileReader SoftMidiAudioFileReader()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip boolean isActive()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip boolean isOpen()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip boolean isRunning()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip float getLevel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip int available()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip int getBufferSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip int getFramePosition()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip javax.sound.sampled.AudioFormat getFormat()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip long getLongFramePosition()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip void drain()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip void flush()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip void setFramePosition(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingDataLine javax.sound.sampled.Line.Info getLineInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingDataLine.ApplyReverb ApplyReverb(com.sun.media.sound.SoftMixingDataLine)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingDataLine.AudioFloatInputStreamResampler int available()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingDataLine.AudioFloatInputStreamResampler javax.sound.sampled.AudioFormat getFormat()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingDataLine.AudioFloatInputStreamResampler long getFrameLength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingDataLine.Mute Mute(com.sun.media.sound.SoftMixingDataLine)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingMainMixer com.sun.media.sound.SoftMixingDataLine[] getOpenLines()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingMainMixer javax.sound.sampled.AudioInputStream getInputStream()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer boolean isControlSupported(javax.sound.sampled.Control.Type)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer boolean isOpen()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer boolean isSynchronizationSupported(javax.sound.sampled.Line[], boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer com.sun.media.sound.SoftMixingMainMixer getMainMixer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer float getControlRate()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer javax.sound.sampled.AudioFormat getFormat()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer javax.sound.sampled.Control[] getControls()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer javax.sound.sampled.Line.Info getLineInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer javax.sound.sampled.Line.Info[] getSourceLineInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer javax.sound.sampled.Line.Info[] getTargetLineInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer javax.sound.sampled.Line.Info[] getTargetLineInfo(javax.sound.sampled.Line.Info)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer javax.sound.sampled.Line[] getSourceLines()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer javax.sound.sampled.Line[] getTargetLines()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer javax.sound.sampled.Mixer.Info getMixerInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer long getLatency()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer void synchronize(javax.sound.sampled.Line[], boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer void unsynchronize(javax.sound.sampled.Line[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer.Info Info()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixerProvider SoftMixingMixerProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixerProvider javax.sound.sampled.Mixer.Info[] getMixerInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingSourceDataLine boolean isActive()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingSourceDataLine boolean isOpen()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingSourceDataLine boolean isRunning()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingSourceDataLine float getLevel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingSourceDataLine int available()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingSourceDataLine int getBufferSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingSourceDataLine int getFramePosition()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingSourceDataLine javax.sound.sampled.AudioFormat getFormat()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingSourceDataLine long getLongFramePosition()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingSourceDataLine void flush()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingSourceDataLine void processControlLogic()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingSourceDataLine.NonBlockingFloatInputStream NonBlockingFloatInputStream(com.sun.media.sound.AudioFloatInputStream)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftPerformer boolean isUnnecessaryTransform(com.sun.media.sound.ModelTransform)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftPerformer.KeySortComparator KeySortComparator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftPointResampler SoftPointResampler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftPointResampler int getPadding()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftPointResampler void interpolate(float[], float[], float, float[], float, float[], int[], int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="1,3,5,6"/>
  </item>
  <item name="com.sun.media.sound.SoftProvider SoftProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftReceiver SoftReceiver(com.sun.media.sound.SoftSynthesizer)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftReceiver javax.sound.midi.MidiDevice getMidiDevice()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftReverb SoftReverb()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftReverb void setGain(float)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftReverb void setInput(int, com.sun.media.sound.SoftAudioBuffer)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftReverb void setLightMode(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftReverb void setMixMode(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftReverb void setOutput(int, com.sun.media.sound.SoftAudioBuffer)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftReverb.AllPass AllPass(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftReverb.AllPass void setFeedBack(float)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftReverb.Comb Comb(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftReverb.Comb void setDamp(float)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftReverb.Comb void setFeedBack(float)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftReverb.Delay Delay()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftReverb.Delay void setDelay(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftShortMessage int getChannel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftSincResampler int getPadding()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftSincResampler void interpolate(float[], float[], float, float[], float, float[], int[], int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="1,3,5,6"/>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer boolean isOpen()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer com.sun.media.sound.SoftMainMixer getMainMixer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer com.sun.media.sound.SoftVoice[] getVoices()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer float getControlRate()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer int getDeviceID()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer int getGeneralMidiMode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer int getMaxPolyphony()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer int getMaxReceivers()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer int getMaxTransmitters()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer int getVoiceAllocationMode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer java.util.List&lt;javax.sound.midi.Transmitter&gt; getTransmitters()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer javax.sound.midi.MidiDevice.Info getDeviceInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer javax.sound.midi.Transmitter getTransmitter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer javax.sound.midi.Transmitter getTransmitterReferenceCounting()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer javax.sound.midi.VoiceStatus[] getVoiceStatus()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer javax.sound.sampled.AudioFormat getFormat()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer long getLatency()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer long getMicrosecondPosition()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer void setGeneralMidiMode(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer.Info Info()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer.WeakAudioStream void setInputStream(javax.sound.sampled.AudioInputStream)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftTuning boolean checksumOK(byte[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftTuning double getTuning(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftTuning double[] getTuning()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftTuning java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftTuning javax.sound.midi.Patch getPatch()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftTuning void setName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftVoice double processKeyBasedController(double, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftVoice void setNote(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SoftVoice void soundOff()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.StandardMidiFileReader StandardMidiFileReader()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.StandardMidiFileWriter StandardMidiFileWriter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.StandardMidiFileWriter boolean isFileTypeSupported(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.StandardMidiFileWriter int getType(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.StandardMidiFileWriter int[] getMidiFileTypes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SunCodec SunCodec(javax.sound.sampled.AudioFormat.Encoding[], javax.sound.sampled.AudioFormat.Encoding[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SunCodec javax.sound.sampled.AudioFormat.Encoding[] getSourceEncodings()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SunCodec javax.sound.sampled.AudioFormat.Encoding[] getTargetEncodings()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SunFileReader SunFileReader()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SunFileReader int big2little(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SunFileReader int calculatePCMFrameSize(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SunFileReader short big2littleShort(short)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SunFileWriter SunFileWriter(javax.sound.sampled.AudioFileFormat.Type[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SunFileWriter int big2little(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SunFileWriter javax.sound.sampled.AudioFileFormat.Type[] getAudioFileTypes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SunFileWriter short big2littleShort(short)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SunFileWriter.NoCloseInputStream NoCloseInputStream(com.sun.media.sound.SunFileWriter, java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.SunFileWriter.NoCloseInputStream void close()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.Toolkit Toolkit()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.Toolkit int align(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.Toolkit long align(long, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.Toolkit void getByteSwapped(byte[], int, int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="0"/>
  </item>
  <item name="com.sun.media.sound.Toolkit void getUnsigned8(byte[], int, int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="0"/>
  </item>
  <item name="com.sun.media.sound.UlawCodec UlawCodec()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.UlawCodec.UlawCodecStream short search(short, short[], short)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.WaveExtensibleFileReader WaveExtensibleFileReader()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.WaveExtensibleFileReader.GUID GUID()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.WaveExtensibleFileReader.GUID GUID(long, int, int, int, int, int, int, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.WaveExtensibleFileReader.GUID boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.WaveExtensibleFileReader.GUID int hashCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.WaveFileFormat int getFmtChunkSize(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.WaveFileFormat int getHeaderSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.WaveFileFormat int getHeaderSize(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.WaveFileFormat int getWaveType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.WaveFileReader WaveFileReader()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.WaveFileWriter WaveFileWriter()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.media.sound.WaveFloatFileReader WaveFloatFileReader()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.WaveFloatFileWriter WaveFloatFileWriter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.WaveFloatFileWriter javax.sound.sampled.AudioFileFormat.Type[] getAudioFileTypes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.WaveFloatFileWriter.NoCloseOutputStream NoCloseOutputStream(java.io.OutputStream)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
</root>
