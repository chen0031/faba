<root>
  <item name="com.sun.rowset.CachedRowSetImpl T unwrap(java.lang.Class&lt;T&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.rowset.CachedRowSetImpl boolean isAfterLast()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.rowset.CachedRowSetImpl boolean isBeforeFirst()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.rowset.CachedRowSetImpl boolean isBinary(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.rowset.CachedRowSetImpl boolean isBoolean(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.rowset.CachedRowSetImpl boolean isNumeric(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.rowset.CachedRowSetImpl boolean isString(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.rowset.CachedRowSetImpl boolean isTemporal(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.rowset.CachedRowSetImpl boolean isWrapperFor(java.lang.Class&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.rowset.CachedRowSetImpl boolean wasNull()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.rowset.CachedRowSetImpl int getPageSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.rowset.CachedRowSetImpl int size()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.rowset.CachedRowSetImpl int[] getKeyColumns()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.rowset.CachedRowSetImpl java.lang.String getTableName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.rowset.CachedRowSetImpl java.sql.Connection getConnection()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.rowset.CachedRowSetImpl java.sql.ResultSetMetaData getMetaData()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.rowset.CachedRowSetImpl java.sql.SQLWarning getWarnings()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.rowset.CachedRowSetImpl java.sql.Statement getStatement()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.rowset.CachedRowSetImpl javax.sql.rowset.spi.SyncProvider getSyncProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.rowset.CachedRowSetImpl void clearWarnings()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.rowset.CachedRowSetImpl void moveToCurrentRow()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.rowset.CachedRowSetImpl void setConnection(java.sql.Connection)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.rowset.CachedRowSetImpl void setLastValueNull(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.rowset.CachedRowSetImpl void setMetaData(javax.sql.RowSetMetaData)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.rowset.CachedRowSetImpl void updateAsciiStream(int, java.io.InputStream, long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.rowset.CachedRowSetImpl void updateAsciiStream(java.lang.String, java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.rowset.CachedRowSetImpl void updateAsciiStream(java.lang.String, java.io.InputStream, long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.rowset.CachedRowSetImpl void updateBinaryStream(int, java.io.InputStream, long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.rowset.CachedRowSetImpl void updateBinaryStream(java.lang.String, java.io.InputStream, long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.rowset.FilteredRowSetImpl javax.sql.rowset.Predicate getFilter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.rowset.FilteredRowSetImpl void setFilter(javax.sql.rowset.Predicate)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.rowset.JdbcRowSetImpl T unwrap(java.lang.Class&lt;T&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.rowset.JdbcRowSetImpl boolean isWrapperFor(java.lang.Class&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.rowset.JdbcRowSetImpl java.sql.Connection getConnection()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.rowset.JdbcRowSetImpl java.sql.PreparedStatement getPreparedStatement()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.rowset.JdbcRowSetImpl javax.sql.rowset.RowSetWarning getRowSetWarnings()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.rowset.JdbcRowSetImpl void setConnection(java.sql.Connection)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.rowset.JdbcRowSetImpl void setPreparedStatement(java.sql.PreparedStatement)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.rowset.JdbcRowSetImpl void setResultSet(java.sql.ResultSet)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.rowset.JoinRowSetImpl boolean supportsCrossJoin()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.rowset.JoinRowSetImpl boolean supportsFullJoin()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.rowset.JoinRowSetImpl boolean supportsInnerJoin()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.rowset.JoinRowSetImpl boolean supportsLeftOuterJoin()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.rowset.JoinRowSetImpl boolean supportsRightOuterJoin()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.rowset.JoinRowSetImpl java.util.Collection getRowSets()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.rowset.JoinRowSetImpl javax.sql.rowset.CachedRowSet toCachedRowSet()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.rowset.RowSetFactoryImpl RowSetFactoryImpl()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
</root>
