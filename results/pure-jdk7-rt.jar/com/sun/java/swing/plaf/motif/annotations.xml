<root>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders MotifBorders()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.BevelBorder boolean isOpaque(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.FocusBorder FocusBorder(java.awt.Color, java.awt.Color)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.FrameBorder FrameBorder(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.FrameBorder java.awt.Color getFrameColor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.FrameBorder java.awt.Color getFrameHighlight()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.FrameBorder java.awt.Color getFrameShadow()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.FrameBorder javax.swing.JComponent component()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.FrameBorder void setComponent(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.InternalFrameBorder InternalFrameBorder(javax.swing.JInternalFrame)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.InternalFrameBorder javax.swing.JInternalFrame frame()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.InternalFrameBorder void setFrame(javax.swing.JInternalFrame)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.MotifPopupMenuBorder MotifPopupMenuBorder(java.awt.Font, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifButtonListener MotifButtonListener(javax.swing.AbstractButton)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifButtonUI MotifButtonUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifButtonUI java.awt.Color getSelectColor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifButtonUI javax.swing.plaf.basic.BasicButtonListener createButtonListener(javax.swing.AbstractButton)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifButtonUI void paintFocus(java.awt.Graphics, javax.swing.AbstractButton, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifCheckBoxMenuItemUI MotifCheckBoxMenuItemUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifCheckBoxMenuItemUI javax.swing.event.ChangeListener createChangeListener(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifCheckBoxMenuItemUI javax.swing.event.MouseInputListener createMouseInputListener(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifCheckBoxMenuItemUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifCheckBoxMenuItemUI.ChangeHandler ChangeHandler(com.sun.java.swing.plaf.motif.MotifCheckBoxMenuItemUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifCheckBoxMenuItemUI.MouseInputHandler MouseInputHandler(com.sun.java.swing.plaf.motif.MotifCheckBoxMenuItemUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifCheckBoxMenuItemUI.MouseInputHandler void mouseClicked(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifCheckBoxMenuItemUI.MouseInputHandler void mouseEntered(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifCheckBoxMenuItemUI.MouseInputHandler void mouseExited(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifCheckBoxMenuItemUI.MouseInputHandler void mouseMoved(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifCheckBoxUI MotifCheckBoxUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifCheckBoxUI java.lang.String getPropertyPrefix()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifComboBoxUI java.awt.Component motifGetEditor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifComboBoxUI java.beans.PropertyChangeListener createPropertyChangeListener()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifComboBoxUI.MotifComboBoxArrowIcon MotifComboBoxArrowIcon(java.awt.Color, java.awt.Color, java.awt.Color)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifComboBoxUI.MotifComboBoxArrowIcon int getIconHeight()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifComboBoxUI.MotifComboBoxArrowIcon int getIconWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifComboBoxUI.MotifComboPopup java.awt.event.KeyListener createKeyListener()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifComboBoxUI.MotifComboPopup java.awt.event.MouseMotionListener createListMouseMotionListener()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifComboBoxUI.MotifPropertyChangeListener MotifPropertyChangeListener(com.sun.java.swing.plaf.motif.MotifComboBoxUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopIconUI MotifDesktopIconUI()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopIconUI com.sun.java.swing.plaf.motif.MotifDesktopIconUI.DesktopIconActionListener createDesktopIconActionListener()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopIconUI com.sun.java.swing.plaf.motif.MotifDesktopIconUI.DesktopIconMouseListener createDesktopIconMouseListener()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopIconUI javax.swing.Icon getDefaultIcon()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopIconUI javax.swing.JInternalFrame getFrame()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopIconUI javax.swing.JInternalFrame.JDesktopIcon getDesktopIcon()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopIconUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopIconUI void installComponents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopIconUI void setDefaultIcon(javax.swing.Icon)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopIconUI void setDesktopIcon(javax.swing.JInternalFrame.JDesktopIcon)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopIconUI void setFrame(javax.swing.JInternalFrame)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopIconUI void uninstallComponents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopIconUI.DesktopIconActionListener DesktopIconActionListener(com.sun.java.swing.plaf.motif.MotifDesktopIconUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopIconUI.DesktopIconMouseListener DesktopIconMouseListener(com.sun.java.swing.plaf.motif.MotifDesktopIconUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopIconUI.IconButton boolean isFocusTraversable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopIconUI.IconLabel boolean isFocusTraversable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopPaneUI MotifDesktopPaneUI()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopPaneUI java.awt.Insets getInsets(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopPaneUI.MotifDesktopManager MotifDesktopManager(com.sun.java.swing.plaf.motif.MotifDesktopPaneUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifEditorPaneUI javax.swing.text.Caret createCaret()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI java.awt.Dimension getMaximumSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI java.awt.Dimension getMinimumSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI java.beans.PropertyChangeListener createPropertyChangeListener(javax.swing.JFileChooser)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI javax.swing.JButton getApproveButton(javax.swing.JFileChooser)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI void ensureFileIsVisible(javax.swing.JFileChooser, java.io.File)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI void installIcons(javax.swing.JFileChooser)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI void uninstallIcons(javax.swing.JFileChooser)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI.FilterComboBoxModel int getSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifGraphicsUtils MotifGraphicsUtils()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory MotifIconFactory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory javax.swing.Icon getMenuItemCheckIcon()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.CheckBoxIcon int getIconHeight()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.CheckBoxIcon int getIconWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.MenuArrowIcon int getIconHeight()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.MenuArrowIcon int getIconWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.MenuItemArrowIcon MenuItemArrowIcon()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.MenuItemArrowIcon int getIconHeight()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.MenuItemArrowIcon int getIconWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.MenuItemArrowIcon void paintIcon(java.awt.Component, java.awt.Graphics, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.MenuItemCheckIcon MenuItemCheckIcon()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.MenuItemCheckIcon int getIconHeight()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.MenuItemCheckIcon int getIconWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.MenuItemCheckIcon void paintIcon(java.awt.Component, java.awt.Graphics, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.RadioButtonIcon int getIconHeight()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.RadioButtonIcon int getIconWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane java.awt.Dimension minimumLayoutSize(java.awt.Container)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane java.awt.LayoutManager createLayout()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane java.beans.PropertyChangeListener createPropertyChangeListener()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane javax.swing.JPopupMenu getSystemMenu()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane void actionPerformed(java.awt.event.ActionEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane void addLayoutComponent(java.lang.String, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane void paintComponent(java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane void removeLayoutComponent(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane void setColors(java.awt.Color, java.awt.Color, java.awt.Color)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane.FrameButton boolean isFocusTraversable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane.FrameButton java.awt.Dimension getMinimumSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane.FrameButton java.awt.Dimension getPreferredSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane.FrameButton void requestFocus()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane.SystemButton boolean isFocusTraversable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane.SystemButton void requestFocus()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameUI javax.swing.JInternalFrame getFrame()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifLabelUI MotifLabelUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifLookAndFeel MotifLookAndFeel()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifLookAndFeel boolean isSupportedLookAndFeel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifLookAndFeel java.lang.String getDescription()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifLookAndFeel java.lang.String getID()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifLookAndFeel java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuBarUI MotifMenuBarUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuBarUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuItemUI MotifMenuItemUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuItemUI javax.swing.event.ChangeListener createChangeListener(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuItemUI javax.swing.event.MouseInputListener createMouseInputListener(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuItemUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuItemUI.ChangeHandler ChangeHandler(com.sun.java.swing.plaf.motif.MotifMenuItemUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuItemUI.MouseInputHandler MouseInputHandler(com.sun.java.swing.plaf.motif.MotifMenuItemUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuItemUI.MouseInputHandler void mouseClicked(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuItemUI.MouseInputHandler void mouseEntered(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuItemUI.MouseInputHandler void mouseExited(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuItemUI.MouseInputHandler void mouseMoved(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuMouseListener MotifMenuMouseListener()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuMouseMotionListener MotifMenuMouseMotionListener()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuUI MotifMenuUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuUI javax.swing.event.ChangeListener createChangeListener(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuUI javax.swing.event.MouseInputListener createMouseInputListener(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuUI.MotifChangeHandler MotifChangeHandler(com.sun.java.swing.plaf.motif.MotifMenuUI, javax.swing.JMenu, com.sun.java.swing.plaf.motif.MotifMenuUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuUI.MouseInputHandler MouseInputHandler(com.sun.java.swing.plaf.motif.MotifMenuUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuUI.MouseInputHandler void mouseClicked(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuUI.MouseInputHandler void mouseEntered(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuUI.MouseInputHandler void mouseExited(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuUI.MouseInputHandler void mouseMoved(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifOptionPaneUI MotifOptionPaneUI()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifOptionPaneUI java.awt.Dimension getMinimumOptionPaneSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifOptionPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifPasswordFieldUI javax.swing.text.Caret createCaret()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifPopupMenuSeparatorUI MotifPopupMenuSeparatorUI()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifPopupMenuSeparatorUI java.awt.Dimension getPreferredSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifPopupMenuSeparatorUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifPopupMenuUI javax.swing.event.ChangeListener createChangeListener(javax.swing.JPopupMenu)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifProgressBarUI MotifProgressBarUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifProgressBarUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifRadioButtonMenuItemUI MotifRadioButtonMenuItemUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifRadioButtonMenuItemUI javax.swing.event.ChangeListener createChangeListener(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifRadioButtonMenuItemUI javax.swing.event.MouseInputListener createMouseInputListener(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifRadioButtonMenuItemUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifRadioButtonMenuItemUI.ChangeHandler ChangeHandler(com.sun.java.swing.plaf.motif.MotifRadioButtonMenuItemUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifRadioButtonMenuItemUI.MouseInputHandler MouseInputHandler(com.sun.java.swing.plaf.motif.MotifRadioButtonMenuItemUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifRadioButtonMenuItemUI.MouseInputHandler void mouseClicked(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifRadioButtonMenuItemUI.MouseInputHandler void mouseEntered(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifRadioButtonMenuItemUI.MouseInputHandler void mouseExited(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifRadioButtonMenuItemUI.MouseInputHandler void mouseMoved(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifRadioButtonUI MotifRadioButtonUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifRadioButtonUI java.awt.Color getFocusColor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifScrollBarButton boolean isFocusTraversable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifScrollBarButton java.awt.Dimension getPreferredSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifScrollBarUI MotifScrollBarUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifScrollBarUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifScrollPaneUI MotifScrollPaneUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifScrollPaneUI java.beans.PropertyChangeListener createPropertyChangeHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifScrollPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSeparatorUI MotifSeparatorUI()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSeparatorUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSliderUI MotifSliderUI(javax.swing.JSlider)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSliderUI java.awt.Dimension getMinimumHorizontalSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSliderUI java.awt.Dimension getMinimumVerticalSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSliderUI java.awt.Dimension getPreferredHorizontalSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSliderUI java.awt.Dimension getPreferredVerticalSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSliderUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSliderUI void paintFocus(java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSliderUI void paintTrack(java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSplitPaneDivider javax.swing.JSplitPane getSplitPane()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSplitPaneDivider javax.swing.plaf.basic.BasicSplitPaneDivider.DragController getDragger()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSplitPaneDivider.MotifMouseHandler MotifMouseHandler(com.sun.java.swing.plaf.motif.MotifSplitPaneDivider)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSplitPaneUI MotifSplitPaneUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSplitPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTabbedPaneUI MotifTabbedPaneUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTabbedPaneUI int getTabRunIndent(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTabbedPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTabbedPaneUI void uninstallDefaults()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTextAreaUI javax.swing.text.Caret createCaret()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTextFieldUI javax.swing.text.Caret createCaret()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTextPaneUI javax.swing.text.Caret createCaret()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTextUI MotifTextUI()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTextUI javax.swing.text.Caret createCaret()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTextUI.MotifCaret MotifCaret()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifToggleButtonUI MotifToggleButtonUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifToggleButtonUI java.awt.Color getSelectColor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTreeCellRenderer javax.swing.Icon loadLeafIcon()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTreeCellRenderer.TreeLeafIcon int getIconHeight()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTreeCellRenderer.TreeLeafIcon int getIconWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTreeUI MotifTreeUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTreeUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTreeUI.MotifExpandedIcon int getIconHeight()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTreeUI.MotifExpandedIcon int getIconWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
</root>
