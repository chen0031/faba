<root>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.AbsoluteLocationPath com.sun.org.apache.xalan.internal.xsltc.compiler.Expression getPath()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.AbsolutePathPattern boolean isWildcard()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.AlternativePattern com.sun.org.apache.xalan.internal.xsltc.compiler.Pattern getLeft()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.AlternativePattern com.sun.org.apache.xalan.internal.xsltc.compiler.Pattern getRight()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.AncestorPattern boolean isWildcard()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.AncestorPattern com.sun.org.apache.bcel.internal.generic.InstructionHandle getLoopHandle()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.ArgumentList ArgumentList(com.sun.org.apache.xalan.internal.xsltc.compiler.Expression, com.sun.org.apache.xalan.internal.xsltc.compiler.ArgumentList)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.AttributeSet com.sun.org.apache.xalan.internal.xsltc.compiler.QName getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.AttributeSet java.lang.String getMethodName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.AttributeSet void ignore()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.BooleanExpr boolean contextDependent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.BooleanExpr boolean getValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.BooleanExpr com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type typeCheck(com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.BooleanExpr java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.CUP.XPathParser.actions actions(com.sun.org.apache.xalan.internal.xsltc.compiler.XPathParser)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.CastExpr com.sun.org.apache.xalan.internal.xsltc.compiler.Expression getExpr()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.CompilerException CompilerException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.CompilerException CompilerException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.ContainsCall boolean isBoolean()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.DecimalFormatting com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type typeCheck(com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.EqualityExpr boolean getOp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.EqualityExpr com.sun.org.apache.xalan.internal.xsltc.compiler.Expression getLeft()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.EqualityExpr com.sun.org.apache.xalan.internal.xsltc.compiler.Expression getRight()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.EqualityExpr void swapArguments()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Expression boolean hasLastCall()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Expression boolean hasPositionCall()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Expression com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList getFalseList()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Expression com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList getTrueList()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Expression com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Expression java.lang.Object evaluateAtCompileTime()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Fallback java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Fallback void activate()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.FilterExpr com.sun.org.apache.xalan.internal.xsltc.compiler.Expression getExpr()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.FilterParentPath void setDescendantAxis()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.FilteredAbsoluteLocationPath com.sun.org.apache.xalan.internal.xsltc.compiler.Expression getPath()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList FlowList()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList FlowList(com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionAvailableCall boolean isInternalNamespace()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall boolean isExtension()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall boolean isStandard()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall.JavaType JavaType(java.lang.Class, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.IdKeyPattern boolean isWildcard()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.IdKeyPattern com.sun.org.apache.xalan.internal.xsltc.compiler.StepPattern getKernelPattern()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.IdKeyPattern com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type typeCheck(com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.IdKeyPattern java.lang.String getIndexName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.IdKeyPattern void reduceKernelPattern()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.IdKeyPattern void setLeft(com.sun.org.apache.xalan.internal.xsltc.compiler.RelativePathPattern)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.IllegalCharException IllegalCharException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Import com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet getImportedStylesheet()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Import com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type typeCheck(com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Import void translate(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Include com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet getIncludedStylesheet()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Include com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type typeCheck(com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Include void translate(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.IntExpr com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type typeCheck(com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Key java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.LangCall com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.LastCall boolean hasLastCall()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.LastCall boolean hasPositionCall()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.LiteralAttribute boolean hasBadChars(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.LiteralAttribute com.sun.org.apache.xalan.internal.xsltc.compiler.AttributeValue getValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.LiteralAttribute java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.LiteralElement boolean allAttributesUnique()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.LiteralElement com.sun.org.apache.xalan.internal.xsltc.compiler.QName getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.LiteralExpr boolean contextDependent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.LiteralExpr com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type typeCheck(com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.LiteralExpr java.lang.String getNamespace()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.LiteralExpr java.lang.String getValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.LocationPathPattern boolean noSmallerThan(com.sun.org.apache.xalan.internal.xsltc.compiler.LocationPathPattern)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.LocationPathPattern com.sun.org.apache.xalan.internal.xsltc.compiler.Template getTemplate()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.LocationPathPattern com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type typeCheck(com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.LocationPathPattern double getDefaultPriority()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.LocationPathPattern java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.LocationPathPattern void translate(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.LogicalExpr int getOp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Mode boolean isAttributeName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Mode boolean isNamespaceName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Mode com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet getStylesheet()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Mode java.lang.String functionName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Mode java.lang.String getClassName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.NameBase com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.NamespaceAlias com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type typeCheck(com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.NamespaceAlias void translate(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Number boolean hasValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Number boolean inInnerClass()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Number boolean isDefault()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Number com.sun.org.apache.xalan.internal.xsltc.compiler.Closure getParentClosure()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Number java.lang.String getInnerClassName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Output boolean enabled()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Output java.lang.String getCdata()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Output java.lang.String getOutputMethod()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Output void disable()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Param com.sun.org.apache.bcel.internal.generic.Instruction setLoadInstruction(com.sun.org.apache.bcel.internal.generic.Instruction)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Param com.sun.org.apache.bcel.internal.generic.Instruction setStoreInstruction(com.sun.org.apache.bcel.internal.generic.Instruction)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.ParentLocationPath com.sun.org.apache.xalan.internal.xsltc.compiler.Expression getStep()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.ParentLocationPath com.sun.org.apache.xalan.internal.xsltc.compiler.RelativeLocationPath getPath()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.ParentPattern boolean isWildcard()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Parser Parser(com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Parser com.sun.org.apache.xalan.internal.xsltc.compiler.Output getOutput()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Parser com.sun.org.apache.xalan.internal.xsltc.compiler.QName getExcludeResultPrefixes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Parser com.sun.org.apache.xalan.internal.xsltc.compiler.QName getExtensionElementPrefixes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Parser com.sun.org.apache.xalan.internal.xsltc.compiler.QName getUseAttributeSets()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Parser com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet getCurrentStylesheet()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Parser com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet getTopLevelStylesheet()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Parser com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable getSymbolTable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Parser com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode getDocumentRoot()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Parser com.sun.org.apache.xalan.internal.xsltc.compiler.Template getTemplate()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Parser com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC getXSLTC()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Parser int getCurrentImportPrecedence()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Parser int getNextImportPrecedence()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Parser int getTemplateIndex()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Parser java.util.Vector getErrors()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Parser java.util.Vector getWarnings()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Parser void endDocument()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Parser void endPrefixMapping(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Parser void ignorableWhitespace(char[], int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Parser void setCurrentStylesheet(com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Parser void setDocumentLocator(org.xml.sax.Locator)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Parser void setPIParameters(java.lang.String, java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Parser void setTemplate(com.sun.org.apache.xalan.internal.xsltc.compiler.Template)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Parser void setXSLTC(com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Parser void skippedEntity(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.PositionCall boolean hasPositionCall()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Predicate boolean inInnerClass()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Predicate boolean isBooleanTest()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Predicate boolean isNthDescendant()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Predicate boolean isNthPositionFilter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Predicate com.sun.org.apache.xalan.internal.xsltc.compiler.Expression getExpr()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Predicate com.sun.org.apache.xalan.internal.xsltc.compiler.Step getStep()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Predicate java.lang.String getInnerClassName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Predicate void dontOptimize()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.ProcessingInstructionPattern boolean isWildcard()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.ProcessingInstructionPattern double getDefaultPriority()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.ProcessingInstructionPattern void reduceKernelPattern()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.QName boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.QName int hashCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.QName java.lang.String getLocalPart()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.QName java.lang.String getNamespace()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.QName java.lang.String getPrefix()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.QName java.lang.String getStringRep()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.QName java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.QName void clearNamespace()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.RealExpr com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type typeCheck(com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.SimpleAttributeValue boolean contextDependent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.SimpleAttributeValue com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type typeCheck(com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.SimpleAttributeValue java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Sort boolean inInnerClass()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Sort com.sun.org.apache.xalan.internal.xsltc.compiler.Closure getParentClosure()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Sort java.lang.String getInnerClassName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Sort void setInnerClassName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Sort void translate(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Step boolean isAbbreviatedDDot()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Step boolean isAbbreviatedDot()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Step boolean isPredicate()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Step int getAxis()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Step int getNodeType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Step java.util.Vector getPredicates()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Step void setAxis(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.StepPattern com.sun.org.apache.xalan.internal.xsltc.compiler.StepPattern getKernelPattern()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.StepPattern com.sun.org.apache.xalan.internal.xsltc.compiler.StepPattern setPredicates(java.util.Vector)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.StepPattern int getAxis()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.StepPattern int getNodeType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.StepPattern void reduceKernelPattern()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.StepPattern void setPriority(double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet boolean callsNodeset()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet boolean getTemplateInlining()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet boolean isMultiDocument()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet boolean isSimplified()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet com.sun.org.apache.xalan.internal.xsltc.compiler.Output getLastOutputElement()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet com.sun.org.apache.xalan.internal.xsltc.compiler.SourceLoader getSourceLoader()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet getParentStylesheet()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet int getImportPrecedence()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet int getOutputMethod()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet java.lang.String getClassName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet java.lang.String getSystemId()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet java.util.Properties getOutputProperties()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet java.util.Vector getTemplates()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet void checkOutputMethod()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet void setCallsNodeset(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet void setHasIdCall(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet void setMultiDocument(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet void setOutputProperties(java.util.Properties)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet void setParentStylesheet(com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet void setSimplified()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet void setSourceLoader(com.sun.org.apache.xalan.internal.xsltc.compiler.SourceLoader)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet void setTemplateInlining(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable void setCurrentNode(com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode boolean contextDependent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode boolean isDummy()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode com.sun.org.apache.xalan.internal.xsltc.compiler.Parser getParser()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode com.sun.org.apache.xalan.internal.xsltc.compiler.QName getQName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet getStylesheet()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode getParent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode com.sun.org.apache.xalan.internal.xsltc.compiler.Template getTemplate()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode java.util.Hashtable getPrefixMapping()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode java.util.Vector getContents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode org.xml.sax.Attributes getAttributes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode void setAttributes(org.xml.sax.helpers.AttributesImpl)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode void setLineNumber(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode void setParent(com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode void setParser(com.sun.org.apache.xalan.internal.xsltc.compiler.Parser)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode void setPrefixMapping(java.util.Hashtable)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode void setQName(com.sun.org.apache.xalan.internal.xsltc.compiler.QName)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Template boolean disabled()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Template boolean isNamed()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Template boolean isSimpleNamedTemplate()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Template boolean isSimplified()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Template com.sun.org.apache.xalan.internal.xsltc.compiler.Pattern getPattern()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Template com.sun.org.apache.xalan.internal.xsltc.compiler.QName getModeName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Template com.sun.org.apache.xalan.internal.xsltc.compiler.QName getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Template com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet getStylesheet()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Template double getPriority()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Template int compareTo(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Template int getPosition()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Template java.util.Vector getParameters()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Template void disable()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Template void setName(com.sun.org.apache.xalan.internal.xsltc.compiler.QName)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Template void setSimplified()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.TestSeq TestSeq(java.util.Vector, com.sun.org.apache.xalan.internal.xsltc.compiler.Mode)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.TestSeq TestSeq(java.util.Vector, int, com.sun.org.apache.xalan.internal.xsltc.compiler.Mode)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.TestSeq com.sun.org.apache.bcel.internal.generic.InstructionList getInstructionList()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Text boolean canLoadAsArrayOffsetLength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Text boolean contextDependent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Text boolean isIgnore()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Text boolean isTextElement()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Text boolean isWhitespace(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Text java.lang.String getText()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Text void ignore()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.TopLevelElement java.util.Vector getDependencies()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.UnresolvedRef com.sun.org.apache.xalan.internal.xsltc.compiler.QName getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.UnresolvedRef java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.UnsupportedElement void setErrorMessage(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.UseAttributeSets com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type typeCheck(com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.VariableBase boolean isLocal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.VariableBase com.sun.org.apache.xalan.internal.xsltc.compiler.Expression getExpression()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.VariableBase com.sun.org.apache.xalan.internal.xsltc.compiler.QName getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.VariableBase com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.VariableBase java.lang.String getEscapedName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.VariableBase void disable()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.VariableRefBase boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.VariableRefBase com.sun.org.apache.xalan.internal.xsltc.compiler.VariableBase getVariable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.When boolean ignore()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.When com.sun.org.apache.xalan.internal.xsltc.compiler.Expression getTest()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Whitespace com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type typeCheck(com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Whitespace void translate(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Whitespace.WhitespaceRule int compareTo(com.sun.org.apache.xalan.internal.xsltc.compiler.Whitespace.WhitespaceRule)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Whitespace.WhitespaceRule int getAction()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Whitespace.WhitespaceRule int getPriority()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Whitespace.WhitespaceRule int getStrength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Whitespace.WhitespaceRule java.lang.String getElement()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.Whitespace.WhitespaceRule java.lang.String getNamespace()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.WithParam com.sun.org.apache.xalan.internal.xsltc.compiler.QName getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.WithParam java.lang.String getEscapedName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.WithParam void setDoParameterOptimization(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XPathLexer XPathLexer()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XPathLexer XPathLexer(java.io.Reader)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XPathLexer boolean isWhitespace(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XPathLexer char[] yy_double(char[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XPathLexer com.sun.java_cup.internal.runtime.Symbol newSymbol(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XPathLexer com.sun.java_cup.internal.runtime.Symbol newSymbol(int, java.lang.Double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XPathLexer com.sun.java_cup.internal.runtime.Symbol newSymbol(int, java.lang.Long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XPathLexer com.sun.java_cup.internal.runtime.Symbol newSymbol(int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XPathLexer int yylength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XPathLexer void initialize()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XPathLexer void yy_mark_end()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XPathLexer void yy_mark_start()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XPathLexer void yy_move_end()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XPathLexer void yy_to_mark()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XPathLexer void yybegin(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XPathParser boolean isElementAxis(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XPathParser int EOF_sym()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XPathParser int error_sym()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XPathParser int getLineNumber()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XPathParser int start_production()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XPathParser int start_state()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XPathParser short[][] action_table()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XPathParser short[][] production_table()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XPathParser short[][] reduce_table()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XPathParser void init_actions()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XPathParser void report_fatal_error(java.lang.String, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC boolean callsNodeset()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC boolean debug()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC boolean getTemplateInlining()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC boolean hasIdCall()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC boolean isMultiDocument()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC boolean isSecureProcessing()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC boolean useServicesMechnism()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC com.sun.org.apache.xalan.internal.xsltc.compiler.Parser getParser()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet getStylesheet()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC int nextAttributeSetSerial()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC int nextHelperClassSerial()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC int nextModeSerial()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC int nextStepPatternSerial()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC int nextStylesheetSerial()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC int[] getNumberFieldIndexes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC java.lang.Object getProperty(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC java.lang.String getClassName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC java.lang.String getJarFileName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC java.util.Map&lt;java.lang.String,java.lang.Class&gt; getExternalExtensionFunctions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC java.util.Vector getNamesIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC java.util.Vector getNamespaceIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC org.xml.sax.XMLReader getXMLReader()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC void setCallsNodeset(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC void setDebug(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC void setHasIdCall(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC void setMultiDocument(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC void setOutputType(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC void setSecureProcessing(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC void setServicesMechnism(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC void setSourceLoader(com.sun.org.apache.xalan.internal.xsltc.compiler.SourceLoader)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC void setStylesheet(com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC void setTemplateInlining(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC void setXMLReader(org.xml.sax.XMLReader)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XslAttribute com.sun.org.apache.xalan.internal.xsltc.compiler.AttributeValue getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.XslElement boolean declaresDefaultNS()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.sym sym()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
</root>
