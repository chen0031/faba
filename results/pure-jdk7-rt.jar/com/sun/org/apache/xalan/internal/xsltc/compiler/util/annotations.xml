<root>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType BooleanType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType boolean identicalTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType boolean isSimple()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType com.sun.org.apache.bcel.internal.generic.Type toJCType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType java.lang.String toSignature()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator boolean isExternal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator com.sun.org.apache.bcel.internal.generic.Instruction loadTranslet()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator com.sun.org.apache.xalan.internal.xsltc.compiler.Parser getParser()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet getStylesheet()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator java.lang.String getApplyTemplatesSig()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator java.lang.String getApplyTemplatesSigForImport()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator java.lang.String getClassName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator java.lang.String getDOMClass()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator java.lang.String getDOMClassSig()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.CompareGenerator com.sun.org.apache.bcel.internal.generic.Instruction loadCurrentNode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.CompareGenerator com.sun.org.apache.bcel.internal.generic.Instruction loadDOM()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.CompareGenerator com.sun.org.apache.bcel.internal.generic.Instruction loadIterator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.CompareGenerator com.sun.org.apache.bcel.internal.generic.Instruction loadLastNode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.CompareGenerator com.sun.org.apache.bcel.internal.generic.Instruction storeCurrentNode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.CompareGenerator com.sun.org.apache.bcel.internal.generic.Instruction storeIterator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.CompareGenerator int getHandlerIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.CompareGenerator int getIteratorIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages ErrorMessages()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages java.lang.Object[][] getContents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages_ca ErrorMessages_ca()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages_ca java.lang.Object[][] getContents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages_cs ErrorMessages_cs()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages_cs java.lang.Object[][] getContents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages_de ErrorMessages_de()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages_de java.lang.Object[][] getContents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages_es ErrorMessages_es()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages_es java.lang.Object[][] getContents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages_fr ErrorMessages_fr()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages_fr java.lang.Object[][] getContents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages_it ErrorMessages_it()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages_it java.lang.Object[][] getContents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages_ja ErrorMessages_ja()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages_ja java.lang.Object[][] getContents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages_ko ErrorMessages_ko()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages_ko java.lang.Object[][] getContents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages_pt_BR ErrorMessages_pt_BR()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages_pt_BR java.lang.Object[][] getContents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages_sk ErrorMessages_sk()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages_sk java.lang.Object[][] getContents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages_sv ErrorMessages_sv()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages_sv java.lang.Object[][] getContents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages_zh_CN ErrorMessages_zh_CN()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages_zh_CN java.lang.Object[][] getContents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages_zh_TW ErrorMessages_zh_TW()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages_zh_TW java.lang.Object[][] getContents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg ErrorMsg(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg ErrorMsg(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg ErrorMsg(java.lang.String, int, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg boolean isWarningError()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg java.lang.Throwable getCause()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg void setWarningError(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.FilterGenerator boolean isExternal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.FilterGenerator com.sun.org.apache.bcel.internal.generic.Instruction loadTranslet()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType IntType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType boolean identicalTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType com.sun.org.apache.bcel.internal.generic.Instruction ADD()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType com.sun.org.apache.bcel.internal.generic.Instruction DIV()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType com.sun.org.apache.bcel.internal.generic.Instruction MUL()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType com.sun.org.apache.bcel.internal.generic.Instruction NEG()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType com.sun.org.apache.bcel.internal.generic.Instruction REM()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType com.sun.org.apache.bcel.internal.generic.Instruction SUB()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType com.sun.org.apache.bcel.internal.generic.Type toJCType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType int distanceTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType java.lang.String toSignature()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.InternalError InternalError(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MarkerInstruction MarkerInstruction()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MarkerInstruction com.sun.org.apache.bcel.internal.generic.Instruction copy()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MarkerInstruction int consumeStack(com.sun.org.apache.bcel.internal.generic.ConstantPoolGen)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MarkerInstruction int produceStack(com.sun.org.apache.bcel.internal.generic.ConstantPoolGen)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MarkerInstruction void accept(com.sun.org.apache.bcel.internal.generic.Visitor)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MarkerInstruction void dump(java.io.DataOutputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MatchGenerator com.sun.org.apache.bcel.internal.generic.Instruction loadCurrentNode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MatchGenerator com.sun.org.apache.bcel.internal.generic.Instruction loadDOM()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MatchGenerator com.sun.org.apache.bcel.internal.generic.Instruction storeCurrentNode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MatchGenerator int getHandlerIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MatchGenerator int getIteratorIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MatchGenerator void setIteratorIndex(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction attribute()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction endDocument()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction endElement()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction loadDOM()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction loadHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction loadIterator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction namespace()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction nextNode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction reset()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction setStartNode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction startDocument()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction startElement()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction storeDOM()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction storeHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction storeIterator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction uniqueAttribute()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator.Chunk com.sun.org.apache.bcel.internal.generic.InstructionHandle getChunkEnd()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator.Chunk com.sun.org.apache.bcel.internal.generic.InstructionHandle getChunkStart()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator.Chunk int getChunkSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodType MethodType(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodType com.sun.org.apache.bcel.internal.generic.Type toJCType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodType com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type resultType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodType java.util.Vector argsType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeCounterGenerator boolean isExternal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeCounterGenerator com.sun.org.apache.bcel.internal.generic.Instruction loadTranslet()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType NodeSetType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType boolean identicalTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType java.lang.String getClassName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType java.lang.String toSignature()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSortRecordFactGenerator boolean isExternal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSortRecordGenerator boolean isExternal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSortRecordGenerator com.sun.org.apache.bcel.internal.generic.Instruction loadTranslet()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType NodeType()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType NodeType(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType boolean identicalTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType com.sun.org.apache.bcel.internal.generic.Type toJCType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType int getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType int hashCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType java.lang.String getClassName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType java.lang.String toSignature()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NumberType NumberType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NumberType boolean isNumber()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NumberType boolean isSimple()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType boolean identicalTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType java.lang.Class getJavaClass()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType java.lang.String getJavaClassName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.OutlineableChunkEnd OutlineableChunkEnd()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.OutlineableChunkStart OutlineableChunkStart()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType RealType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType boolean identicalTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType com.sun.org.apache.bcel.internal.generic.Instruction ADD()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType com.sun.org.apache.bcel.internal.generic.Instruction CMP(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType com.sun.org.apache.bcel.internal.generic.Instruction DIV()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType com.sun.org.apache.bcel.internal.generic.Instruction DUP()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType com.sun.org.apache.bcel.internal.generic.Instruction MUL()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType com.sun.org.apache.bcel.internal.generic.Instruction NEG()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType com.sun.org.apache.bcel.internal.generic.Instruction POP()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType com.sun.org.apache.bcel.internal.generic.Instruction REM()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType com.sun.org.apache.bcel.internal.generic.Instruction SUB()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType com.sun.org.apache.bcel.internal.generic.Type toJCType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType int distanceTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType java.lang.String toSignature()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType ReferenceType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType boolean identicalTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType com.sun.org.apache.bcel.internal.generic.Type toJCType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType java.lang.String toSignature()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType void translateBox(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType void translateUnBox(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType ResultTreeType()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType ResultTreeType(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType boolean identicalTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType boolean implementedAsMethod()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType java.lang.String getClassName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType java.lang.String getMethodName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType java.lang.String toSignature()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RtMethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction loadHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RtMethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction storeHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RtMethodGenerator int getIteratorIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RtMethodGenerator int getLocalIndex(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.SlotAllocator SlotAllocator()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType StringType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType boolean identicalTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType boolean isSimple()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType com.sun.org.apache.bcel.internal.generic.Type toJCType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType java.lang.String getClassName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType java.lang.String toSignature()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.TestGenerator com.sun.org.apache.bcel.internal.generic.Instruction loadContextNode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.TestGenerator com.sun.org.apache.bcel.internal.generic.Instruction loadCurrentNode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.TestGenerator com.sun.org.apache.bcel.internal.generic.Instruction loadDOM()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.TestGenerator com.sun.org.apache.bcel.internal.generic.Instruction loadIterator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.TestGenerator com.sun.org.apache.bcel.internal.generic.Instruction storeContextNode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.TestGenerator com.sun.org.apache.bcel.internal.generic.Instruction storeCurrentNode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.TestGenerator com.sun.org.apache.bcel.internal.generic.Instruction storeIterator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.TestGenerator int getHandlerIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.TestGenerator int getIteratorIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type Type()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type boolean implementedAsMethod()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type boolean isNumber()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type boolean isSimple()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type com.sun.org.apache.bcel.internal.generic.BranchInstruction GE(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type com.sun.org.apache.bcel.internal.generic.BranchInstruction GT(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type com.sun.org.apache.bcel.internal.generic.BranchInstruction LE(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type com.sun.org.apache.bcel.internal.generic.BranchInstruction LT(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type com.sun.org.apache.bcel.internal.generic.Instruction ADD()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type com.sun.org.apache.bcel.internal.generic.Instruction CMP(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type com.sun.org.apache.bcel.internal.generic.Instruction DIV()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type com.sun.org.apache.bcel.internal.generic.Instruction DUP()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type com.sun.org.apache.bcel.internal.generic.Instruction LOAD(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type com.sun.org.apache.bcel.internal.generic.Instruction MUL()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type com.sun.org.apache.bcel.internal.generic.Instruction NEG()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type com.sun.org.apache.bcel.internal.generic.Instruction POP()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type com.sun.org.apache.bcel.internal.generic.Instruction REM()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type com.sun.org.apache.bcel.internal.generic.Instruction STORE(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type com.sun.org.apache.bcel.internal.generic.Instruction SUB()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type int distanceTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type java.lang.String getClassName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.TypeCheckError TypeCheckError(com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.TypeCheckError TypeCheckError(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.TypeCheckError com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg getErrorMsg()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util Util()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util java.lang.String internalName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.VoidType VoidType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.VoidType boolean identicalTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.VoidType com.sun.org.apache.bcel.internal.generic.Instruction POP()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.VoidType com.sun.org.apache.bcel.internal.generic.Type toJCType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.VoidType java.lang.String toSignature()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.VoidType java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
</root>
