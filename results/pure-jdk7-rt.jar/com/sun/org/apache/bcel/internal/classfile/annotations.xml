<root>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags AccessFlags()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags AccessFlags(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags boolean isAbstract()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags boolean isFinal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags boolean isInterface()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags boolean isNative()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags boolean isPrivate()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags boolean isProtected()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags boolean isPublic()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags boolean isStatic()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags boolean isStrictfp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags boolean isSynchronized()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags boolean isTransient()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags boolean isVolatile()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags int getAccessFlags()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags int getModifiers()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags void isAbstract(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags void isFinal(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags void isInterface(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags void isNative(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags void isPrivate(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags void isProtected(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags void isPublic(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags void isStatic(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags void isStrictfp(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags void isSynchronized(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags void isTransient(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags void isVolatile(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags void setAccessFlags(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags void setFlag(int, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags void setModifiers(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Attribute Attribute(byte, int, int, com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Attribute byte getTag()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Attribute com.sun.org.apache.bcel.internal.classfile.ConstantPool getConstantPool()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Attribute int getLength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Attribute int getNameIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Attribute java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Attribute void setConstantPool(com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Attribute void setLength(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Attribute void setNameIndex(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ClassFormatException ClassFormatException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ClassFormatException ClassFormatException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Code Code(int, int, int, int, byte[], com.sun.org.apache.bcel.internal.classfile.CodeException[], com.sun.org.apache.bcel.internal.classfile.Attribute[], com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Code byte[] getCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Code com.sun.org.apache.bcel.internal.classfile.Attribute[] getAttributes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Code com.sun.org.apache.bcel.internal.classfile.CodeException[] getExceptionTable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Code com.sun.org.apache.bcel.internal.classfile.LineNumberTable getLineNumberTable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Code com.sun.org.apache.bcel.internal.classfile.LocalVariableTable getLocalVariableTable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Code int calculateLength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Code int getInternalLength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Code int getMaxLocals()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Code int getMaxStack()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Code void setAttributes(com.sun.org.apache.bcel.internal.classfile.Attribute[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Code void setCode(byte[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Code void setExceptionTable(com.sun.org.apache.bcel.internal.classfile.CodeException[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Code void setMaxLocals(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Code void setMaxStack(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.CodeException CodeException(com.sun.org.apache.bcel.internal.classfile.CodeException)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.CodeException CodeException(int, int, int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.CodeException int getCatchType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.CodeException int getEndPC()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.CodeException int getHandlerPC()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.CodeException int getStartPC()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.CodeException void setCatchType(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.CodeException void setEndPC(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.CodeException void setHandlerPC(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.CodeException void setStartPC(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Constant Constant(byte)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Constant byte getTag()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantCP ConstantCP(byte, int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantCP int getClassIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantCP int getNameAndTypeIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantCP void setClassIndex(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantCP void setNameAndTypeIndex(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantClass ConstantClass(com.sun.org.apache.bcel.internal.classfile.ConstantClass)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantClass ConstantClass(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantClass int getNameIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantClass void setNameIndex(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantDouble ConstantDouble(com.sun.org.apache.bcel.internal.classfile.ConstantDouble)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantDouble ConstantDouble(double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantDouble double getBytes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantDouble java.lang.Object getConstantValue(com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantDouble void setBytes(double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantFieldref ConstantFieldref(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantFloat ConstantFloat(com.sun.org.apache.bcel.internal.classfile.ConstantFloat)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantFloat ConstantFloat(float)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantFloat float getBytes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantFloat java.lang.Object getConstantValue(com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantFloat void setBytes(float)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantInteger ConstantInteger(com.sun.org.apache.bcel.internal.classfile.ConstantInteger)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantInteger ConstantInteger(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantInteger int getBytes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantInteger java.lang.Object getConstantValue(com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantInteger void setBytes(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantInterfaceMethodref ConstantInterfaceMethodref(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantLong ConstantLong(com.sun.org.apache.bcel.internal.classfile.ConstantLong)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantLong ConstantLong(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantLong java.lang.Object getConstantValue(com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantLong long getBytes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantLong void setBytes(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantMethodref ConstantMethodref(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantNameAndType ConstantNameAndType(com.sun.org.apache.bcel.internal.classfile.ConstantNameAndType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantNameAndType ConstantNameAndType(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantNameAndType int getNameIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantNameAndType int getSignatureIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantNameAndType void setNameIndex(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantNameAndType void setSignatureIndex(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantPool com.sun.org.apache.bcel.internal.classfile.Constant[] getConstantPool()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantPool int getLength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantPool void setConstantPool(com.sun.org.apache.bcel.internal.classfile.Constant[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantString ConstantString(com.sun.org.apache.bcel.internal.classfile.ConstantString)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantString ConstantString(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantString int getStringIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantString void setStringIndex(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantUtf8 ConstantUtf8(com.sun.org.apache.bcel.internal.classfile.ConstantUtf8)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantUtf8 ConstantUtf8(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantUtf8 java.lang.String getBytes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantUtf8 void setBytes(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantValue ConstantValue(int, int, int, com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantValue int getConstantValueIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantValue void setConstantValueIndex(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Deprecated Deprecated(int, int, byte[], com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Deprecated byte[] getBytes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Deprecated java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Deprecated void setBytes(byte[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor EmptyVisitor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitCode(com.sun.org.apache.bcel.internal.classfile.Code)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitCodeException(com.sun.org.apache.bcel.internal.classfile.CodeException)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitConstantClass(com.sun.org.apache.bcel.internal.classfile.ConstantClass)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitConstantDouble(com.sun.org.apache.bcel.internal.classfile.ConstantDouble)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitConstantFieldref(com.sun.org.apache.bcel.internal.classfile.ConstantFieldref)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitConstantFloat(com.sun.org.apache.bcel.internal.classfile.ConstantFloat)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitConstantInteger(com.sun.org.apache.bcel.internal.classfile.ConstantInteger)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitConstantInterfaceMethodref(com.sun.org.apache.bcel.internal.classfile.ConstantInterfaceMethodref)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitConstantLong(com.sun.org.apache.bcel.internal.classfile.ConstantLong)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitConstantMethodref(com.sun.org.apache.bcel.internal.classfile.ConstantMethodref)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitConstantNameAndType(com.sun.org.apache.bcel.internal.classfile.ConstantNameAndType)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitConstantPool(com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitConstantString(com.sun.org.apache.bcel.internal.classfile.ConstantString)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitConstantUtf8(com.sun.org.apache.bcel.internal.classfile.ConstantUtf8)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitConstantValue(com.sun.org.apache.bcel.internal.classfile.ConstantValue)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitDeprecated(com.sun.org.apache.bcel.internal.classfile.Deprecated)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitExceptionTable(com.sun.org.apache.bcel.internal.classfile.ExceptionTable)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitField(com.sun.org.apache.bcel.internal.classfile.Field)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitInnerClass(com.sun.org.apache.bcel.internal.classfile.InnerClass)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitInnerClasses(com.sun.org.apache.bcel.internal.classfile.InnerClasses)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitJavaClass(com.sun.org.apache.bcel.internal.classfile.JavaClass)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitLineNumber(com.sun.org.apache.bcel.internal.classfile.LineNumber)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitLineNumberTable(com.sun.org.apache.bcel.internal.classfile.LineNumberTable)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitLocalVariable(com.sun.org.apache.bcel.internal.classfile.LocalVariable)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitLocalVariableTable(com.sun.org.apache.bcel.internal.classfile.LocalVariableTable)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitLocalVariableTypeTable(com.sun.org.apache.bcel.internal.classfile.LocalVariableTypeTable)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitMethod(com.sun.org.apache.bcel.internal.classfile.Method)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitSignature(com.sun.org.apache.bcel.internal.classfile.Signature)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitSourceFile(com.sun.org.apache.bcel.internal.classfile.SourceFile)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitStackMap(com.sun.org.apache.bcel.internal.classfile.StackMap)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitStackMapEntry(com.sun.org.apache.bcel.internal.classfile.StackMapEntry)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitSynthetic(com.sun.org.apache.bcel.internal.classfile.Synthetic)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitUnknown(com.sun.org.apache.bcel.internal.classfile.Unknown)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ExceptionTable ExceptionTable(int, int, int[], com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ExceptionTable int getNumberOfExceptions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ExceptionTable int[] getExceptionIndexTable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ExceptionTable void setExceptionIndexTable(int[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Field Field(int, int, int, com.sun.org.apache.bcel.internal.classfile.Attribute[], com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Field com.sun.org.apache.bcel.internal.classfile.ConstantValue getConstantValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.FieldOrMethod FieldOrMethod()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.FieldOrMethod FieldOrMethod(int, int, int, com.sun.org.apache.bcel.internal.classfile.Attribute[], com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.FieldOrMethod com.sun.org.apache.bcel.internal.classfile.Attribute[] getAttributes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.FieldOrMethod com.sun.org.apache.bcel.internal.classfile.ConstantPool getConstantPool()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.FieldOrMethod int getNameIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.FieldOrMethod int getSignatureIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.FieldOrMethod void setAttributes(com.sun.org.apache.bcel.internal.classfile.Attribute[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.FieldOrMethod void setConstantPool(com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.FieldOrMethod void setNameIndex(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.FieldOrMethod void setSignatureIndex(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.InnerClass InnerClass(com.sun.org.apache.bcel.internal.classfile.InnerClass)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.InnerClass InnerClass(int, int, int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.InnerClass int getInnerAccessFlags()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.InnerClass int getInnerClassIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.InnerClass int getInnerNameIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.InnerClass int getOuterClassIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.InnerClass void setInnerAccessFlags(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.InnerClass void setInnerClassIndex(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.InnerClass void setInnerNameIndex(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.InnerClass void setOuterClassIndex(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.InnerClasses InnerClasses(int, int, com.sun.org.apache.bcel.internal.classfile.InnerClass[], com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.InnerClasses com.sun.org.apache.bcel.internal.classfile.InnerClass[] getInnerClasses()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.InnerClasses void setInnerClasses(com.sun.org.apache.bcel.internal.classfile.InnerClass[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass boolean isClass()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass boolean isSuper()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass byte getSource()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass com.sun.org.apache.bcel.internal.classfile.Attribute[] getAttributes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass com.sun.org.apache.bcel.internal.classfile.ConstantPool getConstantPool()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass com.sun.org.apache.bcel.internal.classfile.Field[] getFields()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass com.sun.org.apache.bcel.internal.classfile.Method[] getMethods()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass com.sun.org.apache.bcel.internal.util.Repository getRepository()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass int getClassNameIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass int getMajor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass int getMinor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass int getSuperclassNameIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass int[] getInterfaceIndices()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass java.lang.String getClassName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass java.lang.String getFileName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass java.lang.String getPackageName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass java.lang.String getSourceFileName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass java.lang.String getSuperclassName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass java.lang.String[] getInterfaceNames()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass void setAttributes(com.sun.org.apache.bcel.internal.classfile.Attribute[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass void setClassName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass void setClassNameIndex(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass void setConstantPool(com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass void setFields(com.sun.org.apache.bcel.internal.classfile.Field[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass void setFileName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass void setInterfaceNames(java.lang.String[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass void setInterfaces(int[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass void setMajor(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass void setMethods(com.sun.org.apache.bcel.internal.classfile.Method[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass void setMinor(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass void setRepository(com.sun.org.apache.bcel.internal.util.Repository)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass void setSourceFileName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass void setSuperclassName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass void setSuperclassNameIndex(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LineNumber LineNumber(com.sun.org.apache.bcel.internal.classfile.LineNumber)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LineNumber LineNumber(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LineNumber int getLineNumber()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LineNumber int getStartPC()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LineNumber void setLineNumber(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LineNumber void setStartPC(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LineNumberTable LineNumberTable(int, int, com.sun.org.apache.bcel.internal.classfile.LineNumber[], com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LineNumberTable com.sun.org.apache.bcel.internal.classfile.LineNumber[] getLineNumberTable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LineNumberTable int getSourceLine(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LineNumberTable int getTableLength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LineNumberTable void setLineNumberTable(com.sun.org.apache.bcel.internal.classfile.LineNumber[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariable LocalVariable(com.sun.org.apache.bcel.internal.classfile.LocalVariable)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariable LocalVariable(int, int, int, int, int, com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariable com.sun.org.apache.bcel.internal.classfile.ConstantPool getConstantPool()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariable int getIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariable int getLength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariable int getNameIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariable int getSignatureIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariable int getStartPC()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariable void setConstantPool(com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariable void setIndex(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariable void setLength(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariable void setNameIndex(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariable void setSignatureIndex(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariable void setStartPC(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariableTable LocalVariableTable(int, int, com.sun.org.apache.bcel.internal.classfile.LocalVariable[], com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariableTable com.sun.org.apache.bcel.internal.classfile.LocalVariable getLocalVariable(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariableTable com.sun.org.apache.bcel.internal.classfile.LocalVariable[] getLocalVariableTable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariableTable int getTableLength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariableTable void setLocalVariableTable(com.sun.org.apache.bcel.internal.classfile.LocalVariable[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariableTypeTable LocalVariableTypeTable(int, int, com.sun.org.apache.bcel.internal.classfile.LocalVariable[], com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariableTypeTable com.sun.org.apache.bcel.internal.classfile.LocalVariable getLocalVariable(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariableTypeTable com.sun.org.apache.bcel.internal.classfile.LocalVariable[] getLocalVariableTypeTable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariableTypeTable int getTableLength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariableTypeTable void setLocalVariableTable(com.sun.org.apache.bcel.internal.classfile.LocalVariable[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Method Method()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Method Method(int, int, int, com.sun.org.apache.bcel.internal.classfile.Attribute[], com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Method com.sun.org.apache.bcel.internal.classfile.Code getCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Method com.sun.org.apache.bcel.internal.classfile.ExceptionTable getExceptionTable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Method com.sun.org.apache.bcel.internal.classfile.LineNumberTable getLineNumberTable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Method com.sun.org.apache.bcel.internal.classfile.LocalVariableTable getLocalVariableTable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.PMGClass PMGClass(int, int, int, int, com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.PMGClass int getPMGClassIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.PMGClass int getPMGIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.PMGClass void setPMGClassIndex(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.PMGClass void setPMGIndex(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Signature Signature(int, int, int, com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Signature boolean identPart(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Signature boolean identStart(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Signature boolean isActualParameterList(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Signature boolean isFormalParameterList(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Signature int getSignatureIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Signature void setSignatureIndex(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Signature.MyByteArrayInputStream int mark()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Signature.MyByteArrayInputStream void reset(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Signature.MyByteArrayInputStream void unread()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.SourceFile SourceFile(int, int, int, com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.SourceFile int getSourceFileIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.SourceFile void setSourceFileIndex(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMap StackMap(int, int, com.sun.org.apache.bcel.internal.classfile.StackMapEntry[], com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMap com.sun.org.apache.bcel.internal.classfile.StackMapEntry[] getStackMap()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMap int getMapLength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMap void setStackMap(com.sun.org.apache.bcel.internal.classfile.StackMapEntry[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMapEntry StackMapEntry(int, int, com.sun.org.apache.bcel.internal.classfile.StackMapType[], int, com.sun.org.apache.bcel.internal.classfile.StackMapType[], com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMapEntry com.sun.org.apache.bcel.internal.classfile.ConstantPool getConstantPool()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMapEntry com.sun.org.apache.bcel.internal.classfile.StackMapType[] getTypesOfLocals()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMapEntry com.sun.org.apache.bcel.internal.classfile.StackMapType[] getTypesOfStackItems()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMapEntry int getByteCodeOffset()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMapEntry int getNumberOfLocals()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMapEntry int getNumberOfStackItems()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMapEntry void setByteCodeOffset(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMapEntry void setConstantPool(com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMapEntry void setNumberOfLocals(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMapEntry void setNumberOfStackItems(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMapEntry void setTypesOfLocals(com.sun.org.apache.bcel.internal.classfile.StackMapType[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMapEntry void setTypesOfStackItems(com.sun.org.apache.bcel.internal.classfile.StackMapType[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMapType boolean hasIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMapType byte getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMapType com.sun.org.apache.bcel.internal.classfile.ConstantPool getConstantPool()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMapType int getIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMapType void setConstantPool(com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMapType void setIndex(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Synthetic Synthetic(int, int, byte[], com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Synthetic byte[] getBytes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Synthetic void setBytes(byte[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Unknown byte[] getBytes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Unknown java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Unknown void setBytes(byte[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility Utility()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility boolean equals(byte[], byte[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility boolean isJavaIdentifierPart(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility boolean isSet(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility boolean is_digit(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility boolean is_space(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility int clearBit(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility int pow2(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility int setBit(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String classOrInterface(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility short byteToShort(byte)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility.JavaReader JavaReader(java.io.Reader)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility.JavaWriter JavaWriter(java.io.Writer)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
</root>
