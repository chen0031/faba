<root>
  <item name="com.sun.corba.se.impl.oa.poa.AOMEntry.CounterGuard com.sun.corba.se.spi.orbutil.fsm.Guard.Result evaluate(com.sun.corba.se.spi.orbutil.fsm.FSM, com.sun.corba.se.spi.orbutil.fsm.Input)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.ActiveObjectMap.Key Key(byte[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.ActiveObjectMap.Key boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.ActiveObjectMap.Key int hashCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.DelegateImpl org.omg.CORBA.ORB orb(org.omg.PortableServer.Servant)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.IdAssignmentPolicyImpl IdAssignmentPolicyImpl(org.omg.PortableServer.IdAssignmentPolicyValue)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.IdAssignmentPolicyImpl int policy_type()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.IdAssignmentPolicyImpl org.omg.CORBA.Policy copy()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.IdAssignmentPolicyImpl org.omg.PortableServer.IdAssignmentPolicyValue value()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.IdAssignmentPolicyImpl void destroy()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.IdUniquenessPolicyImpl IdUniquenessPolicyImpl(org.omg.PortableServer.IdUniquenessPolicyValue)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.IdUniquenessPolicyImpl int policy_type()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.IdUniquenessPolicyImpl org.omg.CORBA.Policy copy()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.IdUniquenessPolicyImpl org.omg.PortableServer.IdUniquenessPolicyValue value()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.IdUniquenessPolicyImpl void destroy()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.ImplicitActivationPolicyImpl ImplicitActivationPolicyImpl(org.omg.PortableServer.ImplicitActivationPolicyValue)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.ImplicitActivationPolicyImpl int policy_type()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.ImplicitActivationPolicyImpl org.omg.CORBA.Policy copy()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.ImplicitActivationPolicyImpl org.omg.PortableServer.ImplicitActivationPolicyValue value()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.ImplicitActivationPolicyImpl void destroy()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.LifespanPolicyImpl LifespanPolicyImpl(org.omg.PortableServer.LifespanPolicyValue)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.LifespanPolicyImpl int policy_type()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.LifespanPolicyImpl org.omg.CORBA.Policy copy()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.LifespanPolicyImpl org.omg.PortableServer.LifespanPolicyValue value()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.LifespanPolicyImpl void destroy()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.MultipleObjectMap com.sun.corba.se.impl.oa.poa.ActiveObjectMap.Key getKey(com.sun.corba.se.impl.oa.poa.AOMEntry)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POACurrent java.lang.String[] _ids()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POACurrent void throwNoContextIfNull(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAFactory com.sun.corba.se.impl.logging.POASystemException getWrapper()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAFactory com.sun.corba.se.spi.orb.ORB getORB()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAFactory int newPOAId()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAFactory int newPOAManagerId()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAFactory org.omg.PortableServer.portable.Delegate getDelegateImpl()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAImpl boolean getDebug()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAImpl int getPOAId()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAImpl org.omg.CORBA.Object getLocalServant(byte[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAImpl org.omg.PortableServer.IdAssignmentPolicy create_id_assignment_policy(org.omg.PortableServer.IdAssignmentPolicyValue)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAImpl org.omg.PortableServer.IdUniquenessPolicy create_id_uniqueness_policy(org.omg.PortableServer.IdUniquenessPolicyValue)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAImpl org.omg.PortableServer.ImplicitActivationPolicy create_implicit_activation_policy(org.omg.PortableServer.ImplicitActivationPolicyValue)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAImpl org.omg.PortableServer.LifespanPolicy create_lifespan_policy(org.omg.PortableServer.LifespanPolicyValue)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAImpl org.omg.PortableServer.RequestProcessingPolicy create_request_processing_policy(org.omg.PortableServer.RequestProcessingPolicyValue)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAImpl org.omg.PortableServer.ServantRetentionPolicy create_servant_retention_policy(org.omg.PortableServer.ServantRetentionPolicyValue)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAImpl org.omg.PortableServer.ThreadPolicy create_thread_policy(org.omg.PortableServer.ThreadPolicyValue)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAManagerImpl com.sun.corba.se.impl.oa.poa.POAFactory getFactory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAManagerImpl com.sun.corba.se.spi.protocol.PIHandler getPIHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAManagerImpl int getManagerId()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAManagerImpl org.omg.PortableServer.POAManagerPackage.State get_state()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAManagerImpl.POAManagerDeactivator POAManagerDeactivator(com.sun.corba.se.impl.oa.poa.POAManagerImpl, com.sun.corba.se.impl.oa.poa.POAManagerImpl, boolean, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAPolicyMediatorBase com.sun.corba.se.impl.oa.poa.Policies getPolicies()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAPolicyMediatorBase int getScid()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAPolicyMediatorBase int getServerId()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAPolicyMediatorBase_R void returnServant()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAPolicyMediatorFactory POAPolicyMediatorFactory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAPolicyMediatorImpl_NR_UDS byte[] servantToId(org.omg.PortableServer.Servant)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAPolicyMediatorImpl_NR_UDS org.omg.PortableServer.Servant deactivateObject(byte[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAPolicyMediatorImpl_NR_UDS org.omg.PortableServer.Servant getDefaultServant()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAPolicyMediatorImpl_NR_UDS org.omg.PortableServer.Servant idToServant(byte[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAPolicyMediatorImpl_NR_UDS org.omg.PortableServer.ServantManager getServantManager()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAPolicyMediatorImpl_NR_UDS void activateObject(byte[], org.omg.PortableServer.Servant)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAPolicyMediatorImpl_NR_UDS void clearAOM()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAPolicyMediatorImpl_NR_UDS void etherealizeAll()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAPolicyMediatorImpl_NR_UDS void returnServant()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAPolicyMediatorImpl_NR_UDS void setServantManager(org.omg.PortableServer.ServantManager)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAPolicyMediatorImpl_NR_USM byte[] servantToId(org.omg.PortableServer.Servant)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAPolicyMediatorImpl_NR_USM org.omg.PortableServer.Servant deactivateObject(byte[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAPolicyMediatorImpl_NR_USM org.omg.PortableServer.Servant getDefaultServant()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAPolicyMediatorImpl_NR_USM org.omg.PortableServer.Servant idToServant(byte[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAPolicyMediatorImpl_NR_USM org.omg.PortableServer.ServantManager getServantManager()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAPolicyMediatorImpl_NR_USM void activateObject(byte[], org.omg.PortableServer.Servant)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAPolicyMediatorImpl_NR_USM void clearAOM()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAPolicyMediatorImpl_NR_USM void etherealizeAll()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAPolicyMediatorImpl_NR_USM void setDefaultServant(org.omg.PortableServer.Servant)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAPolicyMediatorImpl_R_AOM org.omg.PortableServer.Servant getDefaultServant()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAPolicyMediatorImpl_R_AOM org.omg.PortableServer.ServantManager getServantManager()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAPolicyMediatorImpl_R_AOM void etherealizeAll()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAPolicyMediatorImpl_R_AOM void setDefaultServant(org.omg.PortableServer.Servant)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAPolicyMediatorImpl_R_AOM void setServantManager(org.omg.PortableServer.ServantManager)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAPolicyMediatorImpl_R_UDS org.omg.PortableServer.Servant getDefaultServant()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAPolicyMediatorImpl_R_UDS org.omg.PortableServer.ServantManager getServantManager()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAPolicyMediatorImpl_R_UDS void etherealizeAll()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAPolicyMediatorImpl_R_UDS void setServantManager(org.omg.PortableServer.ServantManager)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAPolicyMediatorImpl_R_USM org.omg.PortableServer.Servant getDefaultServant()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAPolicyMediatorImpl_R_USM org.omg.PortableServer.ServantManager getServantManager()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.POAPolicyMediatorImpl_R_USM void setDefaultServant(org.omg.PortableServer.Servant)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.Policies boolean isImplicitlyActivated()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.Policies boolean isMultipleIds()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.Policies boolean isOrbControlledThreads()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.Policies boolean isPersistent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.Policies boolean isSingleThreaded()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.Policies boolean isSystemAssignedIds()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.Policies boolean isTransient()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.Policies boolean isUniqueIds()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.Policies boolean isUserAssignedIds()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.Policies boolean retainServants()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.Policies boolean useActiveMapOnly()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.Policies boolean useDefaultServant()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.Policies boolean useServantManager()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.Policies int getPolicyValue(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.RequestProcessingPolicyImpl RequestProcessingPolicyImpl(org.omg.PortableServer.RequestProcessingPolicyValue)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.RequestProcessingPolicyImpl int policy_type()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.RequestProcessingPolicyImpl org.omg.CORBA.Policy copy()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.RequestProcessingPolicyImpl org.omg.PortableServer.RequestProcessingPolicyValue value()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.RequestProcessingPolicyImpl void destroy()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.ServantRetentionPolicyImpl ServantRetentionPolicyImpl(org.omg.PortableServer.ServantRetentionPolicyValue)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.ServantRetentionPolicyImpl int policy_type()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.ServantRetentionPolicyImpl org.omg.CORBA.Policy copy()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.ServantRetentionPolicyImpl org.omg.PortableServer.ServantRetentionPolicyValue value()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.ServantRetentionPolicyImpl void destroy()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.SingleObjectMap boolean hasMultipleIDs(com.sun.corba.se.impl.oa.poa.AOMEntry)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.ThreadPolicyImpl ThreadPolicyImpl(org.omg.PortableServer.ThreadPolicyValue)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.ThreadPolicyImpl int policy_type()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.ThreadPolicyImpl org.omg.CORBA.Policy copy()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.ThreadPolicyImpl org.omg.PortableServer.ThreadPolicyValue value()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.oa.poa.ThreadPolicyImpl void destroy()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
</root>
