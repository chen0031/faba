<root>
  <item name="com.sun.corba.se.impl.orb.AppletDataCollector boolean isApplet()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.DataCollectorBase boolean hasCORBAPrefix(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.DataCollectorBase java.util.Iterator makeIterator(java.util.Enumeration)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.DataCollectorBase java.util.Properties getProperties()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.DataCollectorBase void checkSetParserCalled()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.DataCollectorFactory DataCollectorFactory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.NormalDataCollector boolean isApplet()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.NormalParserAction NormalParserAction(java.lang.String, com.sun.corba.se.spi.orb.Operation, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.orb.NormalParserData NormalParserData(java.lang.String, com.sun.corba.se.spi.orb.Operation, java.lang.String, java.lang.Object, java.lang.Object, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBConfiguratorImpl ORBConfiguratorImpl()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl boolean acceptorSocketUseSelectThreadToWait()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl boolean acceptorSocketUseWorkerThreadForEvent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl boolean alwaysSendCodeSetServiceContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl boolean connectionSocketUseSelectThreadToWait()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl boolean connectionSocketUseWorkerThreadForEvent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl boolean disableDirectByteBufferUse()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl boolean getORBServerIdPropertySpecified()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl boolean getPersistentPortInitialized()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl boolean getPersistentServerIdInitialized()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl boolean getServerIsORBActivated()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl boolean isJavaSerializationEnabled()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl boolean isLocalOptimizationAllowed()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl boolean useByteOrderMarkers()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl boolean useByteOrderMarkersInEncapsulations()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl boolean useRepId()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl com.sun.corba.se.impl.encoding.CodeSetComponentInfo getCodeSetComponentInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl com.sun.corba.se.impl.legacy.connection.USLPort[] getUserSpecifiedListenPorts()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl com.sun.corba.se.pept.transport.Acceptor[] getAcceptors()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl com.sun.corba.se.spi.ior.iiop.GIOPVersion getGIOPVersion()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl com.sun.corba.se.spi.legacy.connection.ORBSocketFactory getLegacySocketFactory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl com.sun.corba.se.spi.orb.StringPair[] getORBInitialReferences()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl com.sun.corba.se.spi.transport.CorbaContactInfoListFactory getCorbaContactInfoListFactory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl com.sun.corba.se.spi.transport.IIOPPrimaryToContactInfo getIIOPPrimaryToContactInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl com.sun.corba.se.spi.transport.IORToSocketInfo getIORToSocketInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl com.sun.corba.se.spi.transport.ORBSocketFactory getSocketFactory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl com.sun.corba.se.spi.transport.ReadTimeouts getTransportTCPReadTimeouts()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl int getGIOPBufferSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl int getGIOPFragmentSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl int getHighWaterMark()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl int getLowWaterMark()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl int getNumberToReclaim()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl int getORBInitialPort()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl int getORBServerPort()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl java.lang.Class getBadServerIdHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl java.lang.String acceptorSocketType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl java.lang.String connectionSocketType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl java.lang.String getListenOnAllInterfaces()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl java.lang.String getORBDefaultInitialReference()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl java.lang.String getORBId()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl java.lang.String getORBInitialHost()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl java.lang.String getORBServerHost()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl java.lang.String[] getORBDebugFlags()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl org.omg.PortableInterceptor.ORBInitializer[] getORBInitializers()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl short getGIOPAddressDisposition()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl short getGIOPTargetAddressPreference()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBDataParserImpl void complete()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBImpl com.sun.corba.se.spi.orb.ORBData getORBData()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBImpl com.sun.corba.se.spi.protocol.PIHandler getPIHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton boolean alwaysSendCodeSetServiceContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton boolean isDuringDispatch()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton boolean isLocalHost(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton boolean isLocalServerId(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton boolean poll_next_response()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton boolean work_pending()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton com.sun.corba.se.impl.corba.TypeCodeImpl getTypeCodeForClass(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton com.sun.corba.se.impl.encoding.CodeSetComponentInfo getCodeSetComponentInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton com.sun.corba.se.pept.protocol.ClientInvocationInfo createOrIncrementInvocationInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton com.sun.corba.se.pept.protocol.ClientInvocationInfo getInvocationInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton com.sun.corba.se.pept.transport.ConnectionCache getConnectionCache(com.sun.corba.se.pept.transport.ContactInfo)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton com.sun.corba.se.pept.transport.Selector getSelector(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton com.sun.corba.se.pept.transport.TransportManager getTransportManager()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton com.sun.corba.se.spi.copyobject.CopierManager getCopierManager()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton com.sun.corba.se.spi.ior.IOR getFVDCodeBaseIOR()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton com.sun.corba.se.spi.legacy.connection.LegacyServerSocketEndPointInfo getServerEndpoint()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton com.sun.corba.se.spi.legacy.connection.LegacyServerSocketManager getLegacyServerSocketManager()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton com.sun.corba.se.spi.oa.OAInvocationInfo peekInvocationInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton com.sun.corba.se.spi.oa.OAInvocationInfo popInvocationInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton com.sun.corba.se.spi.orb.ORBVersion getORBVersion()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton com.sun.corba.se.spi.orb.Operation getURLOperation()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton com.sun.corba.se.spi.orbutil.threadpool.ThreadPoolManager getThreadPoolManager()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton com.sun.corba.se.spi.protocol.PIHandler getPIHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton com.sun.corba.se.spi.resolver.LocalResolver getLocalResolver()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton com.sun.corba.se.spi.resolver.Resolver getResolver()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton com.sun.corba.se.spi.servicecontext.ServiceContextRegistry getServiceContextRegistry()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton com.sun.corba.se.spi.transport.CorbaTransportManager getCorbaTransportManager()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton int getGIOPBuffMgrStrategy(com.sun.corba.se.spi.ior.iiop.GIOPVersion)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton int getGIOPFragmentSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton int getHighWaterMark()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton int getLowWaterMark()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton int getNumberToReclaim()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton int getORBInitialPort()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton int getORBServerPort()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton int getTransientServerId()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton java.lang.String getAppletHost()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton java.lang.String getORBInitialHost()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton java.lang.String getORBServerHost()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton java.lang.String object_to_string(org.omg.CORBA.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton java.net.URL getAppletCodeBase()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton java.rmi.Remote string_to_remote(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton org.omg.CORBA.Environment create_environment()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton org.omg.CORBA.NamedValue create_named_value(java.lang.String, org.omg.CORBA.Any, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton org.omg.CORBA.Object string_to_object(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton org.omg.CORBA.Policy create_policy(int, org.omg.CORBA.Any)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton org.omg.CORBA.Request get_next_response()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton org.omg.CORBA.portable.ValueFactory lookup_value_factory(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton org.omg.CORBA.portable.ValueFactory register_value_factory(java.lang.String, org.omg.CORBA.portable.ValueFactory)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton void checkShutdownState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton void connect(org.omg.CORBA.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton void destroy()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton void destroyConnections()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton void disconnect(org.omg.CORBA.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton void finishedDispatch()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton void handleBadServerId(com.sun.corba.se.spi.ior.ObjectKey)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton void initBadServerIdHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton void notifyORB()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton void perform_work()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton void pushInvocationInfo(com.sun.corba.se.spi.oa.OAInvocationInfo)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton void registerInitialReference(java.lang.String, com.sun.corba.se.spi.orbutil.closure.Closure)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton void releaseOrDecrementInvocationInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton void run()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton void send_multiple_requests_deferred(org.omg.CORBA.Request[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton void send_multiple_requests_oneway(org.omg.CORBA.Request[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton void setBadServerIdHandler(com.sun.corba.se.impl.oa.poa.BadServerIdHandler)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton void setClientDelegateFactory(com.sun.corba.se.spi.protocol.ClientDelegateFactory)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton void setCorbaContactInfoListFactory(com.sun.corba.se.spi.transport.CorbaContactInfoListFactory)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton void setINSDelegate(com.sun.corba.se.spi.protocol.CorbaServerRequestDispatcher)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton void setLocalResolver(com.sun.corba.se.spi.resolver.LocalResolver)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton void setORBVersion(com.sun.corba.se.spi.orb.ORBVersion)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton void setObjectKeyFactory(com.sun.corba.se.spi.ior.ObjectKeyFactory)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton void setPersistentServerId(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton void setResolver(com.sun.corba.se.spi.resolver.Resolver)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton void setThreadPoolManager(com.sun.corba.se.spi.orbutil.threadpool.ThreadPoolManager)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton void setTypeCodeForClass(java.lang.Class, com.sun.corba.se.impl.corba.TypeCodeImpl)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton void setURLOperation(com.sun.corba.se.spi.orb.Operation)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton void set_parameters(java.applet.Applet, java.util.Properties)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton void set_parameters(java.lang.String[], java.util.Properties)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton void set_parameters(java.util.Properties)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton void shutdown(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton void shutdownServants(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton void startingDispatch()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBSingleton void unregister_value_factory(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBVersionImpl ORBVersionImpl(byte)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBVersionImpl byte getORBType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ORBVersionImpl int hashCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserActionBase ParserActionBase(java.lang.String, boolean, com.sun.corba.se.spi.orb.Operation, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserActionBase boolean isPrefix()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserActionBase com.sun.corba.se.spi.orb.Operation getOperation()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserActionBase java.lang.String getFieldName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserActionBase java.lang.String getPropertyName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserActionFactory ParserActionFactory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserActionFactory com.sun.corba.se.impl.orb.ParserAction makeNormalAction(java.lang.String, com.sun.corba.se.spi.orb.Operation, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserDataBase ParserDataBase(java.lang.String, com.sun.corba.se.spi.orb.Operation, java.lang.String, java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserDataBase com.sun.corba.se.spi.orb.Operation getOperation()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserDataBase java.lang.Object getDefaultValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserDataBase java.lang.Object getTestValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserDataBase java.lang.String getFieldName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserDataBase java.lang.String getPropertyName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable com.sun.corba.se.impl.orb.ParserTable get()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable com.sun.corba.se.spi.orb.Operation makeADOperation()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable com.sun.corba.se.spi.orb.Operation makeAcceptorInstantiationOperation()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable com.sun.corba.se.spi.orb.Operation makeCSOperation()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable com.sun.corba.se.spi.orb.Operation makeContactInfoListFactoryOperation()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable com.sun.corba.se.spi.orb.Operation makeFSOperation()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable com.sun.corba.se.spi.orb.Operation makeGVOperation()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable com.sun.corba.se.spi.orb.Operation makeIIOPPrimaryToContactInfoOperation()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable com.sun.corba.se.spi.orb.Operation makeIORToSocketInfoOperation()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable com.sun.corba.se.spi.orb.Operation makeInitRefOperation()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable com.sun.corba.se.spi.orb.Operation makeLegacySocketFactoryOperation()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable com.sun.corba.se.spi.orb.Operation makeMapOperation(java.util.Map)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable com.sun.corba.se.spi.orb.Operation makeROIOperation()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable com.sun.corba.se.spi.orb.Operation makeSocketFactoryOperation()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable com.sun.corba.se.spi.orb.Operation makeTTCPRTOperation()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable com.sun.corba.se.spi.orb.Operation makeUSLOperation()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable com.sun.corba.se.spi.orb.ParserData[] getParserData()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestAcceptor1 TestAcceptor1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestAcceptor1 boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestAcceptor1 boolean initialize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestAcceptor1 boolean initialized()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestAcceptor1 boolean shouldRegisterAcceptEvent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestAcceptor1 boolean shouldUseSelectThreadForConnections()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestAcceptor1 boolean shouldUseWorkerThreadForConnections()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestAcceptor1 com.sun.corba.se.pept.encoding.InputObject createInputObject(com.sun.corba.se.pept.broker.Broker, com.sun.corba.se.pept.protocol.MessageMediator)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestAcceptor1 com.sun.corba.se.pept.encoding.OutputObject createOutputObject(com.sun.corba.se.pept.broker.Broker, com.sun.corba.se.pept.protocol.MessageMediator)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestAcceptor1 com.sun.corba.se.pept.protocol.MessageMediator createMessageMediator(com.sun.corba.se.pept.broker.Broker, com.sun.corba.se.pept.transport.Connection)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestAcceptor1 com.sun.corba.se.pept.protocol.MessageMediator finishCreatingMessageMediator(com.sun.corba.se.pept.broker.Broker, com.sun.corba.se.pept.transport.Connection, com.sun.corba.se.pept.protocol.MessageMediator)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestAcceptor1 com.sun.corba.se.pept.transport.EventHandler getEventHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestAcceptor1 com.sun.corba.se.pept.transport.InboundConnectionCache getConnectionCache()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestAcceptor1 java.lang.String getConnectionCacheType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestAcceptor1 void accept()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestAcceptor1 void close()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestAcceptor1 void setConnectionCache(com.sun.corba.se.pept.transport.InboundConnectionCache)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestAcceptor1 void setUseSelectThreadForConnections(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestAcceptor1 void setUseWorkerThreadForConnections(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestAcceptor2 TestAcceptor2()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestAcceptor2 boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestAcceptor2 boolean initialize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestAcceptor2 boolean initialized()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestAcceptor2 boolean shouldRegisterAcceptEvent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestAcceptor2 boolean shouldUseSelectThreadForConnections()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestAcceptor2 boolean shouldUseWorkerThreadForConnections()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestAcceptor2 com.sun.corba.se.pept.encoding.InputObject createInputObject(com.sun.corba.se.pept.broker.Broker, com.sun.corba.se.pept.protocol.MessageMediator)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestAcceptor2 com.sun.corba.se.pept.encoding.OutputObject createOutputObject(com.sun.corba.se.pept.broker.Broker, com.sun.corba.se.pept.protocol.MessageMediator)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestAcceptor2 com.sun.corba.se.pept.protocol.MessageMediator createMessageMediator(com.sun.corba.se.pept.broker.Broker, com.sun.corba.se.pept.transport.Connection)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestAcceptor2 com.sun.corba.se.pept.protocol.MessageMediator finishCreatingMessageMediator(com.sun.corba.se.pept.broker.Broker, com.sun.corba.se.pept.transport.Connection, com.sun.corba.se.pept.protocol.MessageMediator)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestAcceptor2 com.sun.corba.se.pept.transport.EventHandler getEventHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestAcceptor2 com.sun.corba.se.pept.transport.InboundConnectionCache getConnectionCache()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestAcceptor2 java.lang.String getConnectionCacheType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestAcceptor2 void accept()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestAcceptor2 void close()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestAcceptor2 void setConnectionCache(com.sun.corba.se.pept.transport.InboundConnectionCache)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestAcceptor2 void setUseSelectThreadForConnections(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestAcceptor2 void setUseWorkerThreadForConnections(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestBadServerIdHandler TestBadServerIdHandler(com.sun.corba.se.impl.orb.ParserTable)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestBadServerIdHandler boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestBadServerIdHandler void handle(com.sun.corba.se.spi.ior.ObjectKey)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestContactInfoListFactory TestContactInfoListFactory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestContactInfoListFactory boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestContactInfoListFactory com.sun.corba.se.spi.transport.CorbaContactInfoList create(com.sun.corba.se.spi.ior.IOR)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestContactInfoListFactory void setORB(com.sun.corba.se.spi.orb.ORB)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestIIOPPrimaryToContactInfo TestIIOPPrimaryToContactInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestIIOPPrimaryToContactInfo boolean hasNext(com.sun.corba.se.pept.transport.ContactInfo, com.sun.corba.se.pept.transport.ContactInfo, java.util.List)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestIIOPPrimaryToContactInfo com.sun.corba.se.pept.transport.ContactInfo next(com.sun.corba.se.pept.transport.ContactInfo, com.sun.corba.se.pept.transport.ContactInfo, java.util.List)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestIIOPPrimaryToContactInfo void reset(com.sun.corba.se.pept.transport.ContactInfo)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestIORToSocketInfo TestIORToSocketInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestIORToSocketInfo boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestIORToSocketInfo java.util.List getSocketInfo(com.sun.corba.se.spi.ior.IOR)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestLegacyORBSocketFactory TestLegacyORBSocketFactory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestLegacyORBSocketFactory boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestLegacyORBSocketFactory com.sun.corba.se.spi.transport.SocketInfo getEndPointInfo(org.omg.CORBA.ORB, com.sun.corba.se.spi.ior.IOR, com.sun.corba.se.spi.transport.SocketInfo)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestLegacyORBSocketFactory java.net.ServerSocket createServerSocket(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestLegacyORBSocketFactory java.net.Socket createSocket(com.sun.corba.se.spi.transport.SocketInfo)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestORBInitializer1 TestORBInitializer1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestORBInitializer1 boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestORBInitializer1 void post_init(org.omg.PortableInterceptor.ORBInitInfo)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestORBInitializer1 void pre_init(org.omg.PortableInterceptor.ORBInitInfo)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestORBInitializer2 TestORBInitializer2()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestORBInitializer2 boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestORBInitializer2 void post_init(org.omg.PortableInterceptor.ORBInitInfo)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestORBInitializer2 void pre_init(org.omg.PortableInterceptor.ORBInitInfo)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestORBSocketFactory TestORBSocketFactory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestORBSocketFactory boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestORBSocketFactory java.net.ServerSocket createServerSocket(java.lang.String, java.net.InetSocketAddress)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestORBSocketFactory java.net.Socket createSocket(java.lang.String, java.net.InetSocketAddress)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestORBSocketFactory void setAcceptedSocketOptions(com.sun.corba.se.pept.transport.Acceptor, java.net.ServerSocket, java.net.Socket)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.ParserTable.TestORBSocketFactory void setORB(com.sun.corba.se.spi.orb.ORB)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.PrefixParserData PrefixParserData(java.lang.String, com.sun.corba.se.spi.orb.Operation, java.lang.String, java.lang.Object, java.lang.Object, com.sun.corba.se.spi.orb.StringPair[], java.lang.Class)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.orb.PropertyCallback PropertyCallback()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.PropertyOnlyDataCollector boolean isApplet()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.SynchVariable SynchVariable()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.orb.SynchVariable boolean value()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orb.SynchVariable void reset()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.orb.SynchVariable void set()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
</root>
