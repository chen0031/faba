<root>
  <item name="com.sun.corba.se.impl.io.FVDCodeBaseImpl com.sun.org.omg.CORBA.Repository get_ir()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.FVDCodeBaseImpl void setValueHandler(javax.rmi.CORBA.ValueHandler)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream boolean enableResolveObjectDelegate(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream boolean mustUseRemoteValueMembers()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream byte getStreamFormatVersion()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream com.sun.org.omg.SendingContext.CodeBase getSender()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream int available()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream int decreaseRecursionDepth()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream java.lang.Class resolveClass(com.sun.corba.se.impl.io.ObjectStreamClass)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream java.lang.Object resolveObject(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream java.lang.String readLine()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream javax.rmi.CORBA.ValueHandler getValueHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream org.omg.CORBA_2_3.portable.InputStream getOrbStream()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream void close()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream void increaseRecursionDepth()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream void readStreamHeader()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream void registerValidation(java.io.ObjectInputValidation, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream void setOrbStream(org.omg.CORBA_2_3.portable.InputStream)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream void setSender(com.sun.org.omg.SendingContext.CodeBase)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream void setTestFVDFlag(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream void setValueHandler(javax.rmi.CORBA.ValueHandler)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPOutputStream boolean checkSpecialClasses(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPOutputStream boolean enableReplaceObjectDelegate(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPOutputStream com.sun.corba.se.impl.io.ObjectStreamField[] getFieldsNoCopy()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPOutputStream int decreaseRecursionDepth()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPOutputStream java.lang.Object replaceObject(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPOutputStream org.omg.CORBA_2_3.portable.OutputStream getOrbStream()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPOutputStream void annotateClass(java.lang.Class&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPOutputStream void close()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPOutputStream void drain()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPOutputStream void increaseRecursionDepth()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPOutputStream void setOrbStream(org.omg.CORBA_2_3.portable.OutputStream)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPOutputStream void writeStreamHeader()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook void setState(com.sun.corba.se.impl.io.InputStreamHook.ReadObjectState)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.DefaultState DefaultState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.HookGetFields HookGetFields(com.sun.corba.se.impl.io.InputStreamHook, java.util.Map)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.HookGetFields java.io.ObjectStreamClass getObjectStreamClass()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.InReadObjectDefaultsSentState InReadObjectDefaultsSentState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.InReadObjectNoMoreOptionalDataState InReadObjectNoMoreOptionalDataState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.InReadObjectOptionalDataState InReadObjectOptionalDataState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.InReadObjectOptionalDataState void beginDefaultReadObject(com.sun.corba.se.impl.io.InputStreamHook)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.InReadObjectPastDefaultsRemoteDidNotUseWOState InReadObjectPastDefaultsRemoteDidNotUseWOState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.InReadObjectPastDefaultsRemoteDidNotUseWOState void beginDefaultReadObject(com.sun.corba.se.impl.io.InputStreamHook)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.InReadObjectRemoteDidNotUseWriteObjectState InReadObjectRemoteDidNotUseWriteObjectState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.NoReadObjectDefaultsSentState NoReadObjectDefaultsSentState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.ReadObjectState ReadObjectState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.ReadObjectState void beginDefaultReadObject(com.sun.corba.se.impl.io.InputStreamHook)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.ReadObjectState void beginUnmarshalCustomValue(com.sun.corba.se.impl.io.InputStreamHook, boolean, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.ReadObjectState void endDefaultReadObject(com.sun.corba.se.impl.io.InputStreamHook)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.ReadObjectState void endUnmarshalCustomValue(com.sun.corba.se.impl.io.InputStreamHook)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.ReadObjectState void readData(com.sun.corba.se.impl.io.InputStreamHook)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass ObjectStreamClass(java.lang.String, long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass boolean hasExternalizableBlockDataMode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass boolean hasReadObject()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass boolean hasWriteObject()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass boolean isExternalizable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass boolean isNonSerializable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass boolean isSerializable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass com.sun.corba.se.impl.io.ObjectStreamClass getSuperclass()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass com.sun.corba.se.impl.io.ObjectStreamClass localClassDescriptor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass com.sun.corba.se.impl.io.ObjectStreamField[] getFields()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass com.sun.corba.se.impl.io.ObjectStreamField[] getFieldsNoCopy()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass java.lang.Class&lt;?&gt; forClass()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass java.lang.String getRMIIIOPOptionalDataRepId()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass long getActualSerialVersionUID()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass long getSerialVersionUID()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass void setSuperclass(com.sun.corba.se.impl.io.ObjectStreamClass)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass.CompareClassByName CompareClassByName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass.CompareMemberByName CompareMemberByName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass.CompareObjStrFieldsByName CompareObjStrFieldsByName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass.MethodSignature boolean isConstructor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass.ObjectStreamClassEntry ObjectStreamClassEntry(com.sun.corba.se.impl.io.ObjectStreamClass)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass.ObjectStreamClassEntry java.lang.Object get()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClassCorbaExt ObjectStreamClassCorbaExt()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClassCorbaExt boolean isAny(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamField ObjectStreamField()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamField boolean isPrimitive()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamField char getTypeCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamField int compareTo(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamField java.lang.Class getClazz()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamField java.lang.Class getType()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamField java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamField java.lang.String getSignature()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamField java.lang.String getTypeString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamField java.lang.reflect.Field getField()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamField long getFieldID()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.OptionalDataException OptionalDataException(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.io.OptionalDataException OptionalDataException(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook byte getStreamFormatVersion()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook void setState(com.sun.corba.se.impl.io.OutputStreamHook.WriteObjectState)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook.DefaultState DefaultState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook.InWriteObjectState InWriteObjectState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook.InWriteObjectState void enterWriteObject(com.sun.corba.se.impl.io.OutputStreamHook)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook.WriteObjectState WriteObjectState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook.WriteObjectState void defaultWriteObject(com.sun.corba.se.impl.io.OutputStreamHook)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook.WriteObjectState void enterWriteObject(com.sun.corba.se.impl.io.OutputStreamHook)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook.WriteObjectState void exitWriteObject(com.sun.corba.se.impl.io.OutputStreamHook)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook.WriteObjectState void writeData(com.sun.corba.se.impl.io.OutputStreamHook)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook.WroteCustomDataState WroteCustomDataState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook.WroteCustomDataState void defaultWriteObject(com.sun.corba.se.impl.io.OutputStreamHook)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook.WroteCustomDataState void writeData(com.sun.corba.se.impl.io.OutputStreamHook)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook.WroteDefaultDataState WroteDefaultDataState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook.WroteDefaultDataState void defaultWriteObject(com.sun.corba.se.impl.io.OutputStreamHook)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.TypeMismatchException TypeMismatchException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.io.TypeMismatchException TypeMismatchException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl byte getMaximumStreamFormatVersion()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl java.lang.String getInputStreamClassName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl java.lang.String getOutputStreamClassName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl org.omg.CORBA.TCKind getJavaCharTCKind()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueUtility ValueUtility()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueUtility boolean exists(java.lang.String, java.lang.String[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueUtility.IdentityKeyValueStack IdentityKeyValueStack()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueUtility.IdentityKeyValueStack.KeyValuePair KeyValuePair(java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueUtility.IdentityKeyValueStack.KeyValuePair boolean equals(com.sun.corba.se.impl.io.ValueUtility.IdentityKeyValueStack.KeyValuePair)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
</root>
