<root>
  <item name="com.sun.corba.se.impl.transport.ByteBufferPoolImpl int activeCount()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.CorbaConnectionCacheBase java.lang.String getCacheType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.CorbaConnectionCacheBase java.lang.String getMonitoringName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.CorbaContactInfoBase CorbaContactInfoBase()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.CorbaContactInfoBase com.sun.corba.se.pept.broker.Broker getBroker()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.CorbaContactInfoBase com.sun.corba.se.pept.transport.ContactInfoList getContactInfoList()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.CorbaContactInfoBase com.sun.corba.se.pept.transport.OutboundConnectionCache getConnectionCache()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.CorbaContactInfoBase com.sun.corba.se.spi.ior.IOR getEffectiveTargetIOR()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.CorbaContactInfoBase java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.CorbaContactInfoBase short getAddressingDisposition()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.CorbaContactInfoBase void setAddressingDisposition(short)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.transport.CorbaContactInfoBase void setConnectionCache(com.sun.corba.se.pept.transport.OutboundConnectionCache)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.transport.CorbaContactInfoListImpl CorbaContactInfoListImpl(com.sun.corba.se.spi.orb.ORB)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.transport.CorbaContactInfoListImpl com.sun.corba.se.spi.ior.IOR getEffectiveTargetIOR()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.CorbaContactInfoListImpl com.sun.corba.se.spi.ior.IOR getTargetIOR()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.CorbaContactInfoListImpl com.sun.corba.se.spi.protocol.LocalClientRequestDispatcher getLocalClientRequestDispatcher()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.CorbaContactInfoListIteratorImpl com.sun.corba.se.pept.transport.ContactInfoList getContactInfoList()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.CorbaContactInfoListIteratorImpl void remove()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.CorbaContactInfoListIteratorImpl void reportSuccess(com.sun.corba.se.pept.transport.ContactInfo)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.transport.CorbaInboundConnectionCacheImpl java.lang.Object backingStore()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.CorbaInboundConnectionCacheImpl java.util.Collection values()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.CorbaOutboundConnectionCacheImpl java.lang.Object backingStore()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.CorbaResponseWaitingRoomImpl.OutCallDesc OutCallDesc()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.transport.CorbaTransportManagerImpl com.sun.corba.se.pept.transport.ByteBufferPool getByteBufferPool(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.CorbaTransportManagerImpl com.sun.corba.se.pept.transport.Selector getSelector(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.DefaultIORToSocketInfoImpl DefaultIORToSocketInfoImpl()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.DefaultIORToSocketInfoImpl com.sun.corba.se.spi.transport.SocketInfo createSocketInfo(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.DefaultSocketFactoryImpl DefaultSocketFactoryImpl()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.DefaultSocketFactoryImpl void setORB(com.sun.corba.se.spi.orb.ORB)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.transport.EventHandlerBase EventHandlerBase()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.EventHandlerBase boolean shouldUseSelectThreadToWait()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.EventHandlerBase boolean shouldUseWorkerThreadForEvent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.EventHandlerBase com.sun.corba.se.spi.orbutil.threadpool.Work getWork()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.EventHandlerBase java.nio.channels.SelectionKey getSelectionKey()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.EventHandlerBase void setSelectionKey(java.nio.channels.SelectionKey)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.transport.EventHandlerBase void setUseSelectThreadToWait(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.transport.EventHandlerBase void setUseWorkerThreadForEvent(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.transport.EventHandlerBase void setWork(com.sun.corba.se.spi.orbutil.threadpool.Work)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.transport.ListenerThreadImpl ListenerThreadImpl(com.sun.corba.se.spi.orb.ORB, com.sun.corba.se.pept.transport.Acceptor, com.sun.corba.se.pept.transport.Selector)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.transport.ListenerThreadImpl com.sun.corba.se.pept.transport.Acceptor getAcceptor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.ListenerThreadImpl java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.ListenerThreadImpl long getEnqueueTime()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.ListenerThreadImpl void setEnqueueTime(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.transport.ReadTCPTimeoutsImpl ReadTCPTimeoutsImpl(int, int, int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.transport.ReadTCPTimeoutsImpl double get_backoff_factor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.ReadTCPTimeoutsImpl int get_initial_time_to_wait()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.ReadTCPTimeoutsImpl int get_max_giop_header_time_to_wait()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.ReadTCPTimeoutsImpl int get_max_time_to_wait()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.ReaderThreadImpl ReaderThreadImpl(com.sun.corba.se.spi.orb.ORB, com.sun.corba.se.pept.transport.Connection, com.sun.corba.se.pept.transport.Selector)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.transport.ReaderThreadImpl com.sun.corba.se.pept.transport.Connection getConnection()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.ReaderThreadImpl java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.ReaderThreadImpl long getEnqueueTime()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.ReaderThreadImpl void setEnqueueTime(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.transport.SelectorImpl boolean isClosed()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SelectorImpl long getTimeout()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SelectorImpl void setClosed(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.transport.SelectorImpl void setTimeout(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.transport.SelectorImpl.SelectionKeyAndOp SelectionKeyAndOp(com.sun.corba.se.impl.transport.SelectorImpl, java.nio.channels.SelectionKey, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.transport.SharedCDRContactInfoImpl SharedCDRContactInfoImpl(com.sun.corba.se.spi.orb.ORB, com.sun.corba.se.spi.transport.CorbaContactInfoList, com.sun.corba.se.spi.ior.IOR, short)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.transport.SharedCDRContactInfoImpl boolean isConnectionBased()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SharedCDRContactInfoImpl boolean shouldCacheConnection()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SharedCDRContactInfoImpl java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelAcceptorImpl boolean initialized()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelAcceptorImpl boolean shouldRegisterAcceptEvent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelAcceptorImpl com.sun.corba.se.pept.transport.Acceptor getAcceptor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelAcceptorImpl com.sun.corba.se.pept.transport.Connection getConnection()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelAcceptorImpl com.sun.corba.se.pept.transport.EventHandler getEventHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelAcceptorImpl com.sun.corba.se.pept.transport.InboundConnectionCache getConnectionCache()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelAcceptorImpl int getInterestOps()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelAcceptorImpl int getLocatorPort()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelAcceptorImpl int getPort()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelAcceptorImpl java.lang.String getHost()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelAcceptorImpl java.lang.String getHostName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelAcceptorImpl java.lang.String getMonitoringName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelAcceptorImpl java.lang.String getObjectAdapterId()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelAcceptorImpl java.lang.String getObjectAdapterManagerId()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelAcceptorImpl java.lang.String getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelAcceptorImpl java.lang.String toStringName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelAcceptorImpl java.net.ServerSocket getServerSocket()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelAcceptorImpl java.nio.channels.SelectableChannel getChannel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelAcceptorImpl long getEnqueueTime()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelAcceptorImpl void setConnectionCache(com.sun.corba.se.pept.transport.InboundConnectionCache)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelAcceptorImpl void setEnqueueTime(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelAcceptorImpl void setLocatorPort(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl boolean isPostInitialContexts()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl boolean isServer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl boolean shouldReadGiopHeaderOnly()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl boolean shouldRegisterReadEvent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl boolean shouldRegisterServerReadEvent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl com.sun.corba.se.impl.encoding.CodeSetComponentInfo.CodeSetContext getCodeSetContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl com.sun.corba.se.pept.encoding.OutputObject createOutputObject(com.sun.corba.se.pept.protocol.MessageMediator)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl com.sun.corba.se.pept.protocol.MessageMediator clientReply_1_1_Get()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl com.sun.corba.se.pept.protocol.MessageMediator serverRequest_1_1_Get()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl com.sun.corba.se.pept.transport.Acceptor getAcceptor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl com.sun.corba.se.pept.transport.Connection getConnection()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl com.sun.corba.se.pept.transport.ConnectionCache getConnectionCache()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl com.sun.corba.se.pept.transport.ContactInfo getContactInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl com.sun.corba.se.pept.transport.EventHandler getEventHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl com.sun.corba.se.pept.transport.ResponseWaitingRoom getResponseWaitingRoom()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl com.sun.corba.se.spi.ior.IOR getCodeBaseIOR()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl com.sun.corba.se.spi.orb.ORB getBroker()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl com.sun.corba.se.spi.protocol.CorbaMessageMediator getPartialMessageMediator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl com.sun.org.omg.SendingContext.CodeBase getCodeBase()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl int getInterestOps()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl int getNextRequestId()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl java.lang.String getStateString(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl java.net.Socket getSocket()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl java.nio.channels.SelectableChannel getChannel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl java.nio.channels.SocketChannel getSocketChannel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl long getEnqueueTime()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl long getTimeStamp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl void clientReply_1_1_Put(com.sun.corba.se.pept.protocol.MessageMediator)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl void clientReply_1_1_Remove()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl void serverRequestProcessingBegins()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl void serverRequestProcessingEnds()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl void serverRequest_1_1_Put(com.sun.corba.se.pept.protocol.MessageMediator)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl void serverRequest_1_1_Remove()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl void setCodeBaseIOR(com.sun.corba.se.spi.ior.IOR)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl void setConnectionCache(com.sun.corba.se.pept.transport.ConnectionCache)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl void setEnqueueTime(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl void setPartialMessageMediator(com.sun.corba.se.spi.protocol.CorbaMessageMediator)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl void setPostInitialContexts()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl void setReadGiopHeaderOnly(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl void setReadTimeouts(com.sun.corba.se.spi.transport.ReadTimeouts)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelConnectionImpl void setTimeStamp(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelContactInfoImpl SocketOrChannelContactInfoImpl()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelContactInfoImpl SocketOrChannelContactInfoImpl(com.sun.corba.se.spi.orb.ORB, com.sun.corba.se.spi.transport.CorbaContactInfoList)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelContactInfoImpl SocketOrChannelContactInfoImpl(com.sun.corba.se.spi.orb.ORB, com.sun.corba.se.spi.transport.CorbaContactInfoList, com.sun.corba.se.spi.ior.IOR, short, java.lang.String, java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelContactInfoImpl SocketOrChannelContactInfoImpl(com.sun.corba.se.spi.orb.ORB, com.sun.corba.se.spi.transport.CorbaContactInfoList, java.lang.String, java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelContactInfoImpl boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelContactInfoImpl boolean isConnectionBased()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelContactInfoImpl boolean shouldCacheConnection()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelContactInfoImpl int getPort()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelContactInfoImpl java.lang.String getConnectionCacheType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelContactInfoImpl java.lang.String getHost()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelContactInfoImpl java.lang.String getMonitoringName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.transport.SocketOrChannelContactInfoImpl java.lang.String getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
</root>
