<root>
  <item name="sun.swing.AccumulativeRunnable AccumulativeRunnable()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.AccumulativeRunnable java.util.List&lt;T&gt; flush()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.BakedArrayList int hashCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.DefaultLayoutStyle DefaultLayoutStyle()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.DefaultLayoutStyle boolean isLabelAndNonlabel(javax.swing.JComponent, javax.swing.JComponent, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.DefaultLayoutStyle int flipDirection(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.DefaultLayoutStyle int getContainerGap(javax.swing.JComponent, int, java.awt.Container)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.DefaultLayoutStyle int getInset(java.awt.Insets, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.DefaultLayoutStyle javax.swing.LayoutStyle getInstance()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.DefaultLayoutStyle void checkPosition(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.DefaultLookup DefaultLookup()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.FilePane int getEditIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.FilePane int getViewType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.FilePane sun.swing.FilePane.Handler getMouseHandler()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.FilePane void resetEditIndex()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.FilePane void setEditIndex(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.FilePane.AlignableTableHeaderRenderer AlignableTableHeaderRenderer(sun.swing.FilePane, javax.swing.table.TableCellRenderer)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.FilePane.DetailsTableModel int getColumnCount()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.FilePane.DetailsTableModel sun.awt.shell.ShellFolderColumnInfo[] getColumns()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.FilePane.DetailsTableRowSorter.SorterModelWrapper SorterModelWrapper(sun.swing.FilePane.DetailsTableRowSorter)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.FilePane.DetailsTableRowSorter.SorterModelWrapper java.lang.Integer getIdentifier(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.FilePane.DirectoriesFirstComparatorWrapper DirectoriesFirstComparatorWrapper(sun.swing.FilePane, int, java.util.Comparator)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.FilePane.EditActionListener EditActionListener(sun.swing.FilePane)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.FilePane.Handler Handler(sun.swing.FilePane)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.ImageCache ImageCache(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.ImageCache void setMaxCount(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.ImageCache.Entry Entry(java.awt.GraphicsConfiguration, int, int, java.lang.Object[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.ImageCache.Entry java.awt.Image getImage()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.ImageCache.Entry void setImage(java.awt.Image)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper MenuItemLayoutHelper()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper boolean isColumnLayout()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper boolean isColumnLayout(boolean, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper boolean isLeftToRight()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper boolean isTopLevelMenu()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper boolean useCheckAndArrow()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper int getAfterCheckIconGap()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper int getGap()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper int getHorizontalAlignment()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper int getHorizontalTextPosition()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper int getLeadingGap()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper int getLeftTextExtraWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper int getMinTextOffset()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper int getVerticalAlignment()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper int getVerticalTextPosition()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper int max(int...)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper java.awt.Font getAccFont()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper java.awt.Font getFont()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper java.awt.FontMetrics getAccFontMetrics()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper java.awt.FontMetrics getFontMetrics()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper java.awt.Rectangle createMaxRect()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper java.awt.Rectangle getViewRect()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper java.lang.String getAccText()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper java.lang.String getText()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper javax.swing.Icon getArrowIcon()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper javax.swing.Icon getCheckIcon()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper javax.swing.Icon getIcon()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper javax.swing.JComponent getMenuItemParent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper javax.swing.JMenuItem getMenuItem()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper javax.swing.text.View getHtmlView()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper sun.swing.MenuItemLayoutHelper.ColumnAlignment getLTRColumnAlignment()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper sun.swing.MenuItemLayoutHelper.ColumnAlignment getRTLColumnAlignment()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper sun.swing.MenuItemLayoutHelper.LayoutResult createLayoutResult()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper sun.swing.MenuItemLayoutHelper.RectSize getAccSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper sun.swing.MenuItemLayoutHelper.RectSize getArrowSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper sun.swing.MenuItemLayoutHelper.RectSize getCheckSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper sun.swing.MenuItemLayoutHelper.RectSize getIconSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper sun.swing.MenuItemLayoutHelper.RectSize getLabelSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper sun.swing.MenuItemLayoutHelper.RectSize getTextSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void addMaxWidth(sun.swing.MenuItemLayoutHelper.RectSize, int, java.awt.Dimension)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="2"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void addWidth(int, int, java.awt.Dimension)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="2"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void alignRect(java.awt.Rectangle, int, int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="0"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void setAccFont(java.awt.Font)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void setAccFontMetrics(java.awt.FontMetrics)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void setAccSize(sun.swing.MenuItemLayoutHelper.RectSize)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void setAccText(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void setAfterCheckIconGap(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void setArrowIcon(javax.swing.Icon)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void setArrowSize(sun.swing.MenuItemLayoutHelper.RectSize)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void setCheckIcon(javax.swing.Icon)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void setCheckSize(sun.swing.MenuItemLayoutHelper.RectSize)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void setColumnLayout(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void setFont(java.awt.Font)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void setFontMetrics(java.awt.FontMetrics)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void setGap(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void setHorizontalAlignment(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void setHorizontalTextPosition(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void setHtmlView(javax.swing.text.View)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void setIcon(javax.swing.Icon)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void setIconSize(sun.swing.MenuItemLayoutHelper.RectSize)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void setLabelSize(sun.swing.MenuItemLayoutHelper.RectSize)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void setLeadingGap(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void setLeftToRight(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void setMenuItem(javax.swing.JMenuItem)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void setMenuItemParent(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void setMinTextOffset(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void setText(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void setTextSize(sun.swing.MenuItemLayoutHelper.RectSize)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void setTopLevelMenu(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void setUseCheckAndArrow(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void setVerticalAlignment(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void setVerticalTextPosition(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void setViewRect(java.awt.Rectangle)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.ColumnAlignment ColumnAlignment(int, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.ColumnAlignment int getAccAlignment()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.ColumnAlignment int getArrowAlignment()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.ColumnAlignment int getCheckAlignment()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.ColumnAlignment int getIconAlignment()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.ColumnAlignment int getTextAlignment()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.LayoutResult LayoutResult()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.LayoutResult LayoutResult(java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.LayoutResult java.awt.Rectangle getAccRect()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.LayoutResult java.awt.Rectangle getArrowRect()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.LayoutResult java.awt.Rectangle getCheckRect()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.LayoutResult java.awt.Rectangle getIconRect()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.LayoutResult java.awt.Rectangle getLabelRect()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.LayoutResult java.awt.Rectangle getTextRect()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.LayoutResult void setAccRect(java.awt.Rectangle)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.LayoutResult void setArrowRect(java.awt.Rectangle)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.LayoutResult void setCheckRect(java.awt.Rectangle)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.LayoutResult void setIconRect(java.awt.Rectangle)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.LayoutResult void setLabelRect(java.awt.Rectangle)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.LayoutResult void setTextRect(java.awt.Rectangle)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.RectSize RectSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.RectSize RectSize(int, int, int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.RectSize int getHeight()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.RectSize int getMaxWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.RectSize int getOrigWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.RectSize int getWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.RectSize void setHeight(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.RectSize void setMaxWidth(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.RectSize void setOrigWidth(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.RectSize void setWidth(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.PrintColorUIResource PrintColorUIResource(int, java.awt.Color)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.PrintColorUIResource java.awt.Color getPrintColor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.PrintingStatus PrintingStatus(java.awt.Component, java.awt.print.PrinterJob)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.PrintingStatus boolean isAborted()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.PrintingStatus java.awt.print.Printable createNotificationPrintable(java.awt.print.Printable)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.PrintingStatus sun.swing.PrintingStatus createPrintingStatus(java.awt.Component, java.awt.print.PrinterJob)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.PrintingStatus.NotificationPrintable NotificationPrintable(sun.swing.PrintingStatus, java.awt.print.Printable)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.StringUIClientPropertyKey StringUIClientPropertyKey(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.StringUIClientPropertyKey java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.SwingAccessor SwingAccessor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.SwingUtilities2 SwingUtilities2()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.SwingUtilities2 boolean isComplexLayout(char[], int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.SwingUtilities2 boolean isPrinting(java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.SwingUtilities2 java.lang.Object makeIcon(java.lang.Class&lt;?&gt;, java.lang.Class&lt;?&gt;, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.SwingUtilities2 sun.swing.SwingUtilities2.Section liesIn(java.awt.Rectangle, java.awt.Point, boolean, boolean, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.SwingUtilities2 sun.swing.SwingUtilities2.Section liesInHorizontal(java.awt.Rectangle, java.awt.Point, boolean, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.SwingUtilities2 sun.swing.SwingUtilities2.Section liesInVertical(java.awt.Rectangle, java.awt.Point, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.SwingUtilities2 void checkAccess(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.SwingUtilities2.Section Section(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.UIAction UIAction(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.UIAction boolean isEnabled(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.UIAction java.lang.Object getValue(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.UIAction java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.UIAction void addPropertyChangeListener(java.beans.PropertyChangeListener)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.UIAction void putValue(java.lang.String, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.UIAction void removePropertyChangeListener(java.beans.PropertyChangeListener)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.UIAction void setEnabled(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
</root>
