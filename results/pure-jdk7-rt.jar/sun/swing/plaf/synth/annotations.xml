<root>
  <item name="sun.swing.plaf.synth.DefaultSynthStyle DefaultSynthStyle()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.plaf.synth.DefaultSynthStyle DefaultSynthStyle(java.awt.Insets, boolean, sun.swing.plaf.synth.DefaultSynthStyle.StateInfo[], java.util.Map)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.plaf.synth.DefaultSynthStyle boolean isOpaque(javax.swing.plaf.synth.SynthContext)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.plaf.synth.DefaultSynthStyle java.util.Map getData()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.plaf.synth.DefaultSynthStyle javax.swing.plaf.synth.SynthGraphicsUtils getGraphicsUtils(javax.swing.plaf.synth.SynthContext)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.plaf.synth.DefaultSynthStyle javax.swing.plaf.synth.SynthPainter getPainter(javax.swing.plaf.synth.SynthContext)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.plaf.synth.DefaultSynthStyle sun.swing.plaf.synth.DefaultSynthStyle.StateInfo[] getStateInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.plaf.synth.DefaultSynthStyle void setData(java.util.Map)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.plaf.synth.DefaultSynthStyle void setFont(java.awt.Font)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.plaf.synth.DefaultSynthStyle void setGraphicsUtils(javax.swing.plaf.synth.SynthGraphicsUtils)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.plaf.synth.DefaultSynthStyle void setInsets(java.awt.Insets)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.plaf.synth.DefaultSynthStyle void setOpaque(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.plaf.synth.DefaultSynthStyle void setPainter(javax.swing.plaf.synth.SynthPainter)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.plaf.synth.DefaultSynthStyle void setStateInfo(sun.swing.plaf.synth.DefaultSynthStyle.StateInfo[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.plaf.synth.DefaultSynthStyle.StateInfo StateInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.plaf.synth.DefaultSynthStyle.StateInfo StateInfo(int, java.awt.Font, java.awt.Color[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.plaf.synth.DefaultSynthStyle.StateInfo int getComponentState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.plaf.synth.DefaultSynthStyle.StateInfo int getMatchCount(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.plaf.synth.DefaultSynthStyle.StateInfo java.awt.Color getColor(javax.swing.plaf.synth.ColorType)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.plaf.synth.DefaultSynthStyle.StateInfo java.awt.Color[] getColors()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.plaf.synth.DefaultSynthStyle.StateInfo java.awt.Font getFont()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.plaf.synth.DefaultSynthStyle.StateInfo java.util.Map getData()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.plaf.synth.DefaultSynthStyle.StateInfo void setColors(java.awt.Color[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.plaf.synth.DefaultSynthStyle.StateInfo void setComponentState(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.plaf.synth.DefaultSynthStyle.StateInfo void setData(java.util.Map)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.plaf.synth.DefaultSynthStyle.StateInfo void setFont(java.awt.Font)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.plaf.synth.Paint9Painter.PaintType PaintType(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.plaf.synth.StyleAssociation int getID()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.plaf.synth.StyleAssociation java.lang.String getText()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.plaf.synth.StyleAssociation javax.swing.plaf.synth.SynthStyle getStyle()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.plaf.synth.SynthFileChooserUI boolean isGlobPattern(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.plaf.synth.SynthFileChooserUI java.beans.PropertyChangeListener createPropertyChangeListener(javax.swing.JFileChooser)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.plaf.synth.SynthFileChooserUI javax.swing.Action getFileNameCompletionAction()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.plaf.synth.SynthFileChooserUI javax.swing.JButton getApproveButton(javax.swing.JFileChooser)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.plaf.synth.SynthFileChooserUI javax.swing.JButton getCancelButton(javax.swing.JFileChooser)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.plaf.synth.SynthFileChooserUI void clearIconCache()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.plaf.synth.SynthFileChooserUI void doAccessoryChanged(java.beans.PropertyChangeEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.plaf.synth.SynthFileChooserUI void doAncestorChanged(java.beans.PropertyChangeEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.plaf.synth.SynthFileChooserUI void doDirectoryChanged(java.beans.PropertyChangeEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.plaf.synth.SynthFileChooserUI void doFileSelectionModeChanged(java.beans.PropertyChangeEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.plaf.synth.SynthFileChooserUI void doSelectedFileChanged(java.beans.PropertyChangeEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.plaf.synth.SynthFileChooserUI void doSelectedFilesChanged(java.beans.PropertyChangeEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.plaf.synth.SynthFileChooserUI void installIcons(javax.swing.JFileChooser)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.plaf.synth.SynthFileChooserUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.plaf.synth.SynthFileChooserUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.plaf.synth.SynthFileChooserUI.GlobFilter GlobFilter(sun.swing.plaf.synth.SynthFileChooserUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.plaf.synth.SynthFileChooserUI.GlobFilter java.lang.String getDescription()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.plaf.synth.SynthFileChooserUI.SynthFCPropertyChangeListener SynthFCPropertyChangeListener(sun.swing.plaf.synth.SynthFileChooserUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.plaf.synth.SynthFileChooserUI.UIBorder UIBorder(sun.swing.plaf.synth.SynthFileChooserUI, java.awt.Insets)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.plaf.synth.SynthFileChooserUI.UIBorder boolean isBorderOpaque()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.plaf.synth.SynthFileChooserUIImpl javax.swing.Action getDirectoryComboBoxAction()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.plaf.synth.SynthFileChooserUIImpl javax.swing.JComponent getDirectoryComboBox()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.plaf.synth.SynthFileChooserUIImpl.ButtonAreaLayout ButtonAreaLayout()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.plaf.synth.SynthFileChooserUIImpl.ButtonAreaLayout void addLayoutComponent(java.lang.String, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.plaf.synth.SynthFileChooserUIImpl.ButtonAreaLayout void removeLayoutComponent(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.plaf.synth.SynthFileChooserUIImpl.DirectoryComboBoxModel int getDepth(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.plaf.synth.SynthFileChooserUIImpl.DirectoryComboBoxModel java.lang.Object getSelectedItem()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.plaf.synth.SynthFileChooserUIImpl.DirectoryComboBoxRenderer DirectoryComboBoxRenderer(sun.swing.plaf.synth.SynthFileChooserUIImpl, javax.swing.ListCellRenderer)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.plaf.synth.SynthFileChooserUIImpl.FilterComboBoxModel int getSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.plaf.synth.SynthFileChooserUIImpl.FilterComboBoxRenderer FilterComboBoxRenderer(sun.swing.plaf.synth.SynthFileChooserUIImpl, javax.swing.ListCellRenderer)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.plaf.synth.SynthFileChooserUIImpl.IndentIcon IndentIcon(sun.swing.plaf.synth.SynthFileChooserUIImpl)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.plaf.synth.SynthFileChooserUIImpl.SynthFileChooserUIAccessor SynthFileChooserUIAccessor(sun.swing.plaf.synth.SynthFileChooserUIImpl)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.swing.plaf.synth.SynthFileChooserUIImpl.SynthFileChooserUIAccessor javax.swing.JPanel createDetailsView()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.plaf.synth.SynthFileChooserUIImpl.SynthFileChooserUIAccessor javax.swing.JPanel createList()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.swing.plaf.synth.SynthIcon SynthIcon()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
</root>
