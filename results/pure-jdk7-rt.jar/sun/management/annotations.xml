<root>
  <item name="sun.management.Agent Agent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.AgentConfigurationError AgentConfigurationError(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.management.AgentConfigurationError java.lang.String getError()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.AgentConfigurationError java.lang.String[] getParams()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.ClassLoadingImpl ClassLoadingImpl(sun.management.VMManagement)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.management.CompilationImpl java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.CompilerThreadStat CompilerThreadStat(java.lang.String, long, long, sun.management.MethodInfo)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.management.CompilerThreadStat java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.CompilerThreadStat long getCompileTaskCount()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.CompilerThreadStat long getCompileTime()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.CompilerThreadStat sun.management.MethodInfo getLastCompiledMethodInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.ConnectorAddressLink ConnectorAddressLink()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.FileSystem FileSystem()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.FileSystemImpl FileSystemImpl()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.FileSystemImpl boolean supportsFileSecurity(java.io.File)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.Flag Flag(java.lang.String, java.lang.Object, boolean, boolean, com.sun.management.VMOption.Origin)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.management.Flag boolean isExternal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.Flag boolean isWriteable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.Flag java.lang.Object getValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.GarbageCollectionNotifInfoCompositeData GarbageCollectionNotifInfoCompositeData(com.sun.management.GarbageCollectionNotificationInfo)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.management.GarbageCollectionNotifInfoCompositeData com.sun.management.GarbageCollectionNotificationInfo getGarbageCollectionNotifInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.GarbageCollectorImpl GarbageCollectorImpl(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.management.GcInfoBuilder int getGcExtItemCount()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.GcInfoBuilder java.lang.String[] getPoolNames()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.GcInfoCompositeData GcInfoCompositeData(com.sun.management.GcInfo, sun.management.GcInfoBuilder, java.lang.Object[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.management.GcInfoCompositeData com.sun.management.GcInfo getGcInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.GcInfoCompositeData java.lang.String[] getBaseGcInfoItemNames()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.GcInfoCompositeData java.util.Map&lt;java.lang.String,java.lang.management.MemoryUsage&gt; cast(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.HotSpotDiagnostic HotSpotDiagnostic()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.HotspotClassLoading HotspotClassLoading(sun.management.VMManagement)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.management.HotspotCompilation int getCompilerThreadCount()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.HotspotInternal HotspotInternal()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.management.HotspotInternal void postDeregister()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.HotspotInternal void postRegister(java.lang.Boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.HotspotMemory HotspotMemory(sun.management.VMManagement)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.management.HotspotRuntime HotspotRuntime(sun.management.VMManagement)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.management.HotspotThread HotspotThread(sun.management.VMManagement)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.management.LazyCompositeData LazyCompositeData()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.LockDataConverter java.lang.management.LockInfo getLockInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.LockDataConverter java.lang.management.LockInfo[] getLockedSynchronizers()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.LockDataConverter void setLockInfo(java.lang.management.LockInfo)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.management.LockDataConverter void setLockedSynchronizers(java.lang.management.LockInfo[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.management.ManagementFactory ManagementFactory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.ManagementFactory java.lang.management.GarbageCollectorMXBean createGarbageCollector(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.ManagementFactory java.lang.management.MemoryManagerMXBean createMemoryManager(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.ManagementFactoryHelper ManagementFactoryHelper()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.ManagementFactoryHelper boolean isThreadRunningNative(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.ManagementFactoryHelper boolean isThreadSuspended(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.ManagementFactoryHelper java.lang.Thread.State toThreadState(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.ManagementFactoryHelper java.lang.management.BufferPoolMXBean createBufferPoolMXBean(sun.misc.JavaNioAccess.BufferPool)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.ManagementFactoryHelper java.lang.management.PlatformLoggingMXBean getPlatformLoggingMXBean()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.ManagementFactoryHelper.PlatformLoggingImpl PlatformLoggingImpl()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.MappedMXBeanType MappedMXBeanType()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.management.MappedMXBeanType boolean isBasicType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.MappedMXBeanType java.lang.Class getMappedTypeClass()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.MappedMXBeanType javax.management.openmbean.OpenType getOpenType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.MappedMXBeanType.ArrayMXBeanType ArrayMXBeanType()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.management.MappedMXBeanType.ArrayMXBeanType java.lang.reflect.Type getJavaType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.MappedMXBeanType.BasicMXBeanType BasicMXBeanType(java.lang.Class, javax.management.openmbean.OpenType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.management.MappedMXBeanType.BasicMXBeanType java.lang.Object toJavaTypeData(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.MappedMXBeanType.BasicMXBeanType java.lang.Object toOpenTypeData(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.MappedMXBeanType.BasicMXBeanType java.lang.reflect.Type getJavaType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.MappedMXBeanType.CompositeDataMXBeanType java.lang.reflect.Type getJavaType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.MappedMXBeanType.EnumMXBeanType EnumMXBeanType(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.management.MappedMXBeanType.EnumMXBeanType java.lang.Object toOpenTypeData(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.MappedMXBeanType.EnumMXBeanType java.lang.reflect.Type getJavaType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.MappedMXBeanType.GenericArrayMXBeanType java.lang.reflect.Type getJavaType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.MappedMXBeanType.InProgress boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.MappedMXBeanType.InProgress boolean isValue(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.MappedMXBeanType.InProgress int hashCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.MappedMXBeanType.InProgress java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.MappedMXBeanType.ListMXBeanType java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.MappedMXBeanType.ListMXBeanType java.lang.reflect.Type getJavaType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.MappedMXBeanType.MapMXBeanType java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.MappedMXBeanType.MapMXBeanType java.lang.reflect.Type getJavaType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.MemoryImpl MemoryImpl(sun.management.VMManagement)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.management.MemoryImpl int getObjectPendingFinalizationCount()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.MemoryImpl java.lang.String getNotifMsg(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.MemoryManagerImpl MemoryManagerImpl(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.management.MemoryManagerImpl boolean isValid()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.MemoryManagerImpl java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.MemoryManagerImpl javax.management.MBeanNotificationInfo[] getNotificationInfo()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.management.MemoryNotifInfoCompositeData MemoryNotifInfoCompositeData(java.lang.management.MemoryNotificationInfo)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.management.MemoryNotifInfoCompositeData java.lang.management.MemoryNotificationInfo getMemoryNotifInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.MemoryPoolImpl boolean isCollectionUsageThresholdSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.MemoryPoolImpl boolean isUsageThresholdSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.MemoryPoolImpl boolean isValid()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.MemoryPoolImpl java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.MemoryPoolImpl java.lang.management.MemoryType getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.MemoryPoolImpl.CollectionSensor CollectionSensor(sun.management.MemoryPoolImpl, sun.management.MemoryPoolImpl, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.management.MemoryPoolImpl.CollectionSensor void clearAction()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.MemoryPoolImpl.PoolSensor PoolSensor(sun.management.MemoryPoolImpl, sun.management.MemoryPoolImpl, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.management.MemoryPoolImpl.PoolSensor void clearAction()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.MemoryUsageCompositeData MemoryUsageCompositeData(java.lang.management.MemoryUsage)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.management.MemoryUsageCompositeData java.lang.management.MemoryUsage getMemoryUsage()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.MemoryUsageCompositeData javax.management.openmbean.CompositeType getMemoryUsageCompositeType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.MethodInfo MethodInfo(java.lang.String, long, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.management.MethodInfo int getCompileSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.MethodInfo java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.MethodInfo long getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.MonitorInfoCompositeData MonitorInfoCompositeData(java.lang.management.MonitorInfo)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.management.MonitorInfoCompositeData java.lang.management.MonitorInfo getMonitorInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.MonitorInfoCompositeData javax.management.openmbean.CompositeType getMonitorInfoCompositeType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.NotificationEmitterSupport NotificationEmitterSupport()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.management.NotificationEmitterSupport.ListenerInfo ListenerInfo(sun.management.NotificationEmitterSupport, javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.management.OperatingSystemImpl OperatingSystemImpl(sun.management.VMManagement)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.management.RuntimeImpl long getStartTime()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.Sensor Sensor(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.management.Sensor boolean isOn()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.Sensor java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.Sensor long getCount()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.StackTraceElementCompositeData StackTraceElementCompositeData(java.lang.StackTraceElement)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.management.StackTraceElementCompositeData java.lang.StackTraceElement getStackTraceElement()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.ThreadInfoCompositeData ThreadInfoCompositeData(java.lang.management.ThreadInfo)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.management.ThreadInfoCompositeData boolean isCurrentVersion()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.ThreadInfoCompositeData boolean isV5Attribute(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.ThreadInfoCompositeData java.lang.management.ThreadInfo getThreadInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.Util Util()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.VMManagementImpl VMManagementImpl()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.management.VMManagementImpl boolean isBootClassPathSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.VMManagementImpl boolean isCompilationTimeMonitoringSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.VMManagementImpl boolean isCurrentThreadCpuTimeSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.VMManagementImpl boolean isGcNotificationSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.VMManagementImpl boolean isObjectMonitorUsageSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.VMManagementImpl boolean isOtherThreadCpuTimeSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.VMManagementImpl boolean isSynchronizerUsageSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.VMManagementImpl boolean isThreadAllocatedMemorySupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.VMManagementImpl boolean isThreadContentionMonitoringSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.VMManagementImpl java.lang.String getManagementVersion()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.VMOptionCompositeData VMOptionCompositeData(com.sun.management.VMOption)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.management.VMOptionCompositeData com.sun.management.VMOption getVMOption()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.management.VMOptionCompositeData javax.management.openmbean.CompositeType getVMOptionCompositeType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
</root>
