<root>
  <item name="sun.applet.AppletClassLoader boolean getExceptionStatus()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.applet.AppletClassLoader java.net.URL getBaseURL()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.applet.AppletClassLoader sun.awt.AppContext getAppContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.applet.AppletClassLoader sun.awt.AppContext resetAppContext()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.applet.AppletClassLoader void disableRecursiveDirectoryRead()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.applet.AppletClassLoader void setCodebaseLookup(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.applet.AppletClassLoader void setExceptionStatus()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.applet.AppletEvent AppletEvent(java.lang.Object, int, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.applet.AppletEvent int getID()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.applet.AppletEvent java.lang.Object getArgument()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.applet.AppletEventMulticaster AppletEventMulticaster(sun.applet.AppletListener, sun.applet.AppletListener)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.applet.AppletEventMulticaster sun.applet.AppletListener add(sun.applet.AppletListener, sun.applet.AppletListener)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.applet.AppletEventMulticaster sun.applet.AppletListener addInternal(sun.applet.AppletListener, sun.applet.AppletListener)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.applet.AppletIOException AppletIOException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.applet.AppletIOException AppletIOException(java.lang.String, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.applet.AppletIllegalArgumentException AppletIllegalArgumentException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.applet.AppletImageRef AppletImageRef(java.net.URL)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.applet.AppletMessageHandler AppletMessageHandler(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.applet.AppletObjectInputStream java.lang.Class primitiveType(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.applet.AppletPanel boolean isActive()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.applet.AppletPanel boolean isJDK11Applet()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.applet.AppletPanel boolean isJDK12Applet()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.applet.AppletPanel boolean okToLoad()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.applet.AppletPanel int getAppletHeight()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.applet.AppletPanel int getAppletWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.applet.AppletPanel int readByte(byte)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.applet.AppletPanel int readShort(byte[], int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.applet.AppletPanel java.applet.Applet getApplet()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.applet.AppletPanel java.awt.Dimension minimumSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.applet.AppletPanel java.awt.Dimension preferredSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.applet.AppletPanel java.lang.Thread getAppletHandlerThread()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.applet.AppletPanel void addAppletListener(sun.applet.AppletListener)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.applet.AppletPanel void clearLoadAbortRequest()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.applet.AppletPanel void setLoadAbortRequest()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.applet.AppletPanel void setLoaderThread(java.lang.Thread)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.applet.AppletPanel void setupAppletAppContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.applet.AppletResourceLoader AppletResourceLoader()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.applet.AppletSecurityException AppletSecurityException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.applet.AppletViewer java.io.InputStream getStream(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.applet.AppletViewer java.util.Iterator getStreamKeys()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.applet.AppletViewer void appletEdit()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.applet.AppletViewer void setStream(java.lang.String, java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.applet.AppletViewer void showDocument(java.net.URL)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.applet.AppletViewer void showDocument(java.net.URL, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.applet.AppletViewer.1AppletEventListener 1AppletEventListener(sun.applet.AppletViewer, java.awt.Frame)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.applet.AppletViewer.UserActionListener UserActionListener(sun.applet.AppletViewer)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.applet.AppletViewerPanel java.net.URL getCodeBase()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.applet.AppletViewerPanel java.net.URL getDocumentBase()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.applet.Main Main()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.applet.Main.ParseException ParseException(sun.applet.Main, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.applet.StdAppletViewerFactory StdAppletViewerFactory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.applet.StdAppletViewerFactory boolean isStandalone()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.applet.TextFrame.1ActionEventListener 1ActionEventListener(sun.applet.TextFrame)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
</root>
