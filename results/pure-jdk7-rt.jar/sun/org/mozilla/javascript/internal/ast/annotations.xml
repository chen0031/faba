<root>
  <item name="sun.org.mozilla.javascript.internal.ast.ArrayComprehension ArrayComprehension()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ArrayComprehension ArrayComprehension(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ArrayComprehension ArrayComprehension(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ArrayComprehension int getFilterLp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ArrayComprehension int getFilterRp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ArrayComprehension int getIfPosition()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ArrayComprehension java.util.List&lt;sun.org.mozilla.javascript.internal.ast.ArrayComprehensionLoop&gt; getLoops()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ArrayComprehension sun.org.mozilla.javascript.internal.ast.AstNode getFilter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ArrayComprehension sun.org.mozilla.javascript.internal.ast.AstNode getResult()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ArrayComprehension void setFilterLp(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ArrayComprehension void setFilterRp(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ArrayComprehension void setIfPosition(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ArrayComprehensionLoop ArrayComprehensionLoop()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ArrayComprehensionLoop ArrayComprehensionLoop(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ArrayComprehensionLoop ArrayComprehensionLoop(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ArrayComprehensionLoop sun.org.mozilla.javascript.internal.ast.AstNode getBody()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ArrayComprehensionLoop void setBody(sun.org.mozilla.javascript.internal.ast.AstNode)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ArrayLiteral ArrayLiteral()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ArrayLiteral ArrayLiteral(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ArrayLiteral ArrayLiteral(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ArrayLiteral boolean isDestructuring()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ArrayLiteral int getDestructuringLength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ArrayLiteral int getSkipCount()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ArrayLiteral java.util.List&lt;sun.org.mozilla.javascript.internal.ast.AstNode&gt; getElements()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ArrayLiteral void setDestructuringLength(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ArrayLiteral void setIsDestructuring(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ArrayLiteral void setSkipCount(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Assignment Assignment()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Assignment Assignment(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Assignment Assignment(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.AstNode AstNode()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.AstNode AstNode(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.AstNode AstNode(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.AstNode int getLength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.AstNode int getPosition()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.AstNode sun.org.mozilla.javascript.internal.ast.AstNode getParent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.AstNode void assertNotNull(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.AstNode void setLength(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.AstNode void setPosition(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.AstNode void setRelative(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.AstNode.DebugPrintVisitor DebugPrintVisitor(java.lang.StringBuilder)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.AstNode.PositionComparator PositionComparator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.AstNode.PositionComparator int compare(sun.org.mozilla.javascript.internal.ast.AstNode, sun.org.mozilla.javascript.internal.ast.AstNode)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.AstRoot boolean isInStrictMode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.AstRoot java.util.SortedSet&lt;sun.org.mozilla.javascript.internal.ast.Comment&gt; getComments()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.AstRoot void setInStrictMode(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Block Block()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Block Block(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Block Block(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.BreakStatement BreakStatement()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.BreakStatement BreakStatement(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.BreakStatement BreakStatement(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.BreakStatement sun.org.mozilla.javascript.internal.ast.AstNode getBreakTarget()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.BreakStatement sun.org.mozilla.javascript.internal.ast.Name getBreakLabel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.CatchClause CatchClause()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.CatchClause CatchClause(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.CatchClause CatchClause(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.CatchClause int getIfPosition()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.CatchClause int getLp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.CatchClause int getRp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.CatchClause sun.org.mozilla.javascript.internal.ast.AstNode getCatchCondition()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.CatchClause sun.org.mozilla.javascript.internal.ast.Block getBody()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.CatchClause sun.org.mozilla.javascript.internal.ast.Name getVarName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.CatchClause void setIfPosition(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.CatchClause void setLp(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.CatchClause void setParens(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.CatchClause void setRp(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Comment Comment(int, int, sun.org.mozilla.javascript.internal.Token.CommentType, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Comment java.lang.String getValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Comment sun.org.mozilla.javascript.internal.Token.CommentType getCommentType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Comment void setCommentType(sun.org.mozilla.javascript.internal.Token.CommentType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ConditionalExpression ConditionalExpression()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ConditionalExpression ConditionalExpression(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ConditionalExpression ConditionalExpression(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ConditionalExpression int getColonPosition()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ConditionalExpression int getQuestionMarkPosition()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ConditionalExpression sun.org.mozilla.javascript.internal.ast.AstNode getFalseExpression()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ConditionalExpression sun.org.mozilla.javascript.internal.ast.AstNode getTestExpression()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ConditionalExpression sun.org.mozilla.javascript.internal.ast.AstNode getTrueExpression()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ConditionalExpression void setColonPosition(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ConditionalExpression void setQuestionMarkPosition(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ContinueStatement ContinueStatement()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ContinueStatement ContinueStatement(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ContinueStatement ContinueStatement(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ContinueStatement sun.org.mozilla.javascript.internal.ast.Loop getTarget()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ContinueStatement sun.org.mozilla.javascript.internal.ast.Name getLabel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.DoLoop DoLoop()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.DoLoop DoLoop(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.DoLoop DoLoop(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.DoLoop int getWhilePosition()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.DoLoop sun.org.mozilla.javascript.internal.ast.AstNode getCondition()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.DoLoop void setWhilePosition(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ElementGet ElementGet()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ElementGet ElementGet(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ElementGet ElementGet(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ElementGet int getLb()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ElementGet int getRb()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ElementGet sun.org.mozilla.javascript.internal.ast.AstNode getElement()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ElementGet sun.org.mozilla.javascript.internal.ast.AstNode getTarget()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ElementGet void setLb(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ElementGet void setParens(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ElementGet void setRb(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.EmptyExpression EmptyExpression()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.EmptyExpression EmptyExpression(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.EmptyExpression EmptyExpression(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ErrorCollector ErrorCollector()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ErrorCollector java.util.List&lt;sun.org.mozilla.javascript.internal.ast.ParseProblem&gt; getErrors()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ErrorCollector sun.org.mozilla.javascript.internal.EvaluatorException runtimeError(java.lang.String, java.lang.String, int, java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ErrorCollector void error(java.lang.String, java.lang.String, int, java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ErrorCollector void warning(java.lang.String, java.lang.String, int, java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ErrorNode ErrorNode()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ErrorNode ErrorNode(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ErrorNode ErrorNode(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ErrorNode java.lang.String getMessage()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ErrorNode java.lang.String toSource(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ErrorNode void setMessage(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ExpressionStatement ExpressionStatement()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ExpressionStatement ExpressionStatement(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ExpressionStatement sun.org.mozilla.javascript.internal.ast.AstNode getExpression()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ExpressionStatement void setHasResult()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ForInLoop ForInLoop()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ForInLoop ForInLoop(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ForInLoop ForInLoop(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ForInLoop boolean isForEach()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ForInLoop int getEachPosition()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ForInLoop int getInPosition()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ForInLoop sun.org.mozilla.javascript.internal.ast.AstNode getIteratedObject()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ForInLoop sun.org.mozilla.javascript.internal.ast.AstNode getIterator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ForInLoop void setEachPosition(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ForInLoop void setInPosition(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ForInLoop void setIsForEach(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ForLoop ForLoop()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ForLoop ForLoop(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ForLoop ForLoop(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ForLoop sun.org.mozilla.javascript.internal.ast.AstNode getCondition()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ForLoop sun.org.mozilla.javascript.internal.ast.AstNode getIncrement()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ForLoop sun.org.mozilla.javascript.internal.ast.AstNode getInitializer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.FunctionCall FunctionCall()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.FunctionCall FunctionCall(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.FunctionCall FunctionCall(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.FunctionCall int getLp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.FunctionCall int getRp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.FunctionCall java.util.List&lt;sun.org.mozilla.javascript.internal.ast.AstNode&gt; getArguments()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.FunctionCall sun.org.mozilla.javascript.internal.ast.AstNode getTarget()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.FunctionCall void setLp(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.FunctionCall void setParens(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.FunctionCall void setRp(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.FunctionNode boolean getIgnoreDynamicScope()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.FunctionNode boolean isExpressionClosure()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.FunctionNode boolean isGenerator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.FunctionNode boolean isGetter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.FunctionNode boolean isGetterOrSetter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.FunctionNode boolean isSetter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.FunctionNode boolean requiresActivation()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.FunctionNode int getFunctionType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.FunctionNode int getLp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.FunctionNode int getRp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.FunctionNode java.util.List&lt;sun.org.mozilla.javascript.internal.Node&gt; getResumptionPoints()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.FunctionNode java.util.List&lt;sun.org.mozilla.javascript.internal.ast.AstNode&gt; getParams()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.FunctionNode java.util.Map&lt;sun.org.mozilla.javascript.internal.Node,int[]&gt; getLiveLocals()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.FunctionNode sun.org.mozilla.javascript.internal.ast.AstNode getBody()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.FunctionNode sun.org.mozilla.javascript.internal.ast.AstNode getMemberExprNode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.FunctionNode sun.org.mozilla.javascript.internal.ast.Name getFunctionName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.FunctionNode void setFunctionIsGetter()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.FunctionNode void setFunctionIsSetter()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.FunctionNode void setFunctionType(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.FunctionNode void setIgnoreDynamicScope()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.FunctionNode void setIsExpressionClosure(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.FunctionNode void setIsGenerator()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.FunctionNode void setLp(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.FunctionNode void setParens(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.FunctionNode void setRequiresActivation()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.FunctionNode void setRp(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.FunctionNode.Form Form(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.IfStatement IfStatement()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.IfStatement IfStatement(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.IfStatement IfStatement(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.IfStatement int getElsePosition()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.IfStatement int getLp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.IfStatement int getRp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.IfStatement sun.org.mozilla.javascript.internal.ast.AstNode getCondition()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.IfStatement sun.org.mozilla.javascript.internal.ast.AstNode getElsePart()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.IfStatement sun.org.mozilla.javascript.internal.ast.AstNode getThenPart()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.IfStatement void setElsePosition(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.IfStatement void setLp(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.IfStatement void setParens(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.IfStatement void setRp(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.InfixExpression InfixExpression()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.InfixExpression InfixExpression(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.InfixExpression InfixExpression(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.InfixExpression int getOperatorPosition()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.InfixExpression sun.org.mozilla.javascript.internal.ast.AstNode getLeft()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.InfixExpression sun.org.mozilla.javascript.internal.ast.AstNode getRight()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.InfixExpression void setOperatorPosition(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Jump Jump()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Jump Jump(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.KeywordLiteral KeywordLiteral()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.KeywordLiteral KeywordLiteral(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.KeywordLiteral KeywordLiteral(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.KeywordLiteral boolean isBooleanLiteral()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Label Label()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Label Label(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Label Label(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Label java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.LabeledStatement LabeledStatement()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.LabeledStatement LabeledStatement(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.LabeledStatement LabeledStatement(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.LabeledStatement java.util.List&lt;sun.org.mozilla.javascript.internal.ast.Label&gt; getLabels()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.LabeledStatement sun.org.mozilla.javascript.internal.ast.AstNode getStatement()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.LetNode LetNode()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.LetNode LetNode(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.LetNode LetNode(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.LetNode int getLp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.LetNode int getRp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.LetNode sun.org.mozilla.javascript.internal.ast.AstNode getBody()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.LetNode sun.org.mozilla.javascript.internal.ast.VariableDeclaration getVariables()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.LetNode void setLp(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.LetNode void setParens(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.LetNode void setRp(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Loop Loop()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Loop Loop(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Loop Loop(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Loop int getLp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Loop int getRp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Loop sun.org.mozilla.javascript.internal.ast.AstNode getBody()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Loop void setLp(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Loop void setParens(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Loop void setRp(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Name Name()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Name Name(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Name Name(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Name int length()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Name java.lang.String getIdentifier()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Name sun.org.mozilla.javascript.internal.ast.Scope getScope()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Name void setScope(sun.org.mozilla.javascript.internal.ast.Scope)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.NewExpression NewExpression()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.NewExpression NewExpression(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.NewExpression NewExpression(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.NewExpression sun.org.mozilla.javascript.internal.ast.ObjectLiteral getInitializer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.NumberLiteral NumberLiteral()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.NumberLiteral NumberLiteral(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.NumberLiteral NumberLiteral(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.NumberLiteral double getNumber()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.NumberLiteral java.lang.String getValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.NumberLiteral void setNumber(double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ObjectLiteral ObjectLiteral()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ObjectLiteral ObjectLiteral(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ObjectLiteral ObjectLiteral(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ObjectLiteral boolean isDestructuring()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ObjectLiteral java.util.List&lt;sun.org.mozilla.javascript.internal.ast.ObjectProperty&gt; getElements()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ObjectLiteral void setIsDestructuring(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ObjectProperty ObjectProperty()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ObjectProperty ObjectProperty(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ObjectProperty ObjectProperty(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ObjectProperty boolean isGetter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ObjectProperty boolean isSetter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ObjectProperty void setIsGetter()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ObjectProperty void setIsSetter()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ParenthesizedExpression ParenthesizedExpression()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ParenthesizedExpression ParenthesizedExpression(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ParenthesizedExpression ParenthesizedExpression(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ParenthesizedExpression sun.org.mozilla.javascript.internal.ast.AstNode getExpression()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ParseProblem int getFileOffset()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ParseProblem int getLength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ParseProblem java.lang.String getMessage()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ParseProblem java.lang.String getSourceName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ParseProblem sun.org.mozilla.javascript.internal.ast.ParseProblem.Type getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ParseProblem void setFileOffset(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ParseProblem void setLength(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ParseProblem void setMessage(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ParseProblem void setSourceName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ParseProblem void setType(sun.org.mozilla.javascript.internal.ast.ParseProblem.Type)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ParseProblem.Type Type(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.PropertyGet PropertyGet()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.PropertyGet PropertyGet(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.PropertyGet PropertyGet(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.RegExpLiteral RegExpLiteral()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.RegExpLiteral RegExpLiteral(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.RegExpLiteral RegExpLiteral(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.RegExpLiteral java.lang.String getFlags()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.RegExpLiteral java.lang.String getValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.RegExpLiteral void setFlags(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ReturnStatement ReturnStatement()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ReturnStatement ReturnStatement(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ReturnStatement ReturnStatement(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ReturnStatement sun.org.mozilla.javascript.internal.ast.AstNode getReturnValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Scope Scope()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Scope Scope(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Scope Scope(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Scope java.util.List&lt;sun.org.mozilla.javascript.internal.ast.Scope&gt; getChildScopes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Scope java.util.Map&lt;java.lang.String,sun.org.mozilla.javascript.internal.ast.Symbol&gt; getSymbolTable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Scope sun.org.mozilla.javascript.internal.ast.Scope getParentScope()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Scope sun.org.mozilla.javascript.internal.ast.ScriptNode getTop()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Scope void clearParentScope()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Scope void setParentScope(sun.org.mozilla.javascript.internal.ast.Scope)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Scope void setSymbolTable(java.util.Map&lt;java.lang.String,sun.org.mozilla.javascript.internal.ast.Symbol&gt;)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Scope void setTop(sun.org.mozilla.javascript.internal.ast.ScriptNode)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ScriptNode int getBaseLineno()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ScriptNode int getEncodedSourceEnd()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ScriptNode int getEncodedSourceStart()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ScriptNode int getEndLineno()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ScriptNode int getParamCount()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ScriptNode java.lang.Object getCompilerData()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ScriptNode java.lang.String getEncodedSource()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ScriptNode java.lang.String getSourceName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ScriptNode java.util.List&lt;sun.org.mozilla.javascript.internal.ast.FunctionNode&gt; getFunctions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ScriptNode java.util.List&lt;sun.org.mozilla.javascript.internal.ast.Symbol&gt; getSymbols()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ScriptNode void setEncodedSource(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ScriptNode void setEncodedSourceBounds(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ScriptNode void setEncodedSourceEnd(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ScriptNode void setEncodedSourceStart(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ScriptNode void setSourceName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ScriptNode void setSymbols(java.util.List&lt;sun.org.mozilla.javascript.internal.ast.Symbol&gt;)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.StringLiteral StringLiteral()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.StringLiteral StringLiteral(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.StringLiteral StringLiteral(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.StringLiteral char getQuoteCharacter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.StringLiteral java.lang.String getValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.StringLiteral void setQuoteCharacter(char)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.SwitchCase SwitchCase()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.SwitchCase SwitchCase(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.SwitchCase SwitchCase(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.SwitchCase boolean isDefault()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.SwitchCase java.util.List&lt;sun.org.mozilla.javascript.internal.ast.AstNode&gt; getStatements()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.SwitchCase sun.org.mozilla.javascript.internal.ast.AstNode getExpression()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.SwitchStatement SwitchStatement()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.SwitchStatement SwitchStatement(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.SwitchStatement SwitchStatement(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.SwitchStatement int getLp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.SwitchStatement int getRp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.SwitchStatement java.util.List&lt;sun.org.mozilla.javascript.internal.ast.SwitchCase&gt; getCases()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.SwitchStatement sun.org.mozilla.javascript.internal.ast.AstNode getExpression()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.SwitchStatement void setLp(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.SwitchStatement void setParens(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.SwitchStatement void setRp(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Symbol Symbol()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Symbol int getDeclType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Symbol int getIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Symbol java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Symbol sun.org.mozilla.javascript.internal.Node getNode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Symbol sun.org.mozilla.javascript.internal.ast.Scope getContainingTable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Symbol void setContainingTable(sun.org.mozilla.javascript.internal.ast.Scope)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Symbol void setIndex(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Symbol void setName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Symbol void setNode(sun.org.mozilla.javascript.internal.Node)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ThrowStatement ThrowStatement()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ThrowStatement ThrowStatement(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ThrowStatement ThrowStatement(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.ThrowStatement sun.org.mozilla.javascript.internal.ast.AstNode getExpression()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.TryStatement TryStatement()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.TryStatement TryStatement(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.TryStatement TryStatement(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.TryStatement int getFinallyPosition()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.TryStatement java.util.List&lt;sun.org.mozilla.javascript.internal.ast.CatchClause&gt; getCatchClauses()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.TryStatement sun.org.mozilla.javascript.internal.ast.AstNode getFinallyBlock()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.TryStatement sun.org.mozilla.javascript.internal.ast.AstNode getTryBlock()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.TryStatement void setFinallyPosition(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.UnaryExpression UnaryExpression()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.UnaryExpression UnaryExpression(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.UnaryExpression UnaryExpression(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.UnaryExpression boolean isPostfix()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.UnaryExpression boolean isPrefix()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.UnaryExpression int getOperator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.UnaryExpression sun.org.mozilla.javascript.internal.ast.AstNode getOperand()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.UnaryExpression void setIsPostfix(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.VariableDeclaration VariableDeclaration()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.VariableDeclaration VariableDeclaration(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.VariableDeclaration VariableDeclaration(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.VariableDeclaration boolean isConst()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.VariableDeclaration boolean isLet()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.VariableDeclaration boolean isVar()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.VariableDeclaration java.util.List&lt;sun.org.mozilla.javascript.internal.ast.VariableInitializer&gt; getVariables()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.VariableInitializer VariableInitializer()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.VariableInitializer VariableInitializer(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.VariableInitializer VariableInitializer(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.VariableInitializer boolean isDestructuring()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.VariableInitializer sun.org.mozilla.javascript.internal.ast.AstNode getInitializer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.VariableInitializer sun.org.mozilla.javascript.internal.ast.AstNode getTarget()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.WhileLoop WhileLoop()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.WhileLoop WhileLoop(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.WhileLoop WhileLoop(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.WhileLoop sun.org.mozilla.javascript.internal.ast.AstNode getCondition()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.WithStatement WithStatement()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.WithStatement WithStatement(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.WithStatement WithStatement(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.WithStatement int getLp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.WithStatement int getRp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.WithStatement sun.org.mozilla.javascript.internal.ast.AstNode getExpression()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.WithStatement sun.org.mozilla.javascript.internal.ast.AstNode getStatement()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.WithStatement void setLp(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.WithStatement void setParens(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.WithStatement void setRp(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlDotQuery XmlDotQuery()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlDotQuery XmlDotQuery(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlDotQuery XmlDotQuery(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlDotQuery int getRp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlDotQuery void setRp(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlElemRef XmlElemRef()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlElemRef XmlElemRef(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlElemRef XmlElemRef(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlElemRef int getLb()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlElemRef int getRb()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlElemRef sun.org.mozilla.javascript.internal.ast.AstNode getExpression()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlElemRef void setBrackets(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlElemRef void setLb(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlElemRef void setRb(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlExpression XmlExpression()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlExpression XmlExpression(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlExpression XmlExpression(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlExpression boolean isXmlAttribute()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlExpression sun.org.mozilla.javascript.internal.ast.AstNode getExpression()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlExpression void setIsXmlAttribute(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlFragment XmlFragment()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlFragment XmlFragment(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlFragment XmlFragment(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlLiteral XmlLiteral()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlLiteral XmlLiteral(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlLiteral XmlLiteral(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlLiteral java.util.List&lt;sun.org.mozilla.javascript.internal.ast.XmlFragment&gt; getFragments()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlMemberGet XmlMemberGet()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlMemberGet XmlMemberGet(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlMemberGet XmlMemberGet(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlPropRef XmlPropRef()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlPropRef XmlPropRef(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlPropRef XmlPropRef(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlPropRef sun.org.mozilla.javascript.internal.ast.Name getPropName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlRef XmlRef()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlRef XmlRef(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlRef XmlRef(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlRef boolean isAttributeAccess()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlRef int getAtPos()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlRef int getColonPos()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlRef sun.org.mozilla.javascript.internal.ast.Name getNamespace()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlRef void setAtPos(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlRef void setColonPos(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlString XmlString()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlString XmlString(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.XmlString java.lang.String getXml()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Yield Yield()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Yield Yield(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Yield Yield(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.ast.Yield sun.org.mozilla.javascript.internal.ast.AstNode getValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
</root>
