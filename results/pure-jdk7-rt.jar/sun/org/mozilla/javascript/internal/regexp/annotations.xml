<root>
  <item name="sun.org.mozilla.javascript.internal.regexp.CompilerState CompilerState(sun.org.mozilla.javascript.internal.Context, char[], int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.GlobData GlobData()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp NativeRegExp()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp boolean flatNMatcher(sun.org.mozilla.javascript.internal.regexp.REGlobalData, int, int, char[], int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="0"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp boolean isDigit(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp boolean isLineTerm(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp int findPrototypeId(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp int getFlags()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp int getIndex(byte[], int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp int getMaxInstanceId()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp int getOffset(byte[], int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp int toASCIIHexDigit(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp java.lang.Object getInstanceIdValue(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp java.lang.String getClassName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp java.lang.String getInstanceIdName(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp java.lang.String getTypeOf()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp sun.org.mozilla.javascript.internal.regexp.REProgState popProgState(sun.org.mozilla.javascript.internal.regexp.REGlobalData)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="0"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp void pushProgState(sun.org.mozilla.javascript.internal.regexp.REGlobalData, int, int, sun.org.mozilla.javascript.internal.regexp.REBackTrackData, int, int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="0"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExpCtor NativeRegExpCtor()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExpCtor int getMaxInstanceId()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExpCtor java.lang.String getFunctionName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExpCtor java.lang.String getInstanceIdName(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RECharSet RECharSet(int, int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RECompiled RECompiled()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.REGlobalData REGlobalData()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.REGlobalData int parens_index(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.REGlobalData int parens_length(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RENode RENode(byte)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.REProgState REProgState(sun.org.mozilla.javascript.internal.regexp.REProgState, int, int, int, sun.org.mozilla.javascript.internal.regexp.REBackTrackData, int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RegExpImpl RegExpImpl()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RegExpImpl boolean isRegExp(sun.org.mozilla.javascript.internal.Scriptable)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RegExpImpl sun.org.mozilla.javascript.internal.regexp.SubString getParenSubString(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.SubString SubString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.SubString SubString(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
</root>
