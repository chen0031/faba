<root>
  <item name="sun.java2d.opengl.CGLGraphicsConfig boolean isCGLAvailable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.CGLGraphicsConfig int getMaxTextureSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.CGLGraphicsConfig java.awt.ImageCapabilities getImageCapabilities()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.CGLGraphicsConfig java.lang.Object getProxyKey()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.CGLGraphicsConfig long getNativeConfigInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.CGLGraphicsConfig sun.java2d.opengl.OGLContext getContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.CGLGraphicsConfig sun.java2d.pipe.hw.ContextCapabilities getContextCapabilities()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.CGLGraphicsConfig void destroyBackBuffer(long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.CGLGraphicsConfig.CGLBufferCaps CGLBufferCaps(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.opengl.CGLGraphicsConfig.CGLGCDisposerRecord CGLGCDisposerRecord(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.opengl.CGLGraphicsConfig.CGLImageCaps CGLImageCaps()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.opengl.CGLGraphicsConfig.CGLImageCaps boolean isTrueVolatile()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.CGLLayer java.lang.Object getDestination()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.CGLLayer long getPointer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.CGLLayer sun.java2d.SurfaceData getSurfaceData()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.CGLSurfaceData int getDefaultScale()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.CGLSurfaceData java.awt.GraphicsConfiguration getDeviceConfiguration()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.CGLSurfaceData void validate()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.CGLSurfaceData.CGLLayerSurfaceData boolean isOnScreen()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.CGLSurfaceData.CGLLayerSurfaceData java.awt.Rectangle getBounds()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.CGLSurfaceData.CGLOffScreenSurfaceData java.lang.Object getDestination()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.CGLSurfaceData.CGLVSyncOffScreenSurfaceData sun.java2d.SurfaceData getFlipSurface()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.CGLVolatileSurfaceManager boolean isAccelerationEnabled()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.GLXGraphicsConfig java.awt.ImageCapabilities getImageCapabilities()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.GLXGraphicsConfig java.lang.Object getProxyKey()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.GLXGraphicsConfig long getNativeConfigInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.GLXGraphicsConfig sun.java2d.opengl.OGLContext getContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.GLXGraphicsConfig sun.java2d.pipe.hw.ContextCapabilities getContextCapabilities()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.GLXGraphicsConfig void destroyBackBuffer(long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.GLXGraphicsConfig.GLXBufferCaps GLXBufferCaps(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.opengl.GLXGraphicsConfig.GLXGetConfigInfo GLXGetConfigInfo(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.opengl.GLXGraphicsConfig.GLXGetConfigInfo long getConfigInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.GLXGraphicsConfig.GLXImageCaps GLXImageCaps()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.opengl.GLXGraphicsConfig.GLXImageCaps boolean isTrueVolatile()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.GLXSurfaceData java.awt.GraphicsConfiguration getDeviceConfiguration()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.GLXSurfaceData.GLXOffScreenSurfaceData java.lang.Object getDestination()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.GLXSurfaceData.GLXVSyncOffScreenSurfaceData sun.java2d.SurfaceData getFlipSurface()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.GLXVolatileSurfaceManager boolean isAccelerationEnabled()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.OGLAnyCompositeBlit OGLAnyCompositeBlit(sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.opengl.OGLBlitLoops OGLBlitLoops()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.OGLBlitLoops int createPackedParams(boolean, boolean, boolean, boolean, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.OGLBufImgOps OGLBufImgOps()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.OGLContext OGLContext(sun.java2d.pipe.RenderQueue, sun.java2d.opengl.OGLGraphicsConfig)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.opengl.OGLContext.OGLContextCaps OGLContextCaps(int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.opengl.OGLDrawImage OGLDrawImage()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.OGLGeneralBlit OGLGeneralBlit(sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.Blit)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.opengl.OGLPaints OGLPaints()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.OGLPaints.Gradient Gradient()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.OGLPaints.Gradient boolean isPaintValid(sun.java2d.SunGraphics2D)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.OGLPaints.LinearGradient LinearGradient()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.OGLPaints.MultiGradient MultiGradient()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.OGLPaints.RadialGradient RadialGradient()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.OGLPaints.Texture Texture()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.OGLRTTSurfaceToSurfaceBlit OGLRTTSurfaceToSurfaceBlit()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.opengl.OGLRTTSurfaceToSurfaceScale OGLRTTSurfaceToSurfaceScale()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.opengl.OGLRTTSurfaceToSurfaceTransform OGLRTTSurfaceToSurfaceTransform()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.opengl.OGLSurfaceData boolean isOnScreen()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.OGLSurfaceData int getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.OGLSurfaceData java.awt.image.Raster getRaster(int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.OGLSurfaceData sun.java2d.loops.SurfaceType getCustomSurfaceType(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.OGLSurfaceData sun.java2d.opengl.OGLGraphicsConfig getOGLGraphicsConfig()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.OGLSurfaceDataProxy OGLSurfaceDataProxy(sun.java2d.opengl.OGLGraphicsConfig, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.opengl.OGLSurfaceDataProxy boolean isSupportedOperation(sun.java2d.SurfaceData, int, sun.java2d.loops.CompositeType, java.awt.Color)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.OGLSurfaceToSurfaceBlit OGLSurfaceToSurfaceBlit()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.opengl.OGLSurfaceToSurfaceScale OGLSurfaceToSurfaceScale()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.opengl.OGLSurfaceToSurfaceTransform OGLSurfaceToSurfaceTransform()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.opengl.OGLSurfaceToSwBlit OGLSurfaceToSwBlit(sun.java2d.loops.SurfaceType, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.opengl.OGLSwToSurfaceBlit OGLSwToSurfaceBlit(sun.java2d.loops.SurfaceType, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.opengl.OGLSwToSurfaceScale OGLSwToSurfaceScale(sun.java2d.loops.SurfaceType, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.opengl.OGLSwToSurfaceTransform OGLSwToSurfaceTransform(sun.java2d.loops.SurfaceType, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.opengl.OGLSwToTextureBlit OGLSwToTextureBlit(sun.java2d.loops.SurfaceType, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.opengl.OGLTextRenderer OGLTextRenderer(sun.java2d.pipe.RenderQueue)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.opengl.OGLTextRenderer sun.java2d.opengl.OGLTextRenderer traceWrap()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.OGLTextRenderer.Tracer Tracer(sun.java2d.opengl.OGLTextRenderer)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.opengl.OGLTextureToSurfaceBlit OGLTextureToSurfaceBlit()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.opengl.OGLTextureToSurfaceScale OGLTextureToSurfaceScale()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.opengl.OGLTextureToSurfaceTransform OGLTextureToSurfaceTransform()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.opengl.OGLUtilities OGLUtilities()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.OGLUtilities int getOGLSurfaceType(java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.opengl.OGLUtilities java.lang.Object getOGLSurfaceIdentifier(java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
</root>
