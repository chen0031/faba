<root>
  <item name="sun.java2d.loops.Blit Blit(long, sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.Blit Blit(sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.Blit.AnyBlit AnyBlit()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.Blit.GeneralXorBlit GeneralXorBlit(sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.Blit.GeneralXorBlit void setPrimitives(sun.java2d.loops.Blit, sun.java2d.loops.Blit, sun.java2d.loops.GraphicsPrimitive, sun.java2d.loops.Blit)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.Blit.TraceBlit sun.java2d.loops.GraphicsPrimitive traceWrap()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.BlitBg BlitBg(long, sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.BlitBg BlitBg(sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.BlitBg sun.java2d.loops.GraphicsPrimitive makePrimitive(sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.BlitBg.General General(sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.BlitBg.TraceBlitBg sun.java2d.loops.GraphicsPrimitive traceWrap()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.CompositeType boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.CompositeType boolean isDerivedFrom(sun.java2d.loops.CompositeType)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.CompositeType int getUniqueID()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.CompositeType java.lang.String getDescriptor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.CompositeType java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.CompositeType sun.java2d.loops.CompositeType forAlphaComposite(java.awt.AlphaComposite)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.CompositeType sun.java2d.loops.CompositeType getSuperType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.CustomComponent CustomComponent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.DrawGlyphList DrawGlyphList(long, sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.DrawGlyphList DrawGlyphList(sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.DrawGlyphList.TraceDrawGlyphList sun.java2d.loops.GraphicsPrimitive traceWrap()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.DrawGlyphListAA DrawGlyphListAA(long, sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.DrawGlyphListAA DrawGlyphListAA(sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.DrawGlyphListAA.TraceDrawGlyphListAA sun.java2d.loops.GraphicsPrimitive traceWrap()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.DrawGlyphListLCD DrawGlyphListLCD(long, sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.DrawGlyphListLCD DrawGlyphListLCD(sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.DrawGlyphListLCD sun.java2d.loops.GraphicsPrimitive makePrimitive(sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.DrawGlyphListLCD.TraceDrawGlyphListLCD sun.java2d.loops.GraphicsPrimitive traceWrap()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.DrawLine DrawLine(long, sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.DrawLine DrawLine(sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.DrawLine.TraceDrawLine sun.java2d.loops.GraphicsPrimitive traceWrap()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.DrawParallelogram DrawParallelogram(long, sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.DrawParallelogram DrawParallelogram(sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.DrawParallelogram.TraceDrawParallelogram sun.java2d.loops.GraphicsPrimitive traceWrap()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.DrawPath DrawPath(long, sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.DrawPath DrawPath(sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.DrawPath.TraceDrawPath sun.java2d.loops.GraphicsPrimitive traceWrap()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.DrawPolygons DrawPolygons(long, sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.DrawPolygons DrawPolygons(sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.DrawPolygons.TraceDrawPolygons sun.java2d.loops.GraphicsPrimitive traceWrap()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.DrawRect DrawRect(long, sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.DrawRect DrawRect(sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.DrawRect.TraceDrawRect sun.java2d.loops.GraphicsPrimitive traceWrap()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.FillParallelogram FillParallelogram(long, sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.FillParallelogram FillParallelogram(sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.FillParallelogram.TraceFillParallelogram sun.java2d.loops.GraphicsPrimitive traceWrap()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.FillPath FillPath(long, sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.FillPath FillPath(sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.FillPath.TraceFillPath sun.java2d.loops.GraphicsPrimitive traceWrap()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.FillRect FillRect(long, sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.FillRect FillRect(sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.FillRect.TraceFillRect sun.java2d.loops.GraphicsPrimitive traceWrap()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.FillSpans FillSpans(long, sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.FillSpans FillSpans(sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.FillSpans.TraceFillSpans sun.java2d.loops.GraphicsPrimitive traceWrap()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.FontInfo FontInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.GeneralRenderer GeneralRenderer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.GeneralRenderer int outcode(int, int, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.GraphicsPrimitive GraphicsPrimitive(java.lang.String, int, sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.GraphicsPrimitive GraphicsPrimitive(long, java.lang.String, int, sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.GraphicsPrimitive boolean satisfies(java.lang.String, sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.GraphicsPrimitive boolean satisfiesSameAs(sun.java2d.loops.GraphicsPrimitive)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.GraphicsPrimitive boolean tracingEnabled()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.GraphicsPrimitive int getPrimTypeID()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.GraphicsPrimitive int getUniqueID()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.GraphicsPrimitive int makeUniqueID(int, sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.GraphicsPrimitive java.lang.String getSignature()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.GraphicsPrimitive long getNativePrim()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.GraphicsPrimitive sun.java2d.loops.CompositeType getCompositeType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.GraphicsPrimitive sun.java2d.loops.SurfaceType getDestType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.GraphicsPrimitive sun.java2d.loops.SurfaceType getSourceType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.GraphicsPrimitiveMgr GraphicsPrimitiveMgr()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.GraphicsPrimitiveMgr sun.java2d.loops.GraphicsPrimitive locateGeneral(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.GraphicsPrimitiveMgr void writeLog(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.GraphicsPrimitiveMgr.PrimitiveSpec PrimitiveSpec()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.GraphicsPrimitiveProxy GraphicsPrimitiveProxy(java.lang.Class, java.lang.String, java.lang.String, int, sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.GraphicsPrimitiveProxy sun.java2d.loops.GraphicsPrimitive makePrimitive(sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.MaskBlit MaskBlit(long, sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.MaskBlit MaskBlit(sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.MaskBlit.General General(sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.MaskBlit.General void setPrimitives(sun.java2d.loops.Blit, sun.java2d.loops.Blit, sun.java2d.loops.GraphicsPrimitive, sun.java2d.loops.Blit)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.MaskBlit.TraceMaskBlit sun.java2d.loops.GraphicsPrimitive traceWrap()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.MaskFill MaskFill(java.lang.String, sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.MaskFill MaskFill(long, sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.MaskFill MaskFill(sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.MaskFill.TraceMaskFill sun.java2d.loops.GraphicsPrimitive traceWrap()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.OpaqueCopyAnyToArgb OpaqueCopyAnyToArgb()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.OpaqueCopyArgbToAny OpaqueCopyArgbToAny()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.PixelWriter PixelWriter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.PixelWriter void setRaster(java.awt.image.WritableRaster)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.ProcessPath ProcessPath()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.ProcessPath boolean IS_CLIPPED(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.ProcessPath float CLIP(float, float, float, float, double)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.ProcessPath int CLIP(int, int, int, int, double)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.ProcessPath.ActiveEdgeList ActiveEdgeList()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.ProcessPath.ActiveEdgeList boolean isEmpty()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.ProcessPath.DrawHandler void setBounds(int, int, int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.ProcessPath.DrawProcessHandler DrawProcessHandler(sun.java2d.loops.ProcessPath.DrawHandler, sun.java2d.loops.ProcessPath.EndSubPathHandler)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.ProcessPath.Edge Edge(sun.java2d.loops.ProcessPath.Point, int, int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.ProcessPath.Point Point(int, int, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.ProcessPath.ProcessHandler ProcessHandler(sun.java2d.loops.ProcessPath.DrawHandler, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.RenderCache RenderCache(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.RenderCache.Entry Entry(sun.java2d.loops.RenderCache, sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.RenderCache.Entry boolean matches(sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.RenderCache.Entry java.lang.Object getValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.RenderLoops RenderLoops()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.ScaledBlit ScaledBlit(long, sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.ScaledBlit ScaledBlit(sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.ScaledBlit sun.java2d.loops.GraphicsPrimitive makePrimitive(sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.ScaledBlit.TraceScaledBlit sun.java2d.loops.GraphicsPrimitive traceWrap()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.SetDrawLineANY SetDrawLineANY()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.SetDrawPathANY SetDrawPathANY()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.SetDrawPolygonsANY SetDrawPolygonsANY()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.SetDrawRectANY SetDrawRectANY()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.SetFillPathANY SetFillPathANY()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.SetFillRectANY SetFillRectANY()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.SetFillSpansANY SetFillSpansANY()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.SolidPixelWriter SolidPixelWriter(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.SurfaceType boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.SurfaceType int getAlphaMask()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.SurfaceType int getUniqueID()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.SurfaceType java.lang.String getDescriptor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.SurfaceType java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.SurfaceType sun.awt.image.PixelConverter getPixelConverter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.SurfaceType sun.java2d.loops.SurfaceType getSuperType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.TransformBlit TransformBlit(long, sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.TransformBlit TransformBlit(sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.TransformBlit sun.java2d.loops.GraphicsPrimitive makePrimitive(sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.TransformBlit.TraceTransformBlit sun.java2d.loops.GraphicsPrimitive traceWrap()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.TransformHelper TransformHelper(long, sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.TransformHelper TransformHelper(sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.TransformHelper sun.java2d.loops.GraphicsPrimitive makePrimitive(sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.TransformHelper.TraceTransformHelper sun.java2d.loops.GraphicsPrimitive traceWrap()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.XORComposite int getAlphaMask()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.XORComposite int getXorPixel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.XORComposite java.awt.Color getXorColor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.XORComposite java.awt.CompositeContext createContext(java.awt.image.ColorModel, java.awt.image.ColorModel, java.awt.RenderingHints)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.java2d.loops.XorCopyArgbToAny XorCopyArgbToAny()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.XorDrawGlyphListAAANY XorDrawGlyphListAAANY()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.XorDrawGlyphListANY XorDrawGlyphListANY()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.XorDrawLineANY XorDrawLineANY()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.XorDrawPathANY XorDrawPathANY()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.XorDrawPolygonsANY XorDrawPolygonsANY()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.XorDrawRectANY XorDrawRectANY()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.XorFillPathANY XorFillPathANY()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.XorFillRectANY XorFillRectANY()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.XorFillSpansANY XorFillSpansANY()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.java2d.loops.XorPixelWriter XorPixelWriter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
</root>
