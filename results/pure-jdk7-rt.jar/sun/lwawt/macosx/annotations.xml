<root>
  <item name="sun.lwawt.macosx.CAccessible javax.accessibility.Accessible getSwingAccessible(javax.accessibility.Accessible)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CAccessible.AXProgressChangeNotifier AXProgressChangeNotifier(sun.lwawt.macosx.CAccessible)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessible.AXTextChangeNotifier AXTextChangeNotifier(sun.lwawt.macosx.CAccessible)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText CAccessibleText()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CCheckboxMenuItem boolean isAutoToggle()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CCheckboxMenuItem void setAutoToggle(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.lwawt.macosx.CCheckboxMenuItem void setIsIndeterminate(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.lwawt.macosx.CClipboard long getID()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CClipboard void clearNativeContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CClipboard void registerClipboardViewerChecked()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CClipboard void unregisterClipboardViewerChecked()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CCursorManager CCursorManager()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.lwawt.macosx.CCursorManager sun.lwawt.macosx.CCursorManager getInstance()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CCustomCursor java.awt.Point getHotSpot()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CDataTransferer CDataTransferer()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.lwawt.macosx.CDataTransferer boolean isFileFormat(long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CDataTransferer boolean isImageFormat(long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CDataTransferer boolean isLocaleDependentTextFormat(long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CDataTransferer java.lang.Long[] getImageFormatsAsLongArray()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CDataTransferer java.lang.String getDefaultUnicodeEncoding()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CDataTransferer sun.awt.datatransfer.ToolkitThreadBlockedHandler getToolkitThreadBlockedHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CDesktopPeer CDesktopPeer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CDesktopPeer boolean isSupported(java.awt.Desktop.Action)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CDropTarget java.awt.dnd.DropTarget getDropTarget()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CDropTargetContextPeer CDropTargetContextPeer()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.lwawt.macosx.CDropTargetContextPeer sun.lwawt.macosx.CDropTargetContextPeer getDropTargetContextPeer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CEmbeddedFrame boolean isParentWindowActive()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CEmbeddedFrame void registerAccelerator(java.awt.AWTKeyStroke)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CEmbeddedFrame void unregisterAccelerator(java.awt.AWTKeyStroke)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFRetainedResource CFRetainedResource(long, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog CFileDialog(java.awt.FileDialog)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog boolean canDetermineObscurity()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog boolean handlesWheelScrolling()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog boolean isFocusable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog boolean isObscured()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog boolean isReparentSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog boolean prepareImage(java.awt.Image, int, int, java.awt.image.ImageObserver)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog boolean requestFocus(java.awt.Component, boolean, boolean, long, sun.awt.CausedFocusEvent.Cause)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog boolean updateGraphicsData(java.awt.GraphicsConfiguration)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog int checkImage(java.awt.Image, int, int, java.awt.image.ImageObserver)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog java.awt.FontMetrics getFontMetrics(java.awt.Font)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog java.awt.Graphics getGraphics()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog java.awt.GraphicsConfiguration getGraphicsConfiguration()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog java.awt.Image createImage(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog java.awt.Image createImage(java.awt.image.ImageProducer)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog java.awt.Image getBackBuffer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog java.awt.Insets getInsets()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog java.awt.Point getLocationOnScreen()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog java.awt.image.ColorModel getColorModel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog java.awt.image.VolatileImage createVolatileImage(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void applyShape(sun.java2d.pipe.Region)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void beginLayout()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void beginValidate()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void blockWindows(java.util.List&lt;java.awt.Window&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void coalescePaintEvent(java.awt.event.PaintEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void createBuffers(int, java.awt.BufferCapabilities)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void destroyBuffers()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void endLayout()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void endValidate()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void flip(int, int, int, int, java.awt.BufferCapabilities.FlipContents)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void handleEvent(java.awt.AWTEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void layout()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void paint(java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void print(java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void reparent(java.awt.peer.ContainerPeer)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void repositionSecurityWarning()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void setBackground(java.awt.Color)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void setBounds(int, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void setDirectory(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void setEnabled(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void setFile(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void setFilenameFilter(java.io.FilenameFilter)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void setFont(java.awt.Font)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void setForeground(java.awt.Color)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void setModalBlocked(java.awt.Dialog, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void setOpacity(float)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void setOpaque(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void setResizable(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void setTitle(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void setZOrder(java.awt.peer.ComponentPeer)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void toBack()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void toFront()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void updateAlwaysOnTopState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void updateCursorImmediately()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void updateFocusableWindowState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void updateIconImages()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void updateMinimumSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void updateWindow()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog.Task Task(sun.lwawt.macosx.CFileDialog)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.lwawt.macosx.CImage CImage(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.lwawt.macosx.CImage sun.lwawt.macosx.CImage.Creator getCreator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CImage.Creator Creator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CInputMethod CInputMethod()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.lwawt.macosx.CInputMethod boolean hasMarkedText()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CInputMethod boolean isCompositionEnabled()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CInputMethod java.lang.Object getControlObject()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CInputMethod void activate()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.lwawt.macosx.CInputMethod void deactivate(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.lwawt.macosx.CInputMethod void disableInputMethod()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CInputMethod void dispatchEvent(java.awt.AWTEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CInputMethod void dispose()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.lwawt.macosx.CInputMethod void hideWindows()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CInputMethod void setCharacterSubsets(java.lang.Character.Subset[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CInputMethod void setCompositionEnabled(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CInputMethod void setInputMethodContext(java.awt.im.spi.InputMethodContext)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.lwawt.macosx.CInputMethod void startIMUpdate(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.lwawt.macosx.CInputMethodDescriptor CInputMethodDescriptor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CInputMethodDescriptor boolean hasDynamicLocaleList()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CInputMethodDescriptor java.awt.Image getInputMethodIcon(java.util.Locale)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CInputMethodDescriptor java.awt.im.spi.InputMethod createInputMethod()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CMenu void addItem(java.awt.MenuItem)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CMenuBar int getNextInsertionIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CMenuBar void addMenu(java.awt.Menu)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CMenuBar void setNextInsertionIndex(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.lwawt.macosx.CMenuComponent java.awt.MenuComponent getTarget()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CMenuComponent long getModel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CMenuComponent void setFont(java.awt.Font)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CMenuItem boolean isEnabled()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CMouseDragGestureRecognizer void mouseClicked(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CMouseDragGestureRecognizer void mouseMoved(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformComponent CPlatformComponent()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformComponent long getPointer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame CPlatformEmbeddedFrame()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame boolean isActive()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame boolean isFullScreenMode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame boolean isUnderMouse()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame boolean requestWindowFocus()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame java.awt.FontMetrics getFontMetrics(java.awt.Font)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame java.awt.Graphics transformGraphics(java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame java.awt.Insets getInsets()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame java.awt.Point getLocationOnScreen()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame sun.lwawt.LWWindowPeer getPeer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame sun.lwawt.PlatformWindow getTopmostPlatformWindowUnderMouse()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame void enterFullScreenMode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame void exitFullScreenMode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame void flip(int, int, int, int, java.awt.BufferCapabilities.FlipContents)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame void setAlwaysOnTop(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame void setMenuBar(java.awt.MenuBar)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame void setModalBlocked(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame void setOpacity(float)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame void setOpaque(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame void setResizable(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame void setSizeConstraints(int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame void setTitle(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame void setVisible(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame void setWindowState(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame void toBack()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame void toFront()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame void updateFocusableWindowState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame void updateIconImages()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformResponder CPlatformResponder(sun.lwawt.PlatformEventNotifier, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformView CPlatformView()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformView java.lang.Object getDestination()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformView long getAWTView()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformView sun.java2d.SurfaceData getSurfaceData()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow CPlatformWindow()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow boolean IS(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow boolean isFullScreenMode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow boolean isMaximized()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow boolean isVisible()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow int SET(int, int, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow java.awt.Graphics transformGraphics(java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow java.awt.Point getLocationOnScreen()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow sun.java2d.SurfaceData getScreenSurface()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow sun.lwawt.LWWindowPeer getPeer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow sun.lwawt.macosx.CPlatformResponder createPlatformResponder()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow sun.lwawt.macosx.CPlatformView createContentView()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow sun.lwawt.macosx.CPlatformView getContentView()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow void windowDidEnterFullScreen()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow void windowDidExitFullScreen()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow void windowWillEnterFullScreen()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow void windowWillExitFullScreen()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDevice CPrinterDevice(sun.lwawt.macosx.CPrinterGraphicsConfig)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDevice int getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDevice java.awt.GraphicsConfiguration getDefaultConfiguration()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDevice java.awt.GraphicsConfiguration[] getConfigurations()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDevice java.lang.String getIDstring()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialog boolean getRetVal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialog void setRetVal(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer boolean handleEvent(java.awt.Event)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer boolean isRestackSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer boolean requestFocus(boolean, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer void addDropTarget(java.awt.dnd.DropTarget)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer void invalidate(int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer void removeDropTarget(java.awt.dnd.DropTarget)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer void setBackground(java.awt.Color)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer void setBounds(int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer void setEnabled(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer void setFont(java.awt.Font)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer void setForeground(java.awt.Color)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer void setModalBlocked(java.awt.Dialog, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer void setResizable(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer void start()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer void toBack()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer void toFront()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer void updateAlwaysOnTopState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer void updateFocusableWindowState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer void updateMinimumSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterGraphics CPrinterGraphics(java.awt.Graphics2D, java.awt.print.PrinterJob)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterGraphicsConfig CPrinterGraphicsConfig(java.awt.print.PageFormat)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterGraphicsConfig java.awt.GraphicsDevice getDevice()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterGraphicsConfig java.awt.geom.AffineTransform getDefaultTransform()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterGraphicsConfig java.awt.geom.AffineTransform getNormalizingTransform()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterGraphicsConfig java.awt.image.BufferedImage createCompatibleImage(int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterGraphicsConfig java.awt.image.VolatileImage createCompatibleVolatileImage(int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterGraphicsConfig java.awt.print.PageFormat getPageFormat()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterGraphicsConfig sun.lwawt.macosx.CPrinterGraphicsConfig getConfig(java.awt.print.PageFormat)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob double getPhysicalPageHeight(java.awt.print.Paper)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob double getPhysicalPageWidth(java.awt.print.Paper)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob double getPhysicalPrintableHeight(java.awt.print.Paper)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob double getPhysicalPrintableWidth(java.awt.print.Paper)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob double getPhysicalPrintableX(java.awt.print.Paper)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob double getPhysicalPrintableY(java.awt.print.Paper)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob double getXRes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob double getYRes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob void endDoc()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob void endPage(java.awt.print.PageFormat, java.awt.print.Printable, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob void printBand(byte[], int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob void startDoc()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob void startPage(java.awt.print.PageFormat, java.awt.print.Printable, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob void startPage(java.awt.print.PageFormat, java.awt.print.Printable, int, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterSurfaceData boolean xorSurfacePixels(sun.java2d.SunGraphics2D, java.awt.image.BufferedImage, int, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterSurfaceData java.lang.Object getDestination()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterSurfaceData sun.java2d.SurfaceData getReplacement()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CRobot void dispose()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CSystemTray CSystemTray()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CSystemTray java.awt.Dimension getTrayIconSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CTextPipe CTextPipe()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CTextPipe sun.lwawt.macosx.CTextPipe traceWrap()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CTextPipe.Tracer Tracer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CThreading CThreading()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CToolkitThreadBlockedHandler CToolkitThreadBlockedHandler()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.lwawt.macosx.CTrayIcon long getModel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CTrayIcon void showPopupMenu(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CTrayIcon.DialogEventHandler DialogEventHandler(sun.lwawt.macosx.CTrayIcon)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.lwawt.macosx.CViewEmbeddedFrame boolean isParentWindowActive()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewEmbeddedFrame long getEmbedderHandle()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewEmbeddedFrame void registerAccelerator(java.awt.AWTKeyStroke)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewEmbeddedFrame void unregisterAccelerator(java.awt.AWTKeyStroke)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame CViewPlatformEmbeddedFrame()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame boolean isFullScreenMode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame boolean rejectFocusRequest(sun.awt.CausedFocusEvent.Cause)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame boolean requestWindowFocus()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame java.awt.FontMetrics getFontMetrics(java.awt.Font)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame java.awt.Graphics transformGraphics(java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame java.awt.Insets getInsets()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame sun.lwawt.LWWindowPeer getPeer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame sun.lwawt.PlatformWindow getTopmostPlatformWindowUnderMouse()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame void enterFullScreenMode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame void exitFullScreenMode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame void flip(int, int, int, int, java.awt.BufferCapabilities.FlipContents)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame void setAlwaysOnTop(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame void setMenuBar(java.awt.MenuBar)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame void setModalBlocked(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame void setOpacity(float)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame void setOpaque(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame void setResizable(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame void setSizeConstraints(int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame void setTitle(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame void setWindowState(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame void toBack()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame void toFront()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame void updateFocusableWindowState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame void updateIconImages()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow boolean isVisible()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow int getInitialStyleBits()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow sun.lwawt.macosx.CPlatformResponder createPlatformResponder()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow sun.lwawt.macosx.CPlatformView createContentView()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow void notifyActivation(boolean, sun.lwawt.LWWindowPeer)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow void notifyIconify(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow void notifyKeyEvent(int, long, int, int, char, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow void notifyMouseWheelEvent(long, int, int, int, int, int, int, double, byte[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow void notifyNCMouseDown()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow void notifyReshape(int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow void notifyUpdateCursor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow void notifyZoom(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow.Lock Lock()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWrapper CWrapper()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWrapper.NSColor NSColor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWrapper.NSObject NSObject()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWrapper.NSScreen NSScreen()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWrapper.NSView NSView()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWrapper.NSWindow NSWindow()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CocoaConstants CocoaConstants()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.EventDispatchAccess EventDispatchAccess()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.HTMLDecodingInputStream HTMLDecodingInputStream(java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.lwawt.macosx.HTMLSupport HTMLSupport()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit boolean areExtraMouseButtonsEnabled()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit boolean canPopupOverlapTaskBar()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit boolean enableInputMethodsForTextComponent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit boolean isAlwaysOnTopSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit boolean isFrameStateSupported(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit boolean isModalExclusionTypeSupported(java.awt.Dialog.ModalExclusionType)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit boolean isModalityTypeSupported(java.awt.Dialog.ModalityType)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit boolean isPrintableCharacterModifiersMask(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit boolean isSwingBackbufferTranslucencySupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit boolean isTranslucencyCapable(java.awt.GraphicsConfiguration)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit boolean isTraySupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit boolean isWindowOpacitySupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit boolean isWindowShapingSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit boolean isWindowTranslucencySupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit int getFocusAcceleratorKeyMask()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit int getMenuShortcutKeyMask()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit int getNumberOfButtons()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit java.awt.Color getAppleColor(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit java.awt.peer.FileDialogPeer createFileDialogPeer(java.awt.FileDialog)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit java.awt.peer.SystemTrayPeer createSystemTray(java.awt.SystemTray)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit sun.lwawt.LWCursorManager getCursorManager()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit sun.lwawt.PlatformComponent createPlatformComponent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit sun.lwawt.PlatformWindow createPlatformWindow(sun.lwawt.LWWindowPeer.PeerType)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit void platformCleanup()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit void platformInit()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit void platformRunMessage()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit void platformShutdown()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit void sync()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit.AppleSpecificColor AppleSpecificColor(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit.AppleSpecificColor int getRGB()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit.CallableWrapper CallableWrapper(java.util.concurrent.Callable&lt;T&gt;)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit.CallableWrapper T getResult()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit.OSXPlatformFont char getMissingGlyphCharacter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.NSPrintInfo NSPrintInfo(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.lwawt.macosx.NSPrintInfo boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.NSPrintInfo int hashCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.NSPrintInfo java.lang.Class&lt;? extends javax.print.attribute.Attribute&gt; getCategory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.NSPrintInfo java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.NSPrintInfo long getValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.NamedCursor NamedCursor(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
</root>
