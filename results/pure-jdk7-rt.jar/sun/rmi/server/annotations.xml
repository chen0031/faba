<root>
  <item name="sun.rmi.server.ActivatableRef ActivatableRef()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.rmi.server.ActivatableRef ActivatableRef(java.rmi.activation.ActivationID, java.rmi.server.RemoteRef)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.rmi.server.ActivatableRef java.lang.String getRefClass(java.io.ObjectOutput)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.server.ActivatableRef java.rmi.server.RemoteCall newCall(java.rmi.server.RemoteObject, java.rmi.server.Operation[], int, long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.server.ActivatableRef void done(java.rmi.server.RemoteCall)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.server.ActivatableRef void invoke(java.rmi.server.RemoteCall)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.server.ActivatableServerRef java.lang.String getRefClass(java.io.ObjectOutput)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.server.ActivatableServerRef java.rmi.server.RemoteRef getClientRef()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.server.ActivatableServerRef void writeExternal(java.io.ObjectOutput)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.server.Activation.ActLogHandler ActLogHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.server.Activation.ActivationServerSocketFactory ActivationServerSocketFactory(java.net.ServerSocket)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.rmi.server.Activation.ActivationSystemImpl_Stub ActivationSystemImpl_Stub(java.rmi.server.RemoteRef)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.rmi.server.Activation.DefaultExecPolicy DefaultExecPolicy()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.server.Activation.GroupEntry.Watchdog void noRestart()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.rmi.server.Activation.LogGroupIncarnation LogGroupIncarnation(java.rmi.activation.ActivationGroupID, long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.rmi.server.Activation.LogRecord LogRecord()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.server.Activation.LogRegisterGroup LogRegisterGroup(java.rmi.activation.ActivationGroupID, java.rmi.activation.ActivationGroupDesc)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.rmi.server.Activation.LogRegisterObject LogRegisterObject(java.rmi.activation.ActivationID, java.rmi.activation.ActivationDesc)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.rmi.server.Activation.LogUnregisterGroup LogUnregisterGroup(java.rmi.activation.ActivationGroupID)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.rmi.server.Activation.LogUnregisterObject LogUnregisterObject(java.rmi.activation.ActivationID)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.rmi.server.Activation.LogUpdateDesc LogUpdateDesc(java.rmi.activation.ActivationID, java.rmi.activation.ActivationDesc)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.rmi.server.Activation.LogUpdateGroupDesc LogUpdateGroupDesc(java.rmi.activation.ActivationGroupID, java.rmi.activation.ActivationGroupDesc)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.rmi.server.Activation.ObjectEntry ObjectEntry(java.rmi.activation.ActivationDesc)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.rmi.server.Activation.ObjectEntry void reset()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.rmi.server.ActivationGroupImpl.ServerSocketFactoryImpl ServerSocketFactoryImpl()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.server.ActivationGroupInit ActivationGroupInit()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.server.LoaderHandler LoaderHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.server.LoaderHandler.Loader java.lang.String getClassAnnotation()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.server.LoaderHandler.LoaderEntry LoaderEntry(sun.rmi.server.LoaderHandler.LoaderKey, sun.rmi.server.LoaderHandler.Loader)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.rmi.server.LoaderHandler.LoaderKey int hashCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.server.MarshalInputStream void skipDefaultResolveClass()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.rmi.server.MarshalInputStream void useCodebaseOnly()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.rmi.server.UnicastRef UnicastRef()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.server.UnicastRef UnicastRef(sun.rmi.transport.LiveRef)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.rmi.server.UnicastRef java.lang.String getRefClass(java.io.ObjectOutput)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.server.UnicastRef sun.rmi.transport.LiveRef getLiveRef()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.server.UnicastRef void marshalCustomCallData(java.io.ObjectOutput)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.server.UnicastRef2 UnicastRef2()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.server.UnicastRef2 UnicastRef2(sun.rmi.transport.LiveRef)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.rmi.server.UnicastRef2 java.lang.String getRefClass(java.io.ObjectOutput)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.server.UnicastServerRef UnicastServerRef()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.rmi.server.UnicastServerRef UnicastServerRef(sun.rmi.transport.LiveRef)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.rmi.server.UnicastServerRef java.lang.String getRefClass(java.io.ObjectOutput)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.server.UnicastServerRef java.rmi.server.RemoteRef getClientRef()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.server.UnicastServerRef void readExternal(java.io.ObjectInput)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.rmi.server.UnicastServerRef void unmarshalCustomCallData(java.io.ObjectInput)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.server.UnicastServerRef void writeExternal(java.io.ObjectOutput)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.server.UnicastServerRef2 UnicastServerRef2()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.rmi.server.UnicastServerRef2 UnicastServerRef2(sun.rmi.transport.LiveRef)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.rmi.server.UnicastServerRef2 java.lang.String getRefClass(java.io.ObjectOutput)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.server.UnicastServerRef2 java.rmi.server.RemoteRef getClientRef()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.server.Util Util()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.server.WeakClassHashMap.ValueCell ValueCell()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
</root>
