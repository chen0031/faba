<root>
  <item name="sun.rmi.transport.ConnectionInputStream void setAckNeeded()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.rmi.transport.ConnectionOutputStream boolean isResultStream()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.transport.ConnectionOutputStream sun.rmi.transport.DGCAckHandler getDGCAckHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.transport.DGCClient DGCClient()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.transport.DGCClient long computeRenewTime(long, long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.transport.DGCClient.EndpointEntry.CleanRequest CleanRequest(java.rmi.server.ObjID[], long, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.rmi.transport.DGCClient.EndpointEntry.RefEntry sun.rmi.transport.LiveRef getRef()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.transport.DGCClient.EndpointEntry.RefEntry.PhantomLiveRef PhantomLiveRef(sun.rmi.transport.DGCClient.EndpointEntry.RefEntry, sun.rmi.transport.LiveRef)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.rmi.transport.DGCClient.EndpointEntry.RefEntry.PhantomLiveRef sun.rmi.transport.DGCClient.EndpointEntry.RefEntry getRefEntry()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.transport.DGCClient.EndpointEntry.RenewCleanThread RenewCleanThread(sun.rmi.transport.DGCClient.EndpointEntry)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.rmi.transport.DGCImpl sun.rmi.transport.DGCImpl getDGCImpl()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.transport.DGCImpl_Skel DGCImpl_Skel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.transport.DGCImpl_Stub DGCImpl_Stub()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.rmi.transport.DGCImpl_Stub DGCImpl_Stub(java.rmi.server.RemoteRef)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.rmi.transport.LiveRef LiveRef(java.rmi.server.ObjID, sun.rmi.transport.Endpoint, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.rmi.transport.LiveRef int hashCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.transport.LiveRef java.rmi.server.ObjID getObjID()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.transport.LiveRef sun.rmi.transport.Endpoint getEndpoint()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.transport.ObjectEndpoint ObjectEndpoint(java.rmi.server.ObjID, sun.rmi.transport.Transport)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.rmi.transport.ObjectEndpoint boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.transport.ObjectTable ObjectTable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.transport.ObjectTable.Reaper Reaper()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.transport.SequenceEntry SequenceEntry(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.rmi.transport.SequenceEntry void retain(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.rmi.transport.SequenceEntry void update(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.rmi.transport.StreamRemoteCall StreamRemoteCall(sun.rmi.transport.Connection)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.rmi.transport.StreamRemoteCall java.lang.Exception getServerException()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.transport.StreamRemoteCall sun.rmi.transport.Connection getConnection()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.transport.Target boolean isPermanent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.transport.Target java.lang.ClassLoader getContextClassLoader()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.transport.Target java.rmi.Remote getStub()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.transport.Target java.security.AccessControlContext getAccessControlContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.transport.Target sun.rmi.server.Dispatcher getDispatcher()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.transport.Target sun.rmi.transport.ObjectEndpoint getObjectEndpoint()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.transport.Target sun.rmi.transport.WeakRef getWeakImpl()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.transport.Target void setExportedTransport(sun.rmi.transport.Transport)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.rmi.transport.Transport Transport()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.transport.Transport void targetUnexported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.transport.TransportConstants TransportConstants()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.transport.WeakRef int hashCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
</root>
