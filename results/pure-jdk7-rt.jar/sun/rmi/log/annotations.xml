<root>
  <item name="sun.rmi.log.LogHandler LogHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.log.LogInputStream LogInputStream(java.io.InputStream, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.rmi.log.LogInputStream void close()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.rmi.log.LogOutputStream LogOutputStream(java.io.RandomAccessFile)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.rmi.log.LogOutputStream void close()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.log.ReliableLog long logSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.log.ReliableLog long snapshotSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.rmi.log.ReliableLog void incrVersion()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.rmi.log.ReliableLog.LogFile boolean checkSpansBoundary(long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
</root>
