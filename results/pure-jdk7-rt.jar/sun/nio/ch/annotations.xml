<root>
  <item name="sun.nio.ch.AbstractPollArrayWrapper AbstractPollArrayWrapper()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.AsynchronousChannelGroupImpl boolean isShutdown()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.AsynchronousChannelGroupImpl int threadCount()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.AsynchronousChannelGroupImpl java.lang.Runnable bindToGroup(java.lang.Runnable)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.AsynchronousFileChannelImpl boolean isOpen()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.AsynchronousFileChannelImpl java.util.concurrent.ExecutorService executor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.AsynchronousServerSocketChannelImpl boolean isAcceptKilled()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.AsynchronousServerSocketChannelImpl boolean isOpen()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.AsynchronousServerSocketChannelImpl java.util.Set&lt;java.net.SocketOption&lt;?&gt;&gt; supportedOptions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.AsynchronousServerSocketChannelImpl void onCancel(sun.nio.ch.PendingFuture&lt;?,?&gt;)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.AsynchronousServerSocketChannelImpl.DefaultOptionsHolder DefaultOptionsHolder()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.AsynchronousSocketChannelImpl boolean isOpen()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.AsynchronousSocketChannelImpl java.net.SocketAddress getRemoteAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.AsynchronousSocketChannelImpl java.util.Set&lt;java.net.SocketOption&lt;?&gt;&gt; supportedOptions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.AsynchronousSocketChannelImpl void enableReading()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.AsynchronousSocketChannelImpl void enableReading(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.AsynchronousSocketChannelImpl void enableWriting()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.AsynchronousSocketChannelImpl void enableWriting(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.AsynchronousSocketChannelImpl void killConnect()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.AsynchronousSocketChannelImpl void killReading()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.AsynchronousSocketChannelImpl void killWriting()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.AsynchronousSocketChannelImpl.DefaultOptionsHolder DefaultOptionsHolder()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.ChannelInputStream ChannelInputStream(java.nio.channels.ReadableByteChannel)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.CompletedFuture CompletedFuture(V, java.lang.Throwable)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.CompletedFuture boolean cancel(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.CompletedFuture boolean isCancelled()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.CompletedFuture boolean isDone()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.CompletedFuture sun.nio.ch.CompletedFuture&lt;V&gt; withResult(V)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.DatagramChannelImpl boolean isConnected()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.DatagramChannelImpl int getFDVal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.DatagramChannelImpl java.io.FileDescriptor getFD()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.DatagramChannelImpl java.net.SocketAddress localAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.DatagramChannelImpl java.net.SocketAddress remoteAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.DatagramChannelImpl java.util.Set&lt;java.net.SocketOption&lt;?&gt;&gt; supportedOptions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.DatagramChannelImpl.DefaultOptionsHolder DefaultOptionsHolder()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.DatagramDispatcher DatagramDispatcher()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.DatagramSocketAdaptor int getSoTimeout()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.DatagramSocketAdaptor java.nio.channels.DatagramChannel getChannel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.DatagramSocketAdaptor void setSoTimeout(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.DefaultAsynchronousChannelProvider DefaultAsynchronousChannelProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.DefaultSelectorProvider DefaultSelectorProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.EPoll EPoll()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.EPoll long getEvent(long, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.EPollPort.Event Event(sun.nio.ch.Port.PollableChannel, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.EPollPort.Event int events()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.EPollPort.Event sun.nio.ch.Port.PollableChannel channel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.EPollPort.EventHandlerTask EventHandlerTask(sun.nio.ch.EPollPort)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.ExtendedSocketOption ExtendedSocketOption()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.FileChannelImpl FileChannelImpl(java.io.FileDescriptor, java.lang.String, boolean, boolean, boolean, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.FileChannelImpl java.nio.channels.FileChannel open(java.io.FileDescriptor, java.lang.String, boolean, boolean, boolean, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.FileChannelImpl java.nio.channels.FileChannel open(java.io.FileDescriptor, java.lang.String, boolean, boolean, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.FileChannelImpl sun.misc.JavaNioAccess.BufferPool getMappedBufferPool()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.FileDispatcher FileDispatcher()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.FileDispatcherImpl FileDispatcherImpl()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.FileDispatcherImpl FileDispatcherImpl(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.FileDispatcherImpl boolean canTransferToDirectly(java.nio.channels.SelectableChannel)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.FileDispatcherImpl boolean transferToDirectlyNeedsPositionLock()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.FileDispatcherImpl java.io.FileDescriptor duplicateForMapping(java.io.FileDescriptor)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.FileKey FileKey()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.FileKey boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.FileKey int hashCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.FileLockImpl FileLockImpl(java.nio.channels.AsynchronousFileChannel, long, long, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.FileLockImpl FileLockImpl(java.nio.channels.FileChannel, long, long, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.FileLockImpl boolean isValid()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.FileLockTable FileLockTable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.IOStatus IOStatus()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.IOStatus boolean check(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.IOStatus boolean check(long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.IOStatus boolean checkAll(long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.IOStatus int normalize(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.IOStatus long normalize(long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.IOUtil IOUtil()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.IOVecWrapper int getPosition(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.IOVecWrapper int getRemaining(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.IOVecWrapper java.nio.ByteBuffer getBuffer(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.IOVecWrapper java.nio.ByteBuffer getShadow(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.IOVecWrapper.Deallocator Deallocator(sun.nio.ch.AllocatedNativeObject)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.InheritedChannel InheritedChannel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.Invoker Invoker()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.Invoker.GroupAndInvokeCount GroupAndInvokeCount(sun.nio.ch.AsynchronousChannelGroupImpl)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.Invoker.GroupAndInvokeCount int invokeCount()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.Invoker.GroupAndInvokeCount sun.nio.ch.AsynchronousChannelGroupImpl group()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.Invoker.GroupAndInvokeCount void incrementInvokeCount()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.Invoker.GroupAndInvokeCount void resetInvokeCount()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.Invoker.GroupAndInvokeCount void setInvokeCount(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.KQueue KQueue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.KQueue long getEvent(long, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.KQueueArrayWrapper.Update Update(sun.nio.ch.SelChImpl, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.KQueuePort.Event Event(sun.nio.ch.Port.PollableChannel, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.KQueuePort.Event int events()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.KQueuePort.Event sun.nio.ch.Port.PollableChannel channel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.KQueuePort.EventHandlerTask EventHandlerTask(sun.nio.ch.KQueuePort)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.KQueueSelectorImpl.MapEntry MapEntry(sun.nio.ch.SelectionKeyImpl)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.MembershipKeyImpl MembershipKeyImpl(java.nio.channels.MulticastChannel, java.net.InetAddress, java.net.NetworkInterface, java.net.InetAddress)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.MembershipKeyImpl boolean isValid()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.MembershipKeyImpl java.net.InetAddress group()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.MembershipKeyImpl java.net.InetAddress sourceAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.MembershipKeyImpl java.net.NetworkInterface networkInterface()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.MembershipKeyImpl java.nio.channels.MulticastChannel channel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.MembershipKeyImpl void invalidate()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.MembershipKeyImpl.Type4 Type4(java.nio.channels.MulticastChannel, java.net.InetAddress, java.net.NetworkInterface, java.net.InetAddress, int, int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.MembershipKeyImpl.Type4 int groupAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.MembershipKeyImpl.Type4 int interfaceAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.MembershipKeyImpl.Type4 int source()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.MembershipKeyImpl.Type6 Type6(java.nio.channels.MulticastChannel, java.net.InetAddress, java.net.NetworkInterface, java.net.InetAddress, byte[], int, byte[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.MembershipKeyImpl.Type6 byte[] groupAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.MembershipKeyImpl.Type6 byte[] source()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.MembershipKeyImpl.Type6 int index()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.MembershipRegistry MembershipRegistry()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.NativeDispatcher NativeDispatcher()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.NativeDispatcher boolean needsPositionLock()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.NativeDispatcher int pread(java.io.FileDescriptor, long, int, long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.NativeDispatcher int pwrite(java.io.FileDescriptor, long, int, long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.NativeDispatcher void preClose(java.io.FileDescriptor)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.NativeObject NativeObject(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.NativeObject NativeObject(long, long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.NativeObject long address()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.NativeObject long allocationAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.NativeObject sun.nio.ch.NativeObject subObject(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.NativeThread NativeThread()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.NativeThreadSet NativeThreadSet(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.Net Net()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.Net boolean useExclusiveBind()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.Net java.net.InetSocketAddress asInetSocketAddress(java.net.SocketAddress)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.Net java.net.InetSocketAddress checkAddress(java.net.SocketAddress)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.OptionKey OptionKey(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.OptionKey int level()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.OptionKey int name()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.PendingFuture A attachment()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.PendingFuture PendingFuture(java.nio.channels.AsynchronousChannel)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.PendingFuture PendingFuture(java.nio.channels.AsynchronousChannel, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.PendingFuture PendingFuture(java.nio.channels.AsynchronousChannel, java.nio.channels.CompletionHandler&lt;V,? super A&gt;, A)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.PendingFuture PendingFuture(java.nio.channels.AsynchronousChannel, java.nio.channels.CompletionHandler&lt;V,? super A&gt;, A, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.PendingFuture V value()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.PendingFuture boolean isCancelled()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.PendingFuture boolean isDone()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.PendingFuture java.lang.Object getContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.PendingFuture java.lang.Throwable exception()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.PendingFuture java.nio.channels.AsynchronousChannel channel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.PendingFuture java.nio.channels.CompletionHandler&lt;V,? super A&gt; handler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.PendingFuture void setContext(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.PipeImpl java.nio.channels.Pipe.SinkChannel sink()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.PipeImpl java.nio.channels.Pipe.SourceChannel source()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.PollArrayWrapper void release(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.Reflect Reflect()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpChannelImpl SctpChannelImpl(java.nio.channels.spi.SelectorProvider)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.SctpChannelImpl T getOption(com.sun.nio.sctp.SctpSocketOption&lt;T&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpChannelImpl boolean connect(java.net.SocketAddress)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpChannelImpl boolean connect(java.net.SocketAddress, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpChannelImpl boolean finishConnect()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpChannelImpl boolean isConnectionPending()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpChannelImpl com.sun.nio.sctp.Association association()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpChannelImpl com.sun.nio.sctp.MessageInfo receive(java.nio.ByteBuffer, T, com.sun.nio.sctp.NotificationHandler&lt;T&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpChannelImpl com.sun.nio.sctp.SctpChannel bind(java.net.SocketAddress)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpChannelImpl com.sun.nio.sctp.SctpChannel bindAddress(java.net.InetAddress)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpChannelImpl com.sun.nio.sctp.SctpChannel setOption(com.sun.nio.sctp.SctpSocketOption&lt;T&gt;, T)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpChannelImpl com.sun.nio.sctp.SctpChannel shutdown()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpChannelImpl com.sun.nio.sctp.SctpChannel unbindAddress(java.net.InetAddress)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpChannelImpl int send(java.nio.ByteBuffer, com.sun.nio.sctp.MessageInfo)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpChannelImpl java.util.Set&lt;com.sun.nio.sctp.SctpSocketOption&lt;?&gt;&gt; supportedOptions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpChannelImpl java.util.Set&lt;java.net.SocketAddress&gt; getAllLocalAddresses()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpChannelImpl java.util.Set&lt;java.net.SocketAddress&gt; getRemoteAddresses()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpChannelImpl void implCloseSelectableChannel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpChannelImpl void implConfigureBlocking(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpMessageInfoImpl SctpMessageInfoImpl(com.sun.nio.sctp.Association, java.net.SocketAddress, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.SctpMessageInfoImpl SctpMessageInfoImpl(int, java.net.SocketAddress, int, int, boolean, boolean, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.SctpMessageInfoImpl boolean isComplete()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpMessageInfoImpl boolean isUnordered()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpMessageInfoImpl com.sun.nio.sctp.Association association()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpMessageInfoImpl com.sun.nio.sctp.MessageInfo complete(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.SctpMessageInfoImpl com.sun.nio.sctp.MessageInfo payloadProtocolID(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.SctpMessageInfoImpl com.sun.nio.sctp.MessageInfo streamNumber(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.SctpMessageInfoImpl com.sun.nio.sctp.MessageInfo timeToLive(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.SctpMessageInfoImpl com.sun.nio.sctp.MessageInfo unordered(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.SctpMessageInfoImpl int associationID()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpMessageInfoImpl int bytes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpMessageInfoImpl int payloadProtocolID()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpMessageInfoImpl int streamNumber()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpMessageInfoImpl java.net.SocketAddress address()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpMessageInfoImpl long timeToLive()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpMessageInfoImpl void setAssociation(com.sun.nio.sctp.Association)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.SctpMultiChannelImpl SctpMultiChannelImpl(java.nio.channels.spi.SelectorProvider)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.SctpMultiChannelImpl T getOption(com.sun.nio.sctp.SctpSocketOption&lt;T&gt;, com.sun.nio.sctp.Association)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpMultiChannelImpl com.sun.nio.sctp.MessageInfo receive(java.nio.ByteBuffer, T, com.sun.nio.sctp.NotificationHandler&lt;T&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpMultiChannelImpl com.sun.nio.sctp.SctpChannel branch(com.sun.nio.sctp.Association)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpMultiChannelImpl com.sun.nio.sctp.SctpMultiChannel bind(java.net.SocketAddress, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpMultiChannelImpl com.sun.nio.sctp.SctpMultiChannel bindAddress(java.net.InetAddress)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpMultiChannelImpl com.sun.nio.sctp.SctpMultiChannel setOption(com.sun.nio.sctp.SctpSocketOption&lt;T&gt;, T, com.sun.nio.sctp.Association)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpMultiChannelImpl com.sun.nio.sctp.SctpMultiChannel shutdown(com.sun.nio.sctp.Association)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpMultiChannelImpl com.sun.nio.sctp.SctpMultiChannel unbindAddress(java.net.InetAddress)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpMultiChannelImpl int send(java.nio.ByteBuffer, com.sun.nio.sctp.MessageInfo)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpMultiChannelImpl java.util.Set&lt;com.sun.nio.sctp.Association&gt; associations()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpMultiChannelImpl java.util.Set&lt;com.sun.nio.sctp.SctpSocketOption&lt;?&gt;&gt; supportedOptions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpMultiChannelImpl java.util.Set&lt;java.net.SocketAddress&gt; getAllLocalAddresses()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpMultiChannelImpl java.util.Set&lt;java.net.SocketAddress&gt; getRemoteAddresses(com.sun.nio.sctp.Association)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpMultiChannelImpl void implCloseSelectableChannel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpMultiChannelImpl void implConfigureBlocking(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpServerChannelImpl SctpServerChannelImpl(java.nio.channels.spi.SelectorProvider)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.SctpServerChannelImpl T getOption(com.sun.nio.sctp.SctpSocketOption&lt;T&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpServerChannelImpl com.sun.nio.sctp.SctpChannel accept()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpServerChannelImpl com.sun.nio.sctp.SctpServerChannel bind(java.net.SocketAddress, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpServerChannelImpl com.sun.nio.sctp.SctpServerChannel bindAddress(java.net.InetAddress)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpServerChannelImpl com.sun.nio.sctp.SctpServerChannel setOption(com.sun.nio.sctp.SctpSocketOption&lt;T&gt;, T)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpServerChannelImpl com.sun.nio.sctp.SctpServerChannel unbindAddress(java.net.InetAddress)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpServerChannelImpl java.util.Set&lt;com.sun.nio.sctp.SctpSocketOption&lt;?&gt;&gt; supportedOptions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpServerChannelImpl java.util.Set&lt;java.net.SocketAddress&gt; getAllLocalAddresses()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpServerChannelImpl void implCloseSelectableChannel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpServerChannelImpl void implConfigureBlocking(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpStdSocketOption SctpStdSocketOption(java.lang.String, java.lang.Class&lt;T&gt;)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.SctpStdSocketOption SctpStdSocketOption(java.lang.String, java.lang.Class&lt;T&gt;, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.SctpStdSocketOption int constValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpStdSocketOption java.lang.Class&lt;T&gt; type()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpStdSocketOption java.lang.String name()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SctpStdSocketOption java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.Secrets Secrets()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SelectionKeyImpl SelectionKeyImpl(sun.nio.ch.SelChImpl, sun.nio.ch.SelectorImpl)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.SelectionKeyImpl int getIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SelectionKeyImpl int nioInterestOps()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SelectionKeyImpl int nioReadyOps()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SelectionKeyImpl java.nio.channels.SelectableChannel channel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SelectionKeyImpl java.nio.channels.Selector selector()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SelectionKeyImpl void nioReadyOps(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.SelectionKeyImpl void setIndex(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.SelectorImpl void putEventOps(sun.nio.ch.SelectionKeyImpl, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.ServerSocketAdaptor int getSoTimeout()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.ServerSocketAdaptor java.nio.channels.ServerSocketChannel getChannel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.ServerSocketAdaptor void setSoTimeout(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.ServerSocketChannelImpl boolean isBound()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.ServerSocketChannelImpl int getFDVal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.ServerSocketChannelImpl java.io.FileDescriptor getFD()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.ServerSocketChannelImpl java.net.InetSocketAddress localAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.ServerSocketChannelImpl java.util.Set&lt;java.net.SocketOption&lt;?&gt;&gt; supportedOptions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.ServerSocketChannelImpl.DefaultOptionsHolder DefaultOptionsHolder()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SharedFileLockTable.FileLockReference FileLockReference(java.nio.channels.FileLock, java.lang.ref.ReferenceQueue&lt;java.nio.channels.FileLock&gt;, sun.nio.ch.FileKey)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.SharedFileLockTable.FileLockReference sun.nio.ch.FileKey fileKey()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SimpleAsynchronousFileChannelImpl.DefaultExecutorHolder DefaultExecutorHolder()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SinkChannelImpl int getFDVal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SinkChannelImpl java.io.FileDescriptor getFD()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SocketAdaptor int getSoTimeout()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SocketAdaptor java.nio.channels.SocketChannel getChannel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SocketAdaptor void setSoTimeout(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.SocketAdaptor.SocketInputStream SocketInputStream(sun.nio.ch.SocketAdaptor)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.SocketChannelImpl boolean isConnected()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SocketChannelImpl boolean isConnectionPending()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SocketChannelImpl boolean isInputOpen()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SocketChannelImpl boolean isOutputOpen()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SocketChannelImpl int getFDVal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SocketChannelImpl java.io.FileDescriptor getFD()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SocketChannelImpl java.net.InetSocketAddress localAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SocketChannelImpl java.net.SocketAddress remoteAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SocketChannelImpl java.util.Set&lt;java.net.SocketOption&lt;?&gt;&gt; supportedOptions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SocketChannelImpl.DefaultOptionsHolder DefaultOptionsHolder()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SocketDispatcher SocketDispatcher()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SocketOptionRegistry SocketOptionRegistry()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SocketOptionRegistry.LazyInitialization LazyInitialization()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SocketOptionRegistry.RegistryKey RegistryKey(java.net.SocketOption&lt;?&gt;, java.net.ProtocolFamily)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.SocketOptionRegistry.RegistryKey boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SolarisEventPort int dependsArch(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SolarisEventPort.EventHandlerTask EventHandlerTask(sun.nio.ch.SolarisEventPort)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.SourceChannelImpl int getFDVal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.SourceChannelImpl java.io.FileDescriptor getFD()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.ThreadPool ThreadPool(java.util.concurrent.ExecutorService, boolean, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.ThreadPool boolean isFixedThreadPool()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.ThreadPool int poolSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.ThreadPool java.util.concurrent.ExecutorService executor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.ThreadPool java.util.concurrent.ThreadFactory defaultThreadFactory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.ThreadPool sun.nio.ch.ThreadPool getDefault()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.ThreadPool.DefaultThreadPoolHolder DefaultThreadPoolHolder()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.UnixAsynchronousServerSocketChannelImpl sun.nio.ch.AsynchronousChannelGroupImpl group()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.UnixAsynchronousSocketChannelImpl sun.nio.ch.AsynchronousChannelGroupImpl group()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.UnixAsynchronousSocketChannelImpl.OpType OpType(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.Util Util()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.Util java.nio.ByteBuffer[] subsequence(java.nio.ByteBuffer[], int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.Util java.util.Set&lt;E&gt; ungrowableSet(java.util.Set&lt;E&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.Util sun.misc.Unsafe unsafe()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.Util.BufferCache BufferCache()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.nio.ch.Util.BufferCache boolean isEmpty()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.Util.BufferCache int next(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.Util.SelectorWrapper java.nio.channels.Selector get()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.nio.ch.Util.SelectorWrapper.Closer Closer(java.nio.channels.Selector)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
</root>
