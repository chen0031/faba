<root>
  <item name="sun.invoke.util.BytecodeDescriptor BytecodeDescriptor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.BytecodeName BytecodeName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.BytecodeName boolean isDangerous(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.BytecodeName boolean isSafeBytecodeChar(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.BytecodeName boolean isSafeBytecodeName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.BytecodeName boolean isSpecial(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.BytecodeName boolean looksMangled(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.BytecodeName char originalOfReplacement(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.BytecodeName char replacementOf(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.BytecodeName int indexOfDangerousChar(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.BytecodeName int lastIndexOfDangerousChar(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.BytecodeName void checkSafeBytecodeName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions T identity(T)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions T[] identity(T[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions ValueConversions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions boolean byteToBoolean(byte)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions boolean charToBoolean(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions boolean doubleToBoolean(double)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions boolean floatToBoolean(float)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions boolean identity(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions boolean intToBoolean(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions boolean longToBoolean(long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions boolean shortToBoolean(short)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions boolean toBoolean(byte)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions byte booleanToByte(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions byte charToByte(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions byte doubleToByte(double)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions byte floatToByte(float)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions byte fromBoolean(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions byte identity(byte)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions byte intToByte(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions byte longToByte(long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions byte shortToByte(short)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions char booleanToChar(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions char byteToChar(byte)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions char doubleToChar(double)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions char floatToChar(float)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions char identity(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions char intToChar(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions char longToChar(long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions char shortToChar(short)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions double booleanToDouble(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions double byteToDouble(byte)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions double charToDouble(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions double floatToDouble(float)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions double identity(double)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions double intToDouble(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions double longToDouble(long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions double shortToDouble(short)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions double zeroDouble()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions float booleanToFloat(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions float byteToFloat(byte)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions float charToFloat(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions float doubleToFloat(double)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions float identity(float)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions float intToFloat(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions float longToFloat(long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions float shortToFloat(short)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions float zeroFloat()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions int booleanToInt(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions int byteToInt(byte)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions int charToInt(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions int doubleToInt(double)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions int floatToInt(float)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions int identity(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions int longToInt(long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions int shortToInt(short)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions int widenSubword(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions int zeroInteger()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.Boolean boxBoolean(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.Byte boxByte(byte)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.Character boxCharacter(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.Double boxDouble(double)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.Float boxFloat(float)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.Integer boxInteger(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.Long boxLong(long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.Object zeroObject()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.Object[] array()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.Object[] array(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.Object[] array(java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.Object[] array(java.lang.Object, java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.Object[] array(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.Object[] array(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.Object[] array(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.Object[] array(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.Object[] array(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.Object[] array(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.Object[] array(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.Object[] fillArray(java.lang.Integer, java.lang.Object[], java.lang.Object)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="1"/>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.Object[] fillArray(java.lang.Integer, java.lang.Object[], java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="1"/>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.Object[] fillArray(java.lang.Integer, java.lang.Object[], java.lang.Object, java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="1"/>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.Object[] fillArray(java.lang.Integer, java.lang.Object[], java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="1"/>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.Object[] fillArray(java.lang.Integer, java.lang.Object[], java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="1"/>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.Object[] fillArray(java.lang.Integer, java.lang.Object[], java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="1"/>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.Object[] fillArray(java.lang.Integer, java.lang.Object[], java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="1"/>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.Object[] fillArray(java.lang.Integer, java.lang.Object[], java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="1"/>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.Object[] fillArray(java.lang.Integer, java.lang.Object[], java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="1"/>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.Object[] fillArray(java.lang.Integer, java.lang.Object[], java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="1"/>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.Object[] fillNewArray(java.lang.Integer, java.lang.Object[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.Object[] makeArray(java.lang.Object...)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.Short boxShort(short)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions java.lang.invoke.MethodHandle identity()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions java.util.List&lt;java.lang.Object&gt; list()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions java.util.List&lt;java.lang.Object&gt; list(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions java.util.List&lt;java.lang.Object&gt; list(java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions java.util.List&lt;java.lang.Object&gt; list(java.lang.Object, java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions java.util.List&lt;java.lang.Object&gt; list(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions java.util.List&lt;java.lang.Object&gt; list(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions java.util.List&lt;java.lang.Object&gt; list(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions java.util.List&lt;java.lang.Object&gt; list(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions java.util.List&lt;java.lang.Object&gt; list(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions java.util.List&lt;java.lang.Object&gt; list(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions java.util.List&lt;java.lang.Object&gt; list(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions java.util.List&lt;java.lang.Object&gt; makeList(java.lang.Object...)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions long booleanToLong(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions long byteToLong(byte)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions long charToLong(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions long doubleToLong(double)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions long floatToLong(float)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions long identity(long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions long intToLong(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions long shortToLong(short)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions long zeroLong()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions short booleanToShort(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions short byteToShort(byte)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions short charToShort(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions short doubleToShort(double)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions short floatToShort(float)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions short identity(short)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions short intToShort(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions short longToShort(long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions void empty()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions void fillWithArguments(java.lang.Object[], int, java.lang.Object...)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="0"/>
  </item>
  <item name="sun.invoke.util.ValueConversions void ignore(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.ValueConversions.LazyStatics LazyStatics()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.VerifyAccess VerifyAccess()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.VerifyType VerifyType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.VerifyType boolean isNullType(java.lang.Class&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.Wrapper boolean boolValue(byte)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.Wrapper boolean isDoubleWord()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.Wrapper boolean isFloating()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.Wrapper boolean isIntegral()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.Wrapper boolean isNumeric()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.Wrapper boolean isOther()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.Wrapper boolean isSigned()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.Wrapper boolean isSingleWord()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.Wrapper boolean isSubwordOrInt()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.Wrapper boolean isUnsigned()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.Wrapper char basicTypeChar()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.Wrapper int bitWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.Wrapper int hashChar(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.Wrapper int stackSlots()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.Wrapper java.lang.Class&lt;?&gt; primitiveType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.Wrapper java.lang.Class&lt;?&gt; wrapperType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.Wrapper java.lang.Number numberValue(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.Wrapper java.lang.Object wrap(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.Wrapper java.lang.Object zero()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.Wrapper java.lang.RuntimeException newIllegalArgumentException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.Wrapper java.lang.String primitiveSimpleName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.Wrapper java.lang.String wrapperSimpleName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.Wrapper.Format Format()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.Wrapper.Format int floating(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.Wrapper.Format int format(int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.Wrapper.Format int other(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.Wrapper.Format int signed(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.invoke.util.Wrapper.Format int unsigned(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
</root>
