<root>
  <item name="sun.security.provider.certpath.AdaptableX509CertSelector AdaptableX509CertSelector()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.security.provider.certpath.AdaptableX509CertSelector void setValidityPeriod(java.util.Date, java.util.Date)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.security.provider.certpath.AlgorithmChecker AlgorithmChecker(java.security.AlgorithmConstraints)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.security.provider.certpath.AlgorithmChecker boolean isForwardCheckingSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.AlgorithmChecker java.util.Set&lt;java.lang.String&gt; getSupportedExtensions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.BasicChecker boolean isForwardCheckingSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.BasicChecker java.security.PublicKey getPublicKey()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.BasicChecker java.util.Set&lt;java.lang.String&gt; getSupportedExtensions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.BuildStep int getResult()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.BuildStep java.lang.String resultToString(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.BuildStep java.lang.Throwable getThrowable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.BuildStep java.security.cert.X509Certificate getCertificate()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.BuildStep sun.security.provider.certpath.Vertex getVertex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.CertId byte[] getIssuerKeyHash()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.CertId byte[] getIssuerNameHash()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.CertId sun.security.x509.AlgorithmId getHashAlgorithm()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.CertPathHelper CertPathHelper()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.ConstraintsChecker boolean isForwardCheckingSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.CrlRevocationChecker boolean isForwardCheckingSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.CrlRevocationChecker java.util.Set&lt;java.lang.String&gt; getSupportedExtensions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.CrlRevocationChecker.RejectKeySelector RejectKeySelector(java.util.Set&lt;java.security.PublicKey&gt;)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.security.provider.certpath.DistributionPointFetcher DistributionPointFetcher()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.ForwardBuilder.PKIXCertComparator PKIXCertComparator(java.util.Set&lt;javax.security.auth.x500.X500Principal&gt;)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.security.provider.certpath.ForwardState ForwardState()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.security.provider.certpath.ForwardState boolean isInitial()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.ForwardState boolean keyParamsNeeded()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.KeyChecker boolean isForwardCheckingSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.OCSP OCSP()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.OCSP.RevocationStatus.CertStatus CertStatus(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.security.provider.certpath.OCSPChecker boolean isForwardCheckingSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.OCSPChecker java.util.Set&lt;java.lang.String&gt; getSupportedExtensions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.OCSPRequest OCSPRequest(java.util.List&lt;sun.security.provider.certpath.CertId&gt;)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.security.provider.certpath.OCSPRequest OCSPRequest(sun.security.provider.certpath.CertId)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.security.provider.certpath.OCSPRequest java.util.List&lt;sun.security.provider.certpath.CertId&gt; getCertIds()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.OCSPResponse sun.security.provider.certpath.OCSPResponse.ResponseStatus getResponseStatus()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.OCSPResponse.ResponseStatus ResponseStatus(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.security.provider.certpath.OCSPResponse.SingleResponse java.security.cert.CRLReason getRevocationReason()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.OCSPResponse.SingleResponse java.util.Map&lt;java.lang.String,java.security.cert.Extension&gt; getSingleExtensions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.OCSPResponse.SingleResponse sun.security.provider.certpath.CertId getCertId()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.OCSPResponse.SingleResponse sun.security.provider.certpath.OCSP.RevocationStatus.CertStatus getCertStatus()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.PKIXCertPathValidator PKIXCertPathValidator()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.security.provider.certpath.PKIXMasterCertPathValidator PKIXMasterCertPathValidator(java.util.List&lt;java.security.cert.PKIXCertPathChecker&gt;)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.security.provider.certpath.PolicyChecker boolean isForwardCheckingSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.PolicyNodeImpl boolean isCritical()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.PolicyNodeImpl boolean isImmutable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.PolicyNodeImpl int getDepth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.PolicyNodeImpl java.lang.String getValidPolicy()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.PolicyNodeImpl java.lang.String policyToString(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.PolicyNodeImpl java.security.cert.PolicyNode getParent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.PolicyNodeImpl java.util.Set&lt;java.lang.String&gt; getExpectedPolicies()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.PolicyNodeImpl java.util.Set&lt;java.security.cert.PolicyQualifierInfo&gt; getPolicyQualifiers()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.ReverseBuilder.PKIXCertComparator PKIXCertComparator(sun.security.provider.certpath.ReverseBuilder)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.security.provider.certpath.ReverseState ReverseState()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.security.provider.certpath.ReverseState boolean isInitial()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.ReverseState boolean keyParamsNeeded()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.ReverseState void updateState(java.security.PublicKey, javax.security.auth.x500.X500Principal)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.security.provider.certpath.SunCertPathBuilder.CertStoreComparator CertStoreComparator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.SunCertPathBuilderException SunCertPathBuilderException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.security.provider.certpath.SunCertPathBuilderException SunCertPathBuilderException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.security.provider.certpath.SunCertPathBuilderException SunCertPathBuilderException(java.lang.String, java.lang.Throwable)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.security.provider.certpath.SunCertPathBuilderException SunCertPathBuilderException(java.lang.String, java.lang.Throwable, sun.security.provider.certpath.AdjacencyList)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.security.provider.certpath.SunCertPathBuilderException SunCertPathBuilderException(java.lang.String, sun.security.provider.certpath.AdjacencyList)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.security.provider.certpath.SunCertPathBuilderException sun.security.provider.certpath.AdjacencyList getAdjacencyList()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.SunCertPathBuilderParameters boolean getBuildForward()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.SunCertPathBuilderParameters void setBuildForward(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.security.provider.certpath.SunCertPathBuilderResult SunCertPathBuilderResult(java.security.cert.CertPath, java.security.cert.TrustAnchor, java.security.cert.PolicyNode, java.security.PublicKey, sun.security.provider.certpath.AdjacencyList)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.security.provider.certpath.SunCertPathBuilderResult sun.security.provider.certpath.AdjacencyList getAdjacencyList()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.URICertStore.LDAP LDAP()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.URICertStore.LDAP sun.security.provider.certpath.CertStoreHelper helper()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.URICertStore.URICertStoreParameters URICertStoreParameters(java.net.URI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.security.provider.certpath.UntrustedChecker UntrustedChecker()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.UntrustedChecker boolean isForwardCheckingSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.UntrustedChecker java.util.Set&lt;java.lang.String&gt; getSupportedExtensions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.UntrustedChecker void init(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.Vertex Vertex(java.security.cert.Certificate)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.security.provider.certpath.Vertex int getIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.Vertex java.lang.Throwable getThrowable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.Vertex java.security.cert.Certificate getCertificate()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.Vertex void setIndex(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.security.provider.certpath.Vertex void setThrowable(java.lang.Throwable)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.security.provider.certpath.X509CertPath java.util.List&lt;java.security.cert.X509Certificate&gt; getCertificates()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.X509CertificatePair X509CertificatePair()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.X509CertificatePair java.security.cert.X509Certificate getForward()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.security.provider.certpath.X509CertificatePair java.security.cert.X509Certificate getReverse()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
</root>
