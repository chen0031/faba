<root>
  <item name="sun.reflect.generics.factory.CoreReflectionFactory CoreReflectionFactory(java.lang.reflect.GenericDeclaration, sun.reflect.generics.scope.Scope)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.reflect.generics.factory.CoreReflectionFactory java.lang.reflect.GenericDeclaration getDecl()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.reflect.generics.factory.CoreReflectionFactory java.lang.reflect.Type makeBool()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.reflect.generics.factory.CoreReflectionFactory java.lang.reflect.Type makeByte()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.reflect.generics.factory.CoreReflectionFactory java.lang.reflect.Type makeChar()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.reflect.generics.factory.CoreReflectionFactory java.lang.reflect.Type makeDouble()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.reflect.generics.factory.CoreReflectionFactory java.lang.reflect.Type makeFloat()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.reflect.generics.factory.CoreReflectionFactory java.lang.reflect.Type makeInt()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.reflect.generics.factory.CoreReflectionFactory java.lang.reflect.Type makeLong()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.reflect.generics.factory.CoreReflectionFactory java.lang.reflect.Type makeShort()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.reflect.generics.factory.CoreReflectionFactory java.lang.reflect.Type makeVoid()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.reflect.generics.factory.CoreReflectionFactory java.lang.reflect.WildcardType makeWildcard(sun.reflect.generics.tree.FieldTypeSignature[], sun.reflect.generics.tree.FieldTypeSignature[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.reflect.generics.factory.CoreReflectionFactory sun.reflect.generics.factory.CoreReflectionFactory make(java.lang.reflect.GenericDeclaration, sun.reflect.generics.scope.Scope)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.reflect.generics.factory.CoreReflectionFactory sun.reflect.generics.scope.Scope getScope()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
</root>
