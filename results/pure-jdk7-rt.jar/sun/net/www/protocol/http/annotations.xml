<root>
  <item name="sun.net.www.protocol.http.AuthCacheImpl void setMap(java.util.HashMap)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.www.protocol.http.AuthCacheValue AuthCacheValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.AuthCacheValue.Type Type(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.www.protocol.http.AuthScheme AuthScheme(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.www.protocol.http.AuthenticationHeader boolean isPresent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.AuthenticationHeader java.lang.String raw()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.AuthenticationHeader sun.net.www.HeaderParser headerParser()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.AuthenticationHeader sun.net.www.protocol.http.HttpCallerInfo getHttpCallerInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.AuthenticationHeader.SchemeMapValue SchemeMapValue(sun.net.www.HeaderParser, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.www.protocol.http.AuthenticationInfo int getPort()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.AuthenticationInfo java.lang.String getHeaderName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.AuthenticationInfo java.lang.String getHost()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.AuthenticationInfo java.lang.String getPath()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.AuthenticationInfo java.lang.String getProtocolScheme()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.AuthenticationInfo java.lang.String getRealm()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.AuthenticationInfo java.net.PasswordAuthentication credentials()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.AuthenticationInfo sun.net.www.protocol.http.AuthCacheValue.Type getAuthType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.AuthenticationInfo sun.net.www.protocol.http.AuthScheme getAuthScheme()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.BasicAuthentication boolean isAuthorizationStale(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.BasicAuthentication boolean supportsPreemptiveAuthorization()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.BasicAuthentication java.lang.String getHeaderValue(java.net.URL, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.BasicAuthentication.BasicBASE64Encoder BasicBASE64Encoder(sun.net.www.protocol.http.BasicAuthentication)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.www.protocol.http.BasicAuthentication.BasicBASE64Encoder int bytesPerLine()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.DigestAuthentication boolean supportsPreemptiveAuthorization()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.DigestAuthentication.Parameters boolean authQop()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.DigestAuthentication.Parameters int getNCCount()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.DigestAuthentication.Parameters java.lang.String getAlgorithm()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.DigestAuthentication.Parameters java.lang.String getCachedHA1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.DigestAuthentication.Parameters java.lang.String getNonce()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.DigestAuthentication.Parameters java.lang.String getOpaque()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.DigestAuthentication.Parameters void incrementNC()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.www.protocol.http.DigestAuthentication.Parameters void setAlgorithm(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.www.protocol.http.DigestAuthentication.Parameters void setCachedHA1(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.www.protocol.http.DigestAuthentication.Parameters void setNonce(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.www.protocol.http.DigestAuthentication.Parameters void setOpaque(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.www.protocol.http.EmptyInputStream EmptyInputStream()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.EmptyInputStream int available()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.EmptyInputStream int read()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.Handler Handler()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.www.protocol.http.Handler Handler(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.www.protocol.http.Handler int getDefaultPort()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.HttpCallerInfo HttpCallerInfo(java.net.URL, java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.www.protocol.http.HttpCallerInfo HttpCallerInfo(sun.net.www.protocol.http.HttpCallerInfo, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.www.protocol.http.HttpURLConnection boolean streaming()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.HttpURLConnection int getConnectTimeout()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.HttpURLConnection int getReadTimeout()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.HttpURLConnection java.io.InputStream getErrorStream()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.HttpURLConnection java.lang.Object authObj()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.HttpURLConnection java.lang.String getMethod()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.HttpURLConnection java.net.CookieHandler getCookieHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.HttpURLConnection sun.net.www.protocol.http.HttpURLConnection.TunnelState tunnelState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.HttpURLConnection sun.util.logging.PlatformLogger getHttpLogger()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.HttpURLConnection void authObj(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.www.protocol.http.HttpURLConnection void setConnectTimeout(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.www.protocol.http.HttpURLConnection void setReadTimeout(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.www.protocol.http.HttpURLConnection void setTunnelState(sun.net.www.protocol.http.HttpURLConnection.TunnelState)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.www.protocol.http.HttpURLConnection.ErrorStream ErrorStream(java.nio.ByteBuffer)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.www.protocol.http.HttpURLConnection.ErrorStream ErrorStream(java.nio.ByteBuffer, java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.www.protocol.http.HttpURLConnection.HttpInputStream HttpInputStream(sun.net.www.protocol.http.HttpURLConnection, java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.www.protocol.http.HttpURLConnection.StreamingOutputStream StreamingOutputStream(sun.net.www.protocol.http.HttpURLConnection, java.io.OutputStream, long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.www.protocol.http.HttpURLConnection.StreamingOutputStream boolean writtenOK()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.HttpURLConnection.TunnelState TunnelState(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.www.protocol.http.NTLMAuthenticationProxy NTLMAuthenticationProxy(java.lang.reflect.Constructor&lt;? extends sun.net.www.protocol.http.AuthenticationInfo&gt;, java.lang.reflect.Constructor&lt;? extends sun.net.www.protocol.http.AuthenticationInfo&gt;)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.www.protocol.http.NegotiateAuthentication boolean isAuthorizationStale(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.NegotiateAuthentication boolean supportsPreemptiveAuthorization()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.NegotiateAuthentication java.lang.String getHeaderValue(java.net.URL, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.NegotiateAuthentication.B64Encoder B64Encoder(sun.net.www.protocol.http.NegotiateAuthentication)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.www.protocol.http.NegotiateAuthentication.B64Encoder int bytesPerLine()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.www.protocol.http.Negotiator Negotiator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
</root>
