<root>
  <item name="sun.net.httpserver.AuthFilter AuthFilter(com.sun.net.httpserver.Authenticator)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.httpserver.AuthFilter java.lang.String description()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.AuthFilter void setAuthenticator(com.sun.net.httpserver.Authenticator)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.httpserver.ChunkedInputStream boolean markSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.ChunkedInputStream int numeric(char[], int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.ChunkedInputStream void mark(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.ChunkedInputStream void reset()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.ChunkedOutputStream ChunkedOutputStream(sun.net.httpserver.ExchangeImpl, java.io.OutputStream)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.httpserver.Code Code()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.Code java.lang.String msg(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.ContextList ContextList()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.httpserver.Event Event(sun.net.httpserver.ExchangeImpl)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.httpserver.ExchangeImpl com.sun.net.httpserver.Headers getResponseHeaders()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.ExchangeImpl com.sun.net.httpserver.HttpPrincipal getPrincipal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.ExchangeImpl int getResponseCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.ExchangeImpl java.io.OutputStream getResponseBody()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.httpserver.ExchangeImpl java.lang.String getRequestMethod()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.ExchangeImpl java.net.URI getRequestURI()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.ExchangeImpl sun.net.httpserver.HttpConnection getConnection()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.ExchangeImpl sun.net.httpserver.LeftOverInputStream getOriginalInputStream()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.ExchangeImpl void setPrincipal(com.sun.net.httpserver.HttpPrincipal)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.httpserver.ExchangeImpl void setStreams(java.io.InputStream, java.io.OutputStream)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.httpserver.FixedLengthInputStream boolean markSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.FixedLengthInputStream void mark(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.FixedLengthInputStream void reset()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.FixedLengthOutputStream FixedLengthOutputStream(sun.net.httpserver.ExchangeImpl, java.io.OutputStream, long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.httpserver.HttpConnection HttpConnection()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.httpserver.HttpConnection int getRemaining()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.HttpConnection java.io.InputStream getInputStream()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.HttpConnection java.io.OutputStream getRawOutputStream()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.HttpConnection java.lang.String getProtocol()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.HttpConnection java.nio.channels.SelectionKey getSelectionKey()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.HttpConnection java.nio.channels.SocketChannel getChannel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.HttpConnection javax.net.ssl.SSLContext getSSLContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.HttpConnection javax.net.ssl.SSLEngine getSSLEngine()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.HttpConnection sun.net.httpserver.HttpConnection.State getState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.HttpConnection sun.net.httpserver.HttpContextImpl getHttpContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.HttpConnection void setChannel(java.nio.channels.SocketChannel)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.httpserver.HttpConnection void setContext(sun.net.httpserver.HttpContextImpl)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.httpserver.HttpConnection void setRemaining(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.httpserver.HttpConnection void setState(sun.net.httpserver.HttpConnection.State)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.httpserver.HttpConnection.State State(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.httpserver.HttpContextImpl com.sun.net.httpserver.Authenticator getAuthenticator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.HttpContextImpl com.sun.net.httpserver.HttpHandler getHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.HttpContextImpl java.lang.String getPath()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.HttpContextImpl java.lang.String getProtocol()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.HttpContextImpl java.util.List&lt;com.sun.net.httpserver.Filter&gt; getFilters()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.HttpContextImpl java.util.List&lt;com.sun.net.httpserver.Filter&gt; getSystemFilters()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.HttpContextImpl java.util.Map&lt;java.lang.String,java.lang.Object&gt; getAttributes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.HttpContextImpl sun.net.httpserver.ServerImpl getServerImpl()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.HttpContextImpl void setHandler(com.sun.net.httpserver.HttpHandler)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.httpserver.HttpError HttpError(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.httpserver.HttpExchangeImpl HttpExchangeImpl(sun.net.httpserver.ExchangeImpl)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.httpserver.HttpExchangeImpl sun.net.httpserver.ExchangeImpl getExchangeImpl()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.HttpsExchangeImpl HttpsExchangeImpl(sun.net.httpserver.ExchangeImpl)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.httpserver.HttpsExchangeImpl sun.net.httpserver.ExchangeImpl getExchangeImpl()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.LeftOverInputStream boolean isClosed()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.LeftOverInputStream boolean isEOF()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.PlaceholderOutputStream PlaceholderOutputStream(java.io.OutputStream)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.httpserver.PlaceholderOutputStream boolean isWrapped()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.PlaceholderOutputStream void checkWrap()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.PlaceholderOutputStream void setWrappedStream(java.io.OutputStream)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.httpserver.Request java.io.InputStream inputStream()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.Request java.io.OutputStream outputStream()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.Request java.lang.String requestLine()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.Request.ReadStream boolean markSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.SSLStreams javax.net.ssl.SSLEngine getSSLEngine()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.SSLStreams.BufType BufType(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.httpserver.SSLStreams.EngineWrapper void close()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.SSLStreams.InputStream boolean markSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.SSLStreams.InputStream void reset()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.SSLStreams.OutputStream void flush()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.SSLStreams.Parameters Parameters(sun.net.httpserver.SSLStreams, com.sun.net.httpserver.HttpsConfigurator, java.net.InetSocketAddress)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.httpserver.SSLStreams.Parameters com.sun.net.httpserver.HttpsConfigurator getHttpsConfigurator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.SSLStreams.Parameters java.net.InetSocketAddress getClientAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.SSLStreams.Parameters javax.net.ssl.SSLParameters getSSLParameters()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.SSLStreams.Parameters void setSSLParameters(javax.net.ssl.SSLParameters)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.httpserver.SSLStreams.WrapperResult WrapperResult(sun.net.httpserver.SSLStreams)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.httpserver.ServerConfig ServerConfig()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.ServerConfig boolean debugEnabled()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.ServerConfig boolean noDelay()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.ServerConfig int getClockTick()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.ServerConfig int getMaxIdleConnections()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.ServerConfig int getMaxReqHeaders()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.ServerConfig long getDrainAmount()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.ServerConfig long getIdleInterval()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.ServerConfig long getMaxReqTime()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.ServerConfig long getMaxRspTime()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.ServerConfig long getTimerMillis()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.ServerImpl com.sun.net.httpserver.HttpServer getWrapper()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.ServerImpl com.sun.net.httpserver.HttpsConfigurator getHttpsConfigurator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.ServerImpl int endExchange()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.httpserver.ServerImpl java.nio.channels.Selector getSelector()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.ServerImpl java.util.concurrent.Executor getExecutor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.ServerImpl java.util.logging.Logger getLogger()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.ServerImpl long getTicks()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.ServerImpl long getTime()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.ServerImpl long getTimeMillis(long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.ServerImpl void setExecutor(java.util.concurrent.Executor)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.httpserver.ServerImpl void startExchange()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.httpserver.ServerImpl.DefaultExecutor DefaultExecutor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.ServerImpl.Dispatcher Dispatcher(sun.net.httpserver.ServerImpl)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.httpserver.ServerImpl.Exchange Exchange(sun.net.httpserver.ServerImpl, java.nio.channels.SocketChannel, java.lang.String, sun.net.httpserver.HttpConnection)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.httpserver.ServerImpl.Exchange.LinkHandler LinkHandler(sun.net.httpserver.ServerImpl.Exchange, com.sun.net.httpserver.Filter.Chain)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.httpserver.ServerImpl.ServerTimerTask ServerTimerTask(sun.net.httpserver.ServerImpl)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.httpserver.ServerImpl.ServerTimerTask1 ServerTimerTask1(sun.net.httpserver.ServerImpl)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.httpserver.StreamClosedException StreamClosedException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.httpserver.UndefLengthOutputStream UndefLengthOutputStream(sun.net.httpserver.ExchangeImpl, java.io.OutputStream)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.net.httpserver.UnmodifiableHeaders java.util.List&lt;java.lang.String&gt; remove(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.UnmodifiableHeaders void add(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.UnmodifiableHeaders void clear()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.UnmodifiableHeaders void putAll(java.util.Map&lt;? extends java.lang.String,? extends java.util.List&lt;java.lang.String&gt;&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.UnmodifiableHeaders void set(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="sun.net.httpserver.WriteFinishedEvent WriteFinishedEvent(sun.net.httpserver.ExchangeImpl)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
</root>
