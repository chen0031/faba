<root>
  <item name="java.net.AbstractPlainDatagramSocketImpl AbstractPlainDatagramSocketImpl()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.AbstractPlainDatagramSocketImpl boolean isClosed()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.AbstractPlainDatagramSocketImpl boolean nativeConnectDisabled()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.AbstractPlainSocketImpl AbstractPlainSocketImpl()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.AbstractPlainSocketImpl boolean isClosedOrPending()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.AbstractPlainSocketImpl boolean isConnectionReset()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.AbstractPlainSocketImpl boolean isConnectionResetPending()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.AbstractPlainSocketImpl boolean supportsUrgentData()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.AbstractPlainSocketImpl int getTimeout()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.AbstractPlainSocketImpl java.io.FileDescriptor acquireFD()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.AbstractPlainSocketImpl void setAddress(java.net.InetAddress)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.AbstractPlainSocketImpl void setConnectionReset()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.AbstractPlainSocketImpl void setConnectionResetPending()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.AbstractPlainSocketImpl void setFileDescriptor(java.io.FileDescriptor)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.AbstractPlainSocketImpl void setInputStream(java.net.SocketInputStream)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.AbstractPlainSocketImpl void setLocalPort(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.AbstractPlainSocketImpl void setPort(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.Authenticator Authenticator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.Authenticator int getRequestingPort()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.Authenticator java.lang.String getRequestingHost()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.Authenticator java.lang.String getRequestingPrompt()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.Authenticator java.lang.String getRequestingProtocol()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.Authenticator java.lang.String getRequestingScheme()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.Authenticator java.net.Authenticator.RequestorType getRequestorType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.Authenticator java.net.InetAddress getRequestingSite()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.Authenticator java.net.PasswordAuthentication getPasswordAuthentication()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.Authenticator java.net.URL getRequestingURL()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.Authenticator void reset()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.Authenticator.RequestorType RequestorType(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.BindException BindException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.BindException BindException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.CacheRequest CacheRequest()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.CacheResponse CacheResponse()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.ConnectException ConnectException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.ConnectException ConnectException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.ContentHandler ContentHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.CookieHandler CookieHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.CookieManager boolean pathMatches(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.CookieManager java.net.CookieStore getCookieStore()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.CookieManager void setCookiePolicy(java.net.CookiePolicy)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.CookieManager.CookiePathComparator CookiePathComparator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.CookieManager.CookiePathComparator int compare(java.net.HttpCookie, java.net.HttpCookie)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.DatagramPacket DatagramPacket(byte[], int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.DatagramPacket DatagramPacket(byte[], int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.DatagramPacket byte[] getData()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.DatagramPacket int getLength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.DatagramPacket int getOffset()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.DatagramPacket int getPort()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.DatagramPacket java.net.InetAddress getAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.DatagramPacket void setAddress(java.net.InetAddress)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.DatagramPacket void setData(byte[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.DatagramPacket void setData(byte[], int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.DatagramPacket void setLength(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.DatagramSocket boolean isBound()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.DatagramSocket boolean isClosed()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.DatagramSocket boolean isConnected()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.DatagramSocket int getPort()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.DatagramSocket java.net.InetAddress getInetAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.DatagramSocket java.nio.channels.DatagramChannel getChannel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.DatagramSocketImpl DatagramSocketImpl()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.DatagramSocketImpl int dataAvailable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.DatagramSocketImpl int getLocalPort()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.DatagramSocketImpl java.io.FileDescriptor getFileDescriptor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.DatagramSocketImpl java.net.DatagramSocket getDatagramSocket()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.DatagramSocketImpl void connect(java.net.InetAddress, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.DatagramSocketImpl void disconnect()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.DatagramSocketImpl void setDatagramSocket(java.net.DatagramSocket)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.DefaultDatagramSocketImplFactory DefaultDatagramSocketImplFactory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.DefaultInterface DefaultInterface()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.DefaultInterface java.net.NetworkInterface getDefault()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie boolean getDiscard()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie boolean getSecure()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie boolean isHttpOnly()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie boolean isToken(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie int getVersion()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie java.lang.String getComment()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie java.lang.String getCommentURL()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie java.lang.String getDomain()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie java.lang.String getPath()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie java.lang.String getPortlist()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie java.lang.String getValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie java.lang.String header()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie long getMaxAge()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie void setComment(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.HttpCookie void setCommentURL(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.HttpCookie void setDiscard(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.HttpCookie void setHttpOnly(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.HttpCookie void setMaxAge(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.HttpCookie void setPath(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.HttpCookie void setPortlist(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.HttpCookie void setSecure(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.HttpCookie void setValue(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.HttpCookie void setVersion(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.HttpRetryException HttpRetryException(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.HttpRetryException HttpRetryException(java.lang.String, int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.HttpRetryException int responseCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.HttpRetryException java.lang.String getLocation()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.HttpURLConnection HttpURLConnection(java.net.URL)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.HttpURLConnection boolean getFollowRedirects()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.HttpURLConnection boolean getInstanceFollowRedirects()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.HttpURLConnection java.io.InputStream getErrorStream()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.HttpURLConnection java.lang.String getHeaderField(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.HttpURLConnection java.lang.String getHeaderFieldKey(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.HttpURLConnection java.lang.String getRequestMethod()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.HttpURLConnection void setChunkedStreamingMode(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.HttpURLConnection void setFixedLengthStreamingMode(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.HttpURLConnection void setFixedLengthStreamingMode(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.HttpURLConnection void setInstanceFollowRedirects(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.IDN IDN()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.IDN boolean isAllASCII(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.IDN boolean isNonLDHAsciiCodePoint(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.IDN boolean startsWithACEPrefix(java.lang.StringBuffer)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.IDN char toASCIILower(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.IDN int searchDots(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.IDN java.lang.StringBuffer toASCIILower(java.lang.StringBuffer)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.Inet4Address boolean isMCNodeLocal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.Inet4AddressImpl Inet4AddressImpl()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.Inet6Address boolean differentLocalAddressTypes(byte[], byte[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.Inet6Address boolean isLinkLocalAddress(byte[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.Inet6Address boolean isSiteLocalAddress(byte[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.Inet6Address int getScopeId()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.Inet6Address java.net.NetworkInterface getScopedInterface()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.Inet6Address.Inet6AddressHolder Inet6AddressHolder(java.net.Inet6Address)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.Inet6Address.Inet6AddressHolder Inet6AddressHolder(java.net.Inet6Address, byte[], int, boolean, java.net.NetworkInterface, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.Inet6Address.Inet6AddressHolder boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.Inet6Address.Inet6AddressHolder boolean isAnyLocalAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.Inet6Address.Inet6AddressHolder boolean isIPv4CompatibleAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.Inet6Address.Inet6AddressHolder boolean isLinkLocalAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.Inet6Address.Inet6AddressHolder boolean isLoopbackAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.Inet6Address.Inet6AddressHolder boolean isMCGlobal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.Inet6Address.Inet6AddressHolder boolean isMCLinkLocal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.Inet6Address.Inet6AddressHolder boolean isMCNodeLocal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.Inet6Address.Inet6AddressHolder boolean isMCOrgLocal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.Inet6Address.Inet6AddressHolder boolean isMCSiteLocal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.Inet6Address.Inet6AddressHolder boolean isMulticastAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.Inet6Address.Inet6AddressHolder boolean isSiteLocalAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.Inet6Address.Inet6AddressHolder int hashCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.Inet6AddressImpl Inet6AddressImpl()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.InetAddress InetAddress()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.InetAddress boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.InetAddress boolean isAnyLocalAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.InetAddress boolean isLinkLocalAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.InetAddress boolean isLoopbackAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.InetAddress boolean isMCGlobal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.InetAddress boolean isMCLinkLocal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.InetAddress boolean isMCNodeLocal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.InetAddress boolean isMCOrgLocal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.InetAddress boolean isMCSiteLocal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.InetAddress boolean isMulticastAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.InetAddress boolean isSiteLocalAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.InetAddress byte[] getAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.InetAddress int hashCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.InetAddress java.lang.String getHostAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.InetAddress java.net.InetAddress.InetAddressHolder holder()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.InetAddress.Cache int getPolicy()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.InetAddress.Cache.Type Type(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.InetAddress.CacheEntry CacheEntry(java.net.InetAddress[], long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.InetAddress.InetAddressHolder InetAddressHolder()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.InetAddress.InetAddressHolder InetAddressHolder(java.lang.String, int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.InetAddress.InetAddressHolder int getAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.InetAddress.InetAddressHolder int getFamily()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.InetAddress.InetAddressHolder java.lang.String getHostName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.InetAddress.InetAddressHolder void init(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.InetAddressContainer InetAddressContainer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.InetAddressImplFactory InetAddressImplFactory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.InetSocketAddress InetSocketAddress(int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.InetSocketAddress boolean isUnresolved()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.InetSocketAddress int getPort()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.InetSocketAddress java.lang.String checkHost(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.InetSocketAddress java.net.InetAddress getAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.InetSocketAddress void readObjectNoData()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.InetSocketAddress.InetSocketAddressHolder InetSocketAddressHolder(java.lang.String, java.net.InetAddress, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.InetSocketAddress.InetSocketAddressHolder boolean isUnresolved()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.InetSocketAddress.InetSocketAddressHolder int getPort()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.InetSocketAddress.InetSocketAddressHolder java.net.InetAddress getAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.InterfaceAddress InterfaceAddress()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.InterfaceAddress java.net.InetAddress getAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.InterfaceAddress java.net.InetAddress getBroadcast()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.InterfaceAddress short getNetworkPrefixLength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.JarURLConnection java.lang.String getEntryName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.JarURLConnection java.net.URL getJarFileURL()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.MalformedURLException MalformedURLException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.MalformedURLException MalformedURLException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.NetUtil NetUtil()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.NetworkInterface NetworkInterface()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.NetworkInterface NetworkInterface(java.lang.String, int, java.net.InetAddress[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.NetworkInterface boolean isVirtual()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.NetworkInterface int getIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.NetworkInterface java.lang.String getDisplayName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.NetworkInterface java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.NetworkInterface java.net.NetworkInterface getDefault()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.NetworkInterface java.net.NetworkInterface getParent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.NetworkInterface java.util.Enumeration&lt;java.net.NetworkInterface&gt; getSubInterfaces()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.NetworkInterface.1checkedAddresses boolean hasMoreElements()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.NetworkInterface.1checkedAddresses java.net.InetAddress nextElement()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.NetworkInterface.1subIFs 1subIFs(java.net.NetworkInterface)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.NetworkInterface.1subIFs boolean hasMoreElements()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.NetworkInterface.1subIFs java.net.NetworkInterface nextElement()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.NoRouteToHostException NoRouteToHostException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.NoRouteToHostException NoRouteToHostException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.Parts java.lang.String getPath()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.Parts java.lang.String getQuery()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.Parts java.lang.String getRef()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.PasswordAuthentication char[] getPassword()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.PasswordAuthentication java.lang.String getUserName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.PlainDatagramSocketImpl PlainDatagramSocketImpl()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.PlainSocketImpl PlainSocketImpl()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.PlainSocketImpl PlainSocketImpl(java.io.FileDescriptor)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.PortUnreachableException PortUnreachableException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.PortUnreachableException PortUnreachableException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.ProtocolException ProtocolException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.ProtocolException ProtocolException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.Proxy Proxy()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.Proxy java.net.Proxy.Type type()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.Proxy java.net.SocketAddress address()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.Proxy.Type Type(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.ProxySelector ProxySelector()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.ResponseCache ResponseCache()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.SdpSocketImpl SdpSocketImpl()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.SecureCacheResponse SecureCacheResponse()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.ServerSocket boolean isBound()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.ServerSocket boolean isClosed()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.ServerSocket java.nio.channels.ServerSocketChannel getChannel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.ServerSocket void setBound()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.ServerSocket void setCreated()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.ServerSocket void setPerformancePreferences(int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.Socket boolean isBound()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.Socket boolean isClosed()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.Socket boolean isConnected()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.Socket boolean isInputShutdown()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.Socket boolean isOutputShutdown()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.Socket java.nio.channels.SocketChannel getChannel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.Socket void postAccept()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.Socket void setBound()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.Socket void setConnected()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.Socket void setCreated()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.Socket void setPerformancePreferences(int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.SocketAddress SocketAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.SocketException SocketException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.SocketException SocketException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.SocketImpl SocketImpl()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.SocketImpl boolean supportsUrgentData()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.SocketImpl int getLocalPort()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.SocketImpl int getPort()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.SocketImpl java.io.FileDescriptor getFileDescriptor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.SocketImpl java.net.InetAddress getInetAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.SocketImpl java.net.ServerSocket getServerSocket()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.SocketImpl java.net.Socket getSocket()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.SocketImpl void reset()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.SocketImpl void setPerformancePreferences(int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.SocketImpl void setServerSocket(java.net.ServerSocket)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.SocketImpl void setSocket(java.net.Socket)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.SocketImpl void shutdownInput()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.SocketImpl void shutdownOutput()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.SocketInputStream java.nio.channels.FileChannel getChannel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.SocketInputStream void finalize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.SocketInputStream void setEOF(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.SocketOutputStream java.nio.channels.FileChannel getChannel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.SocketOutputStream void finalize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.SocketPermission boolean includesEphemerals()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.SocketPermission int getMask()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.SocketPermission java.security.PermissionCollection newPermissionCollection()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.SocketPermission void setDeny()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.SocketPermissionCollection SocketPermissionCollection()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.SocketSecrets SocketSecrets()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.SocketTimeoutException SocketTimeoutException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.SocketTimeoutException SocketTimeoutException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.SocksSocketImpl SocksSocketImpl()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.SocksSocketImpl SocksSocketImpl(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.SocksSocketImpl void setV4()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.StandardProtocolFamily StandardProtocolFamily(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.StandardSocketOptions StandardSocketOptions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.StandardSocketOptions.StdSocketOption StdSocketOption(java.lang.String, java.lang.Class&lt;T&gt;)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.StandardSocketOptions.StdSocketOption java.lang.Class&lt;T&gt; type()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.StandardSocketOptions.StdSocketOption java.lang.String name()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.StandardSocketOptions.StdSocketOption java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URI URI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.URI boolean equal(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URI boolean equalIgnoringCase(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URI boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URI boolean isAbsolute()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URI boolean isOpaque()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URI boolean match(char, long, long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URI byte decode(char, char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URI int compare(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URI int compareIgnoringCase(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URI int compareTo(java.net.URI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URI int decode(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URI int getPort()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URI int hash(int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="1"/>
  </item>
  <item name="java.net.URI int hashIgnoringCase(int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URI int join(char[], int[])">
    <annotation name="org.jetbrains.annotations.ParamChange" params="0"/>
  </item>
  <item name="java.net.URI int needsNormalization(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URI int toLower(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URI java.lang.String getHost()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URI java.lang.String getRawAuthority()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URI java.lang.String getRawFragment()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URI java.lang.String getRawPath()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URI java.lang.String getRawQuery()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URI java.lang.String getRawUserInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URI java.lang.String getScheme()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URI long highMask(char, char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URI long highMask(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URI long lowMask(char, char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URI long lowMask(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URI void appendEscape(java.lang.StringBuffer, byte)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="0"/>
  </item>
  <item name="java.net.URI void checkPath(java.lang.String, java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URI void maybeAddLeadingDot(char[], int[])">
    <annotation name="org.jetbrains.annotations.ParamChange" params="0,1"/>
  </item>
  <item name="java.net.URI void removeDots(char[], int[])">
    <annotation name="org.jetbrains.annotations.ParamChange" params="1"/>
  </item>
  <item name="java.net.URI void split(char[], int[])">
    <annotation name="org.jetbrains.annotations.ParamChange" params="0,1"/>
  </item>
  <item name="java.net.URI.Parser Parser(java.net.URI, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
    <annotation name="org.jetbrains.annotations.ParamChange" params="0"/>
  </item>
  <item name="java.net.URI.Parser boolean at(int, int, char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URI.Parser boolean at(int, int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URI.Parser char charAt(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URI.Parser int scan(int, int, char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URI.Parser int scan(int, int, java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URI.Parser void fail(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URI.Parser void fail(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URISyntaxException URISyntaxException(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.URISyntaxException URISyntaxException(java.lang.String, java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.URISyntaxException int getIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URISyntaxException java.lang.String getInput()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URL int getPort()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URL java.lang.String getAuthority()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URL java.lang.String getFile()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URL java.lang.String getHost()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URL java.lang.String getPath()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URL java.lang.String getProtocol()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URL java.lang.String getQuery()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URL java.lang.String getRef()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URL java.lang.String getUserInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URLConnection URLConnection(java.net.URL)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.URLConnection boolean getAllowUserInteraction()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URLConnection boolean getDefaultAllowUserInteraction()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URLConnection boolean getDefaultUseCaches()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URLConnection boolean getDoInput()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URLConnection boolean getDoOutput()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URLConnection boolean getUseCaches()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URLConnection int getConnectTimeout()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URLConnection int getReadTimeout()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URLConnection java.io.InputStream getInputStream()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URLConnection java.io.OutputStream getOutputStream()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URLConnection java.lang.String getDefaultRequestProperty(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URLConnection java.lang.String getHeaderField(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URLConnection java.lang.String getHeaderField(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URLConnection java.lang.String getHeaderFieldKey(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URLConnection java.net.URL getURL()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URLConnection java.security.Permission getPermission()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URLConnection java.util.Map&lt;java.lang.String,java.util.List&lt;java.lang.String&gt;&gt; getHeaderFields()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URLConnection long getIfModifiedSince()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URLConnection void setAllowUserInteraction(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.URLConnection void setConnectTimeout(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.URLConnection void setDefaultRequestProperty(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URLConnection void setDoInput(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.URLConnection void setDoOutput(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.URLConnection void setIfModifiedSince(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.URLConnection void setReadTimeout(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.URLConnection void setUseCaches(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.URLDecoder URLDecoder()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URLEncoder URLEncoder()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URLStreamHandler URLStreamHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URLStreamHandler int getDefaultPort()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.URLStreamHandler java.net.URLConnection openConnection(java.net.URL, java.net.Proxy)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.UnknownContentHandler UnknownContentHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.net.UnknownHostException UnknownHostException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.UnknownHostException UnknownHostException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.UnknownServiceException UnknownServiceException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.net.UnknownServiceException UnknownServiceException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
</root>
