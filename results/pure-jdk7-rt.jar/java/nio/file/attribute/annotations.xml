<root>
  <item name="java.nio.file.attribute.AclEntry AclEntry(java.nio.file.attribute.AclEntryType, java.nio.file.attribute.UserPrincipal, java.util.Set&lt;java.nio.file.attribute.AclEntryPermission&gt;, java.util.Set&lt;java.nio.file.attribute.AclEntryFlag&gt;)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.nio.file.attribute.AclEntry java.nio.file.attribute.AclEntry.Builder newBuilder()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.nio.file.attribute.AclEntry java.nio.file.attribute.AclEntry.Builder newBuilder(java.nio.file.attribute.AclEntry)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.nio.file.attribute.AclEntry java.nio.file.attribute.AclEntryType type()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.nio.file.attribute.AclEntry java.nio.file.attribute.UserPrincipal principal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.nio.file.attribute.AclEntry.Builder Builder(java.nio.file.attribute.AclEntryType, java.nio.file.attribute.UserPrincipal, java.util.Set&lt;java.nio.file.attribute.AclEntryPermission&gt;, java.util.Set&lt;java.nio.file.attribute.AclEntryFlag&gt;)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.nio.file.attribute.AclEntry.Builder java.nio.file.attribute.AclEntry build()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.nio.file.attribute.AclEntry.Builder java.nio.file.attribute.AclEntry.Builder setPrincipal(java.nio.file.attribute.UserPrincipal)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.nio.file.attribute.AclEntry.Builder java.nio.file.attribute.AclEntry.Builder setType(java.nio.file.attribute.AclEntryType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.nio.file.attribute.AclEntryFlag AclEntryFlag(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.nio.file.attribute.AclEntryPermission AclEntryPermission(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.nio.file.attribute.AclEntryType AclEntryType(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.nio.file.attribute.FileTime FileTime(long, java.util.concurrent.TimeUnit)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.nio.file.attribute.FileTime java.nio.file.attribute.FileTime from(long, java.util.concurrent.TimeUnit)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.nio.file.attribute.FileTime java.nio.file.attribute.FileTime fromMillis(long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.nio.file.attribute.FileTime.DaysAndNanos int compareTo(java.nio.file.attribute.FileTime.DaysAndNanos)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.nio.file.attribute.FileTime.DaysAndNanos int hashCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.nio.file.attribute.FileTime.DaysAndNanos long fractionOfSecondInNanos()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.nio.file.attribute.PosixFilePermission PosixFilePermission(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.nio.file.attribute.PosixFilePermissions PosixFilePermissions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.nio.file.attribute.PosixFilePermissions boolean isR(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.nio.file.attribute.PosixFilePermissions boolean isSet(char, char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.nio.file.attribute.PosixFilePermissions boolean isW(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.nio.file.attribute.PosixFilePermissions boolean isX(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.nio.file.attribute.UserPrincipalLookupService UserPrincipalLookupService()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.nio.file.attribute.UserPrincipalNotFoundException UserPrincipalNotFoundException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.nio.file.attribute.UserPrincipalNotFoundException java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
</root>
