<root>
  <item name="java.nio.file.spi.FileSystemProvider FileSystemProvider(java.lang.Void)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.nio.file.spi.FileSystemProvider java.nio.channels.AsynchronousFileChannel newAsynchronousFileChannel(java.nio.file.Path, java.util.Set&lt;? extends java.nio.file.OpenOption&gt;, java.util.concurrent.ExecutorService, java.nio.file.attribute.FileAttribute&lt;?&gt;...)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.nio.file.spi.FileSystemProvider java.nio.channels.FileChannel newFileChannel(java.nio.file.Path, java.util.Set&lt;? extends java.nio.file.OpenOption&gt;, java.nio.file.attribute.FileAttribute&lt;?&gt;...)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.nio.file.spi.FileSystemProvider java.nio.file.FileSystem newFileSystem(java.nio.file.Path, java.util.Map&lt;java.lang.String,?&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.nio.file.spi.FileSystemProvider java.nio.file.Path readSymbolicLink(java.nio.file.Path)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.nio.file.spi.FileSystemProvider void createLink(java.nio.file.Path, java.nio.file.Path)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.nio.file.spi.FileSystemProvider void createSymbolicLink(java.nio.file.Path, java.nio.file.Path, java.nio.file.attribute.FileAttribute&lt;?&gt;...)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.nio.file.spi.FileTypeDetector FileTypeDetector(java.lang.Void)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
</root>
