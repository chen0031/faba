<root>
  <item name="java.util.prefs.AbstractPreferences boolean isRemoved()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.AbstractPreferences java.lang.String absolutePath()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.AbstractPreferences java.lang.String name()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.AbstractPreferences java.util.prefs.NodeChangeListener[] nodeListeners()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.AbstractPreferences java.util.prefs.PreferenceChangeListener[] prefListeners()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.AbstractPreferences java.util.prefs.Preferences parent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.AbstractPreferences void removeNodeChangeListener(java.util.prefs.NodeChangeListener)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.util.prefs.AbstractPreferences void removePreferenceChangeListener(java.util.prefs.PreferenceChangeListener)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.util.prefs.AbstractPreferences.NodeAddedEvent NodeAddedEvent(java.util.prefs.AbstractPreferences, java.util.prefs.Preferences, java.util.prefs.Preferences)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.util.prefs.AbstractPreferences.NodeRemovedEvent NodeRemovedEvent(java.util.prefs.AbstractPreferences, java.util.prefs.Preferences, java.util.prefs.Preferences)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.util.prefs.BackingStoreException BackingStoreException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.util.prefs.Base64 Base64()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.FileSystemPreferences boolean isDirChar(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.FileSystemPreferences boolean isUserNode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.FileSystemPreferences void flushSpi()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.FileSystemPreferences.Change Change(java.util.prefs.FileSystemPreferences)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.util.prefs.FileSystemPreferences.NodeCreate NodeCreate(java.util.prefs.FileSystemPreferences)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.util.prefs.FileSystemPreferences.NodeCreate void replay()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.FileSystemPreferences.Put Put(java.util.prefs.FileSystemPreferences, java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.util.prefs.FileSystemPreferences.Remove Remove(java.util.prefs.FileSystemPreferences, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.util.prefs.FileSystemPreferencesFactory FileSystemPreferencesFactory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.InvalidPreferencesFormatException InvalidPreferencesFormatException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.util.prefs.InvalidPreferencesFormatException InvalidPreferencesFormatException(java.lang.String, java.lang.Throwable)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.util.prefs.MacOSXPreferences void flushSpi()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.MacOSXPreferences void syncSpi()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.MacOSXPreferencesFactory MacOSXPreferencesFactory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.MacOSXPreferencesFile MacOSXPreferencesFile(java.lang.String, long, long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.util.prefs.MacOSXPreferencesFile java.lang.String name()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.MacOSXPreferencesFile long host()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.MacOSXPreferencesFile long user()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.MacOSXPreferencesFile.FlushTask FlushTask(java.util.prefs.MacOSXPreferencesFile)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.util.prefs.MacOSXPreferencesFile.SyncTask SyncTask(java.util.prefs.MacOSXPreferencesFile)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.util.prefs.NodeChangeEvent NodeChangeEvent(java.util.prefs.Preferences, java.util.prefs.Preferences)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.util.prefs.NodeChangeEvent java.util.prefs.Preferences getChild()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.NodeChangeEvent void readObject(java.io.ObjectInputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.NodeChangeEvent void writeObject(java.io.ObjectOutputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.PreferenceChangeEvent PreferenceChangeEvent(java.util.prefs.Preferences, java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.util.prefs.PreferenceChangeEvent java.lang.String getKey()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.PreferenceChangeEvent java.lang.String getNewValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.PreferenceChangeEvent void readObject(java.io.ObjectInputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.PreferenceChangeEvent void writeObject(java.io.ObjectOutputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.Preferences Preferences()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.XmlSupport XmlSupport()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.XmlSupport.EH EH()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.XmlSupport.EH void error(org.xml.sax.SAXParseException)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.XmlSupport.EH void fatalError(org.xml.sax.SAXParseException)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.XmlSupport.EH void warning(org.xml.sax.SAXParseException)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.util.prefs.XmlSupport.Resolver Resolver()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
</root>
