<root>
  <item name="java.rmi.server.LogStream java.io.OutputStream getOutputStream()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.rmi.server.LogStream java.io.PrintStream getDefaultStream()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.rmi.server.LogStream java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.rmi.server.ObjID ObjID(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.rmi.server.ObjID ObjID(long, java.rmi.server.UID)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.rmi.server.ObjID boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.rmi.server.ObjID int hashCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.rmi.server.Operation Operation(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.rmi.server.Operation java.lang.String getOperation()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.rmi.server.Operation java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.rmi.server.RMIClassLoader RMIClassLoader()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.rmi.server.RMIClassLoader java.rmi.server.RMIClassLoaderSpi newDefaultProviderInstance()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.rmi.server.RMIClassLoaderSpi RMIClassLoaderSpi()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.rmi.server.RMISocketFactory RMISocketFactory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.rmi.server.RMISocketFactory java.rmi.server.RMIFailureHandler getFailureHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.rmi.server.RMISocketFactory java.rmi.server.RMISocketFactory getSocketFactory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.rmi.server.RemoteObject RemoteObject()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.rmi.server.RemoteObject RemoteObject(java.rmi.server.RemoteRef)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.rmi.server.RemoteObject java.rmi.server.RemoteRef getRef()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.rmi.server.RemoteObjectInvocationHandler RemoteObjectInvocationHandler(java.rmi.server.RemoteRef)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.rmi.server.RemoteServer RemoteServer()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.rmi.server.RemoteServer RemoteServer(java.rmi.server.RemoteRef)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.rmi.server.RemoteStub RemoteStub()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.rmi.server.RemoteStub RemoteStub(java.rmi.server.RemoteRef)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.rmi.server.RemoteStub void setRef(java.rmi.server.RemoteStub, java.rmi.server.RemoteRef)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.rmi.server.ServerCloneException java.lang.Throwable getCause()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.rmi.server.ServerNotActiveException ServerNotActiveException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.rmi.server.ServerNotActiveException ServerNotActiveException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.rmi.server.UID UID(int, long, short)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.rmi.server.UID UID(short)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.rmi.server.UID boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.rmi.server.UID int hashCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
</root>
