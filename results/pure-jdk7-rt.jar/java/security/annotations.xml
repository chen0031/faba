<root>
  <item name="java.security.AccessControlContext AccessControlContext(java.security.ProtectionDomain[], boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.AccessControlContext AccessControlContext(java.security.ProtectionDomain[], java.security.AccessControlContext)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.AccessControlContext boolean isPrivileged()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.AccessControlContext java.security.ProtectionDomain[] getContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.AccessControlException AccessControlException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.AccessControlException AccessControlException(java.lang.String, java.security.Permission)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.AccessControlException java.security.Permission getPermission()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.AccessController AccessController()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.AlgorithmParameterGenerator AlgorithmParameterGenerator(java.security.AlgorithmParameterGeneratorSpi, java.security.Provider, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.AlgorithmParameterGenerator java.lang.String getAlgorithm()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.AlgorithmParameterGenerator java.security.Provider getProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.AlgorithmParameterGeneratorSpi AlgorithmParameterGeneratorSpi()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.AlgorithmParameters AlgorithmParameters(java.security.AlgorithmParametersSpi, java.security.Provider, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.AlgorithmParameters java.lang.String getAlgorithm()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.AlgorithmParameters java.security.Provider getProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.AlgorithmParametersSpi AlgorithmParametersSpi()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.AllPermission AllPermission()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.AllPermission AllPermission(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.AllPermission boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.AllPermission boolean implies(java.security.Permission)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.AllPermission int hashCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.AllPermission java.lang.String getActions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.AllPermission java.security.PermissionCollection newPermissionCollection()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.AllPermissionCollection AllPermissionCollection()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.AllPermissionCollection boolean implies(java.security.Permission)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.AllPermissionCollection java.util.Enumeration&lt;java.security.Permission&gt; elements()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.BasicPermission java.lang.String getActions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.CodeSigner CodeSigner(java.security.cert.CertPath, java.security.Timestamp)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.CodeSigner java.security.Timestamp getTimestamp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.CodeSigner java.security.cert.CertPath getSignerCertPath()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.CodeSource java.net.URL getLocation()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.CryptoPrimitive CryptoPrimitive(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.DigestException DigestException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.DigestException DigestException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.DigestException DigestException(java.lang.String, java.lang.Throwable)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.DigestInputStream java.security.MessageDigest getMessageDigest()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.DigestInputStream void on(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.DigestInputStream void setMessageDigest(java.security.MessageDigest)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.DigestOutputStream java.security.MessageDigest getMessageDigest()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.DigestOutputStream void on(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.DigestOutputStream void setMessageDigest(java.security.MessageDigest)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.GeneralSecurityException GeneralSecurityException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.GeneralSecurityException GeneralSecurityException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.GeneralSecurityException GeneralSecurityException(java.lang.String, java.lang.Throwable)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.GuardedObject GuardedObject(java.lang.Object, java.security.Guard)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.Identity Identity()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.Identity Identity(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.Identity java.lang.String getInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.Identity java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.Identity java.lang.String printKeys()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.Identity java.security.IdentityScope getScope()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.Identity java.security.PublicKey getPublicKey()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.IdentityScope IdentityScope()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.IdentityScope IdentityScope(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.InvalidAlgorithmParameterException InvalidAlgorithmParameterException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.InvalidAlgorithmParameterException InvalidAlgorithmParameterException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.InvalidAlgorithmParameterException InvalidAlgorithmParameterException(java.lang.String, java.lang.Throwable)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.InvalidKeyException InvalidKeyException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.InvalidKeyException InvalidKeyException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.InvalidKeyException InvalidKeyException(java.lang.String, java.lang.Throwable)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.InvalidParameterException InvalidParameterException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.InvalidParameterException InvalidParameterException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.KeyException KeyException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.KeyException KeyException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.KeyException KeyException(java.lang.String, java.lang.Throwable)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.KeyFactory KeyFactory(java.security.KeyFactorySpi, java.security.Provider, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.KeyFactory java.lang.String getAlgorithm()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.KeyFactory java.security.Provider getProvider()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.KeyFactorySpi KeyFactorySpi()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.KeyManagementException KeyManagementException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.KeyManagementException KeyManagementException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.KeyManagementException KeyManagementException(java.lang.String, java.lang.Throwable)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.KeyPair KeyPair(java.security.PublicKey, java.security.PrivateKey)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.KeyPair java.security.PrivateKey getPrivate()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.KeyPair java.security.PublicKey getPublic()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.KeyPairGenerator KeyPairGenerator(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.KeyPairGenerator java.lang.String getAlgorithm()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.KeyPairGenerator java.security.KeyPair generateKeyPair()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.KeyPairGenerator void disableFailover()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.KeyPairGenerator void initialize(int, java.security.SecureRandom)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.KeyPairGenerator void initialize(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.KeyPairGenerator.Delegate Delegate(java.security.KeyPairGeneratorSpi, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.KeyPairGenerator.Delegate void disableFailover()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.KeyPairGeneratorSpi KeyPairGeneratorSpi()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.KeyPairGeneratorSpi void initialize(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.KeyRep.Type Type(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.KeyStore java.lang.String getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.KeyStore java.security.Provider getProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.KeyStore.Builder Builder()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.KeyStore.Builder java.security.KeyStore.Builder newInstance(java.security.KeyStore, java.security.KeyStore.ProtectionParameter)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.KeyStore.Builder.FileBuilder FileBuilder(java.lang.String, java.security.Provider, java.io.File, java.security.KeyStore.ProtectionParameter, java.security.AccessControlContext)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.KeyStore.Builder.FileBuilder java.security.KeyStore.ProtectionParameter getProtectionParameter(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.KeyStore.CallbackHandlerProtection CallbackHandlerProtection(javax.security.auth.callback.CallbackHandler)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.KeyStore.CallbackHandlerProtection javax.security.auth.callback.CallbackHandler getCallbackHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.KeyStore.PasswordProtection boolean isDestroyed()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.KeyStore.PasswordProtection char[] getPassword()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.KeyStore.PrivateKeyEntry java.security.PrivateKey getPrivateKey()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.KeyStore.PrivateKeyEntry java.security.cert.Certificate getCertificate()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.KeyStore.SimpleLoadStoreParameter SimpleLoadStoreParameter(java.security.KeyStore.ProtectionParameter)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.KeyStore.SimpleLoadStoreParameter java.security.KeyStore.ProtectionParameter getProtectionParameter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.KeyStore.TrustedCertificateEntry TrustedCertificateEntry(java.security.cert.Certificate)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.KeyStore.TrustedCertificateEntry java.security.cert.Certificate getTrustedCertificate()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.KeyStoreException KeyStoreException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.KeyStoreException KeyStoreException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.KeyStoreException KeyStoreException(java.lang.String, java.lang.Throwable)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.KeyStoreSpi KeyStoreSpi()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.KeyStoreSpi void engineStore(java.security.KeyStore.LoadStoreParameter)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.MessageDigest MessageDigest(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.MessageDigest boolean isEqual(byte[], byte[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.MessageDigest java.lang.String getAlgorithm()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.MessageDigest java.security.Provider getProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.MessageDigest.Delegate Delegate(java.security.MessageDigestSpi, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.MessageDigestSpi MessageDigestSpi()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.MessageDigestSpi int engineGetDigestLength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.NoSuchAlgorithmException NoSuchAlgorithmException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.NoSuchAlgorithmException NoSuchAlgorithmException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.NoSuchAlgorithmException NoSuchAlgorithmException(java.lang.String, java.lang.Throwable)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.NoSuchProviderException NoSuchProviderException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.NoSuchProviderException NoSuchProviderException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.Permission Permission(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.Permission java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.Permission java.security.PermissionCollection newPermissionCollection()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.PermissionCollection PermissionCollection()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.PermissionCollection boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.PermissionCollection void setReadOnly()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.Policy Policy()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.Policy boolean isSet()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.Policy java.lang.String getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.Policy java.security.PermissionCollection getPermissions(java.security.CodeSource)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.Policy java.security.Policy.Parameters getParameters()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.Policy java.security.Provider getProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.Policy void refresh()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.Policy.PolicyDelegate PolicyDelegate(java.security.PolicySpi, java.security.Provider, java.lang.String, java.security.Policy.Parameters)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.Policy.PolicyDelegate java.lang.String getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.Policy.PolicyDelegate java.security.Policy.Parameters getParameters()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.Policy.PolicyDelegate java.security.Provider getProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.Policy.PolicyInfo PolicyInfo(java.security.Policy, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.PolicySpi PolicySpi()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.PolicySpi java.security.PermissionCollection engineGetPermissions(java.security.CodeSource)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.PolicySpi java.security.PermissionCollection engineGetPermissions(java.security.ProtectionDomain)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.PolicySpi void engineRefresh()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.PrivilegedActionException java.lang.Exception getException()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.PrivilegedActionException java.lang.Throwable getCause()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.ProtectionDomain java.lang.ClassLoader getClassLoader()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.ProtectionDomain java.security.CodeSource getCodeSource()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.ProtectionDomain java.security.PermissionCollection getPermissions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.ProtectionDomain.Key Key(java.security.ProtectionDomain)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.Provider double getVersion()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.Provider java.lang.String getInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.Provider java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.Provider void checkInitialized()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.Provider.EngineDescription EngineDescription(java.lang.String, boolean, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.Provider.Service Service(java.security.Provider)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.Provider.Service boolean isValid()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.Provider.Service java.lang.String getAlgorithm()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.Provider.Service java.lang.String getClassName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.Provider.Service java.lang.String getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.Provider.Service java.security.Provider getProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.Provider.Service java.util.List&lt;java.lang.String&gt; getAliases()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.Provider.ServiceKey boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.Provider.ServiceKey boolean matches(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.Provider.UString boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.Provider.UString java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.ProviderException ProviderException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.ProviderException ProviderException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.ProviderException ProviderException(java.lang.String, java.lang.Throwable)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.SecureClassLoader void check()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.SecureRandom byte[] longToByteArray(long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.SecureRandom java.lang.String getAlgorithm()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.SecureRandom java.security.Provider getProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.SecureRandom java.security.SecureRandomSpi getSecureRandomSpi()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.SecureRandomSpi SecureRandomSpi()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.Security Security()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.Security.ProviderProperty ProviderProperty()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.Signature Signature(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.Signature java.lang.String getAlgorithm()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.Signature void chooseFirstProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.Signature.CipherAdapter java.lang.Object engineGetParameter(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.Signature.CipherAdapter void engineSetParameter(java.lang.String, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.Signature.Delegate Delegate(java.security.Provider.Service, java.util.Iterator&lt;java.security.Provider.Service&gt;, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.Signature.Delegate Delegate(java.security.SignatureSpi, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.SignatureException SignatureException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.SignatureException SignatureException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.SignatureException SignatureException(java.lang.String, java.lang.Throwable)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.SignatureSpi SignatureSpi()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.SignatureSpi java.security.AlgorithmParameters engineGetParameters()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.SignatureSpi void engineSetParameter(java.security.spec.AlgorithmParameterSpec)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.SignedObject java.lang.String getAlgorithm()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.Signer Signer()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.Signer Signer(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.Timestamp java.security.cert.CertPath getSignerCertPath()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.URIParameter URIParameter(java.net.URI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.URIParameter java.net.URI getURI()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.UnrecoverableEntryException UnrecoverableEntryException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.UnrecoverableEntryException UnrecoverableEntryException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.UnrecoverableKeyException UnrecoverableKeyException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.UnrecoverableKeyException UnrecoverableKeyException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.UnresolvedPermission boolean implies(java.security.Permission)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.UnresolvedPermission java.lang.String getActions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.UnresolvedPermission java.lang.String getUnresolvedActions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.UnresolvedPermission java.lang.String getUnresolvedName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.UnresolvedPermission java.lang.String getUnresolvedType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.UnresolvedPermissionCollection boolean implies(java.security.Permission)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
</root>
