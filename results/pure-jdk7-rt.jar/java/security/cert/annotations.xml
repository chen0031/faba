<root>
  <item name="java.security.cert.CRL CRL(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.CRL java.lang.String getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.CRLException CRLException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.CRLException CRLException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.CRLException CRLException(java.lang.String, java.lang.Throwable)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.CRLReason CRLReason(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.CertPath CertPath(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.CertPath java.lang.String getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.CertPath.CertPathRep CertPathRep(java.lang.String, byte[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.CertPathBuilder CertPathBuilder(java.security.cert.CertPathBuilderSpi, java.security.Provider, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.CertPathBuilder java.lang.String getAlgorithm()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.CertPathBuilder java.security.Provider getProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.CertPathBuilderException CertPathBuilderException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.CertPathBuilderException CertPathBuilderException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.CertPathBuilderException CertPathBuilderException(java.lang.String, java.lang.Throwable)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.CertPathBuilderSpi CertPathBuilderSpi()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.CertPathHelperImpl CertPathHelperImpl()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.CertPathValidator CertPathValidator(java.security.cert.CertPathValidatorSpi, java.security.Provider, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.CertPathValidator java.lang.String getAlgorithm()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.CertPathValidator java.security.Provider getProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.CertPathValidatorException int getIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.CertPathValidatorException java.security.cert.CertPath getCertPath()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.CertPathValidatorException java.security.cert.CertPathValidatorException.Reason getReason()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.CertPathValidatorException.BasicReason BasicReason(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.CertPathValidatorSpi CertPathValidatorSpi()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.CertStore java.lang.String getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.CertStore java.security.Provider getProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.CertStoreException CertStoreException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.CertStoreException CertStoreException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.CertStoreException CertStoreException(java.lang.String, java.lang.Throwable)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.CertStoreSpi CertStoreSpi(java.security.cert.CertStoreParameters)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.Certificate Certificate(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.Certificate java.lang.String getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.Certificate.CertificateRep CertificateRep(java.lang.String, byte[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.CertificateEncodingException CertificateEncodingException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.CertificateEncodingException CertificateEncodingException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.CertificateEncodingException CertificateEncodingException(java.lang.String, java.lang.Throwable)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.CertificateException CertificateException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.CertificateException CertificateException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.CertificateException CertificateException(java.lang.String, java.lang.Throwable)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.CertificateExpiredException CertificateExpiredException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.CertificateExpiredException CertificateExpiredException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.CertificateFactory CertificateFactory(java.security.cert.CertificateFactorySpi, java.security.Provider, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.CertificateFactory java.lang.String getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.CertificateFactory java.security.Provider getProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.CertificateFactorySpi CertificateFactorySpi()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.CertificateFactorySpi java.security.cert.CertPath engineGenerateCertPath(java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.CertificateFactorySpi java.security.cert.CertPath engineGenerateCertPath(java.io.InputStream, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.CertificateFactorySpi java.security.cert.CertPath engineGenerateCertPath(java.util.List&lt;? extends java.security.cert.Certificate&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.CertificateFactorySpi java.util.Iterator&lt;java.lang.String&gt; engineGetCertPathEncodings()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.CertificateNotYetValidException CertificateNotYetValidException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.CertificateNotYetValidException CertificateNotYetValidException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.CertificateParsingException CertificateParsingException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.CertificateParsingException CertificateParsingException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.CertificateParsingException CertificateParsingException(java.lang.String, java.lang.Throwable)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.CertificateRevokedException java.security.cert.CRLReason getRevocationReason()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.CertificateRevokedException java.util.Map&lt;java.lang.String,java.security.cert.Extension&gt; getExtensions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.CertificateRevokedException javax.security.auth.x500.X500Principal getAuthorityName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.CollectionCertStoreParameters CollectionCertStoreParameters()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.CollectionCertStoreParameters CollectionCertStoreParameters(java.util.Collection&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.CollectionCertStoreParameters java.util.Collection&lt;?&gt; getCollection()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.LDAPCertStoreParameters LDAPCertStoreParameters()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.LDAPCertStoreParameters LDAPCertStoreParameters(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.LDAPCertStoreParameters LDAPCertStoreParameters(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.LDAPCertStoreParameters int getPort()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.LDAPCertStoreParameters java.lang.String getServerName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.PKIXBuilderParameters int getMaxPathLength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.PKIXBuilderParameters void setMaxPathLength(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.PKIXCertPathBuilderResult PKIXCertPathBuilderResult(java.security.cert.CertPath, java.security.cert.TrustAnchor, java.security.cert.PolicyNode, java.security.PublicKey)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.PKIXCertPathBuilderResult java.security.cert.CertPath getCertPath()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.PKIXCertPathChecker PKIXCertPathChecker()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.PKIXCertPathValidatorResult PKIXCertPathValidatorResult(java.security.cert.TrustAnchor, java.security.cert.PolicyNode, java.security.PublicKey)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.PKIXCertPathValidatorResult java.security.PublicKey getPublicKey()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.PKIXCertPathValidatorResult java.security.cert.PolicyNode getPolicyTree()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.PKIXCertPathValidatorResult java.security.cert.TrustAnchor getTrustAnchor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.PKIXParameters boolean getPolicyQualifiersRejected()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.PKIXParameters boolean isAnyPolicyInhibited()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.PKIXParameters boolean isExplicitPolicyRequired()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.PKIXParameters boolean isPolicyMappingInhibited()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.PKIXParameters boolean isRevocationEnabled()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.PKIXParameters java.lang.String getSigProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.PKIXParameters java.util.Set&lt;java.lang.String&gt; getInitialPolicies()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.PKIXParameters java.util.Set&lt;java.security.cert.TrustAnchor&gt; getTrustAnchors()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.PKIXParameters void setAnyPolicyInhibited(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.PKIXParameters void setExplicitPolicyRequired(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.PKIXParameters void setPolicyMappingInhibited(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.PKIXParameters void setPolicyQualifiersRejected(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.PKIXParameters void setRevocationEnabled(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.PKIXParameters void setSigProvider(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.PKIXReason PKIXReason(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.PolicyQualifierInfo java.lang.String getPolicyQualifierId()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.TrustAnchor java.lang.String getCAName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.TrustAnchor java.security.PublicKey getCAPublicKey()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.TrustAnchor java.security.cert.X509Certificate getTrustedCert()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.TrustAnchor javax.security.auth.x500.X500Principal getCA()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.X509CRL X509CRL()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.X509CRLEntry X509CRLEntry()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.X509CRLEntry javax.security.auth.x500.X500Principal getCertificateIssuer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.X509CRLSelector X509CRLSelector()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.X509CRLSelector java.math.BigInteger getMaxCRL()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.X509CRLSelector java.math.BigInteger getMinCRL()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.X509CRLSelector java.security.cert.X509Certificate getCertificateChecking()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.X509CRLSelector java.util.Collection&lt;javax.security.auth.x500.X500Principal&gt; getIssuers()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.X509CRLSelector void setCertificateChecking(java.security.cert.X509Certificate)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.X509CRLSelector void setMaxCRLNumber(java.math.BigInteger)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.X509CRLSelector void setMinCRLNumber(java.math.BigInteger)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.X509CertSelector X509CertSelector()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.X509CertSelector boolean getMatchAllSubjectAltNames()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.X509CertSelector int getBasicConstraints()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.X509CertSelector java.math.BigInteger getSerialNumber()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.X509CertSelector java.security.PublicKey getSubjectPublicKey()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.X509CertSelector java.security.cert.X509Certificate getCertificate()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.X509CertSelector java.util.Set&lt;java.lang.String&gt; getExtendedKeyUsage()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.X509CertSelector java.util.Set&lt;java.lang.String&gt; getPolicy()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.X509CertSelector javax.security.auth.x500.X500Principal getIssuer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.X509CertSelector javax.security.auth.x500.X500Principal getSubject()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.security.cert.X509CertSelector void setBasicConstraints(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.X509CertSelector void setCertificate(java.security.cert.X509Certificate)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.X509CertSelector void setIssuer(javax.security.auth.x500.X500Principal)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.X509CertSelector void setMatchAllSubjectAltNames(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.X509CertSelector void setPathToNamesInternal(java.util.Set&lt;sun.security.x509.GeneralNameInterface&gt;)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.X509CertSelector void setSerialNumber(java.math.BigInteger)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.X509CertSelector void setSubject(javax.security.auth.x500.X500Principal)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.security.cert.X509Certificate X509Certificate()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
</root>
