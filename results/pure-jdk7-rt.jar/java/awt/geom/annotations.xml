<root>
  <item name="java.awt.geom.AffineTransform AffineTransform()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.AffineTransform AffineTransform(double, double, double, double, double, double, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.AffineTransform AffineTransform(java.awt.geom.AffineTransform)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.AffineTransform boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.AffineTransform double getDeterminant()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.AffineTransform double getScaleX()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.AffineTransform double getScaleY()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.AffineTransform double getShearX()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.AffineTransform double getShearY()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.AffineTransform double getTranslateX()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.AffineTransform double getTranslateY()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.AffineTransform void deltaTransform(double[], int, double[], int, int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="2"/>
  </item>
  <item name="java.awt.geom.AffineTransform void getMatrix(double[])">
    <annotation name="org.jetbrains.annotations.ParamChange" params="0"/>
  </item>
  <item name="java.awt.geom.AffineTransform void quadrantRotate(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.AffineTransform void quadrantRotate(int, double, double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.AffineTransform void rotate180()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.AffineTransform void rotate270()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.AffineTransform void rotate90()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.AffineTransform void scale(double, double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.AffineTransform void setToIdentity()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.AffineTransform void setToQuadrantRotation(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.AffineTransform void setToQuadrantRotation(int, double, double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.AffineTransform void setToScale(double, double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.AffineTransform void setToShear(double, double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.AffineTransform void setToTranslation(double, double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.AffineTransform void setTransform(java.awt.geom.AffineTransform)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.AffineTransform void stateError()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.AffineTransform void transform(double[], int, double[], int, int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="2"/>
  </item>
  <item name="java.awt.geom.AffineTransform void transform(double[], int, float[], int, int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="2"/>
  </item>
  <item name="java.awt.geom.AffineTransform void transform(float[], int, double[], int, int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="2"/>
  </item>
  <item name="java.awt.geom.AffineTransform void transform(float[], int, float[], int, int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="2"/>
  </item>
  <item name="java.awt.geom.AffineTransform void translate(double, double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.AffineTransform void updateState()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.Arc2D int getArcType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Arc2D.Double boolean isEmpty()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Arc2D.Double double getAngleExtent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Arc2D.Double double getAngleStart()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Arc2D.Double double getHeight()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Arc2D.Double double getWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Arc2D.Double double getX()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Arc2D.Double double getY()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Arc2D.Double void setAngleExtent(double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.Arc2D.Double void setAngleStart(double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.Arc2D.Float boolean isEmpty()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Arc2D.Float double getAngleExtent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Arc2D.Float double getAngleStart()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Arc2D.Float double getHeight()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Arc2D.Float double getWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Arc2D.Float double getX()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Arc2D.Float double getY()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Arc2D.Float void setAngleExtent(double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.Arc2D.Float void setAngleStart(double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.ArcIterator boolean isDone()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.ArcIterator int getWindingRule()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.ArcIterator void next()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.Area Area()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.Area void invalidateBounds()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.AreaIterator boolean isDone()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.AreaIterator int getWindingRule()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.CubicCurve2D CubicCurve2D()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.CubicCurve2D boolean inInterval(double, double, double)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.CubicCurve2D boolean iszero(double, double)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.CubicCurve2D boolean oppositeSigns(double, double)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.CubicCurve2D boolean within(double, double, double)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.CubicCurve2D double bisectRoot(double[], double, double)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.CubicCurve2D double solveEqn(double[], int, double)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.CubicCurve2D java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.CubicCurve2D void subdivide(double[], int, double[], int, double[], int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="2,4"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Double Double()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Double double getCtrlX1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Double double getCtrlX2()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Double double getCtrlY1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Double double getCtrlY2()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Double double getX1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Double double getX2()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Double double getY1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Double double getY2()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Double java.awt.geom.Point2D getCtrlP1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Double java.awt.geom.Point2D getCtrlP2()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Double java.awt.geom.Point2D getP1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Double java.awt.geom.Point2D getP2()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Double void setCurve(double, double, double, double, double, double, double, double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Float Float()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Float double getCtrlX1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Float double getCtrlX2()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Float double getCtrlY1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Float double getCtrlY2()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Float double getX1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Float double getX2()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Float double getY1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Float double getY2()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Float java.awt.geom.Point2D getCtrlP1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Float java.awt.geom.Point2D getCtrlP2()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Float java.awt.geom.Point2D getP1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Float java.awt.geom.Point2D getP2()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Float void setCurve(double, double, double, double, double, double, double, double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Float void setCurve(float, float, float, float, float, float, float, float)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.CubicIterator CubicIterator(java.awt.geom.CubicCurve2D, java.awt.geom.AffineTransform)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.CubicIterator boolean isDone()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.CubicIterator int getWindingRule()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.CubicIterator void next()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.Dimension2D Dimension2D()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Ellipse2D Ellipse2D()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Ellipse2D.Double Double()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Ellipse2D.Double boolean isEmpty()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Ellipse2D.Double double getHeight()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Ellipse2D.Double double getWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Ellipse2D.Double double getX()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Ellipse2D.Double double getY()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Ellipse2D.Double void setFrame(double, double, double, double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.Ellipse2D.Float Float()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Ellipse2D.Float boolean isEmpty()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Ellipse2D.Float double getHeight()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Ellipse2D.Float double getWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Ellipse2D.Float double getX()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Ellipse2D.Float double getY()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Ellipse2D.Float void setFrame(double, double, double, double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.Ellipse2D.Float void setFrame(float, float, float, float)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.EllipseIterator boolean isDone()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.EllipseIterator int getWindingRule()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.EllipseIterator void next()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.FlatteningPathIterator boolean isDone()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.FlatteningPathIterator int getRecursionLimit()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.FlatteningPathIterator void ensureHoldCapacity(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.GeneralPath GeneralPath()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.GeneralPath GeneralPath(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.GeneralPath GeneralPath(int, byte[], int, float[], int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.GeneralPath GeneralPath(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.IllegalPathStateException IllegalPathStateException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.IllegalPathStateException IllegalPathStateException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.Line2D Line2D()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Line2D boolean contains(double, double)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Line2D boolean contains(double, double, double, double)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Line2D boolean contains(java.awt.geom.Point2D)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Line2D boolean contains(java.awt.geom.Rectangle2D)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Line2D boolean linesIntersect(double, double, double, double, double, double, double, double)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Line2D double ptLineDistSq(double, double, double, double, double, double)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Line2D double ptSegDistSq(double, double, double, double, double, double)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Line2D int relativeCCW(double, double, double, double, double, double)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Line2D java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Line2D java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform, double)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Line2D.Double Double()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Line2D.Double double getX1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Line2D.Double double getX2()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Line2D.Double double getY1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Line2D.Double double getY2()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Line2D.Double java.awt.geom.Point2D getP1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Line2D.Double java.awt.geom.Point2D getP2()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Line2D.Double void setLine(double, double, double, double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.Line2D.Float Float()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Line2D.Float double getX1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Line2D.Float double getX2()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Line2D.Float double getY1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Line2D.Float double getY2()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Line2D.Float java.awt.geom.Point2D getP1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Line2D.Float java.awt.geom.Point2D getP2()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Line2D.Float void setLine(double, double, double, double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.Line2D.Float void setLine(float, float, float, float)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.LineIterator LineIterator(java.awt.geom.Line2D, java.awt.geom.AffineTransform)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.LineIterator boolean isDone()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.LineIterator int getWindingRule()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.LineIterator void next()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.NoninvertibleTransformException NoninvertibleTransformException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.Path2D Path2D()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Path2D Path2D(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.Path2D int getWindingRule()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Path2D void reset()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.Path2D void setWindingRule(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.Path2D.Double Double()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.Path2D.Double Double(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.Path2D.Double Double(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.Path2D.Double java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Path2D.Double java.awt.geom.Point2D getPoint(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Path2D.Double void needRoom(boolean, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.Path2D.Double.CopyIterator CopyIterator(java.awt.geom.Path2D.Double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.Path2D.Double.CopyIterator int currentSegment(double[])">
    <annotation name="org.jetbrains.annotations.ParamChange" params="0"/>
  </item>
  <item name="java.awt.geom.Path2D.Double.CopyIterator int currentSegment(float[])">
    <annotation name="org.jetbrains.annotations.ParamChange" params="0"/>
  </item>
  <item name="java.awt.geom.Path2D.Double.TxIterator TxIterator(java.awt.geom.Path2D.Double, java.awt.geom.AffineTransform)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.Path2D.Float Float()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.Path2D.Float Float(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.Path2D.Float Float(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.Path2D.Float java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Path2D.Float java.awt.geom.Point2D getPoint(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Path2D.Float void needRoom(boolean, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.Path2D.Float.CopyIterator CopyIterator(java.awt.geom.Path2D.Float)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.Path2D.Float.CopyIterator int currentSegment(double[])">
    <annotation name="org.jetbrains.annotations.ParamChange" params="0"/>
  </item>
  <item name="java.awt.geom.Path2D.Float.CopyIterator int currentSegment(float[])">
    <annotation name="org.jetbrains.annotations.ParamChange" params="0"/>
  </item>
  <item name="java.awt.geom.Path2D.Float.TxIterator TxIterator(java.awt.geom.Path2D.Float, java.awt.geom.AffineTransform)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.Path2D.Iterator Iterator(java.awt.geom.Path2D)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.Path2D.Iterator boolean isDone()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Path2D.Iterator int getWindingRule()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Path2D.Iterator void next()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.Point2D Point2D()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Point2D double distanceSq(double, double, double, double)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Point2D.Double Double()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Point2D.Double Double(double, double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.Point2D.Double double getX()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Point2D.Double double getY()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Point2D.Double void setLocation(double, double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.Point2D.Float Float()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Point2D.Float Float(float, float)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.Point2D.Float double getX()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Point2D.Float double getY()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Point2D.Float void setLocation(double, double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.Point2D.Float void setLocation(float, float)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D QuadCurve2D()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.QuadCurve2D boolean inwards(int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.QuadCurve2D double getFlatnessSq(double, double, double, double, double, double)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.QuadCurve2D double getFlatnessSq(double[], int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.QuadCurve2D int evalQuadratic(double[], int, boolean, boolean, double[], double, double, double)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="0"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D int getTag(double, double, double)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.QuadCurve2D java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.QuadCurve2D void fillEqn(double[], double, double, double, double)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="0"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D void subdivide(double[], int, double[], int, double[], int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="2,4"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Double Double()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Double double getCtrlX()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Double double getCtrlY()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Double double getX1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Double double getX2()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Double double getY1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Double double getY2()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Double java.awt.geom.Point2D getCtrlPt()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Double java.awt.geom.Point2D getP1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Double java.awt.geom.Point2D getP2()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Double void setCurve(double, double, double, double, double, double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Float Float()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Float double getCtrlX()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Float double getCtrlY()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Float double getX1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Float double getX2()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Float double getY1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Float double getY2()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Float java.awt.geom.Point2D getCtrlPt()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Float java.awt.geom.Point2D getP1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Float java.awt.geom.Point2D getP2()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Float void setCurve(double, double, double, double, double, double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Float void setCurve(float, float, float, float, float, float)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.QuadIterator QuadIterator(java.awt.geom.QuadCurve2D, java.awt.geom.AffineTransform)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.QuadIterator boolean isDone()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.QuadIterator int getWindingRule()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.QuadIterator void next()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.RectIterator boolean isDone()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.RectIterator int getWindingRule()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.RectIterator void next()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.Rectangle2D Rectangle2D()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Rectangle2D.Double Double()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Rectangle2D.Double boolean isEmpty()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Rectangle2D.Double double getHeight()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Rectangle2D.Double double getWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Rectangle2D.Double double getX()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Rectangle2D.Double double getY()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Rectangle2D.Double int outcode(double, double)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Rectangle2D.Double void setRect(double, double, double, double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.Rectangle2D.Float Float()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Rectangle2D.Float boolean isEmpty()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Rectangle2D.Float double getHeight()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Rectangle2D.Float double getWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Rectangle2D.Float double getX()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Rectangle2D.Float double getY()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Rectangle2D.Float int outcode(double, double)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Rectangle2D.Float void setRect(double, double, double, double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.Rectangle2D.Float void setRect(float, float, float, float)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.RectangularShape RectangularShape()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.RoundRectIterator boolean isDone()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.RoundRectIterator int getWindingRule()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.RoundRectIterator void next()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.RoundRectangle2D RoundRectangle2D()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.RoundRectangle2D int classify(double, double, double, double)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.RoundRectangle2D.Double Double()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.RoundRectangle2D.Double boolean isEmpty()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.RoundRectangle2D.Double double getArcHeight()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.RoundRectangle2D.Double double getArcWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.RoundRectangle2D.Double double getHeight()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.RoundRectangle2D.Double double getWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.RoundRectangle2D.Double double getX()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.RoundRectangle2D.Double double getY()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.RoundRectangle2D.Double void setRoundRect(double, double, double, double, double, double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.RoundRectangle2D.Float Float()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.RoundRectangle2D.Float boolean isEmpty()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.RoundRectangle2D.Float double getArcHeight()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.RoundRectangle2D.Float double getArcWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.RoundRectangle2D.Float double getHeight()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.RoundRectangle2D.Float double getWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.RoundRectangle2D.Float double getX()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.RoundRectangle2D.Float double getY()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.geom.RoundRectangle2D.Float void setRoundRect(double, double, double, double, double, double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.geom.RoundRectangle2D.Float void setRoundRect(float, float, float, float, float, float)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
</root>
