<root>
  <item name="java.awt.AWTError AWTError(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.AWTEvent boolean isConsumed()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.AWTEvent int getID()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.AWTEvent java.lang.String paramString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.AWTEvent java.security.AccessControlContext getAccessControlContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.AWTEvent void consume()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.AWTEventMulticaster AWTEventMulticaster(java.util.EventListener, java.util.EventListener)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.AWTEventMulticaster java.awt.event.ActionListener add(java.awt.event.ActionListener, java.awt.event.ActionListener)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.AWTEventMulticaster java.awt.event.AdjustmentListener add(java.awt.event.AdjustmentListener, java.awt.event.AdjustmentListener)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.AWTEventMulticaster java.awt.event.ComponentListener add(java.awt.event.ComponentListener, java.awt.event.ComponentListener)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.AWTEventMulticaster java.awt.event.ContainerListener add(java.awt.event.ContainerListener, java.awt.event.ContainerListener)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.AWTEventMulticaster java.awt.event.FocusListener add(java.awt.event.FocusListener, java.awt.event.FocusListener)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.AWTEventMulticaster java.awt.event.HierarchyBoundsListener add(java.awt.event.HierarchyBoundsListener, java.awt.event.HierarchyBoundsListener)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.AWTEventMulticaster java.awt.event.HierarchyListener add(java.awt.event.HierarchyListener, java.awt.event.HierarchyListener)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.AWTEventMulticaster java.awt.event.InputMethodListener add(java.awt.event.InputMethodListener, java.awt.event.InputMethodListener)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.AWTEventMulticaster java.awt.event.ItemListener add(java.awt.event.ItemListener, java.awt.event.ItemListener)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.AWTEventMulticaster java.awt.event.KeyListener add(java.awt.event.KeyListener, java.awt.event.KeyListener)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.AWTEventMulticaster java.awt.event.MouseListener add(java.awt.event.MouseListener, java.awt.event.MouseListener)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.AWTEventMulticaster java.awt.event.MouseMotionListener add(java.awt.event.MouseMotionListener, java.awt.event.MouseMotionListener)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.AWTEventMulticaster java.awt.event.MouseWheelListener add(java.awt.event.MouseWheelListener, java.awt.event.MouseWheelListener)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.AWTEventMulticaster java.awt.event.TextListener add(java.awt.event.TextListener, java.awt.event.TextListener)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.AWTEventMulticaster java.awt.event.WindowFocusListener add(java.awt.event.WindowFocusListener, java.awt.event.WindowFocusListener)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.AWTEventMulticaster java.awt.event.WindowListener add(java.awt.event.WindowListener, java.awt.event.WindowListener)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.AWTEventMulticaster java.awt.event.WindowStateListener add(java.awt.event.WindowStateListener, java.awt.event.WindowStateListener)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.AWTEventMulticaster java.util.EventListener addInternal(java.util.EventListener, java.util.EventListener)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.AWTException AWTException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.AWTKeyStroke AWTKeyStroke()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.AWTKeyStroke AWTKeyStroke(char, int, int, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.AWTKeyStroke boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.AWTKeyStroke boolean isOnKeyRelease()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.AWTKeyStroke char getKeyChar()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.AWTKeyStroke int getKeyCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.AWTKeyStroke int getKeyEventType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.AWTKeyStroke int getModifiers()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.AWTKeyStroke int hashCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.AWTKeyStroke int mapNewModifiers(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.AWTKeyStroke int mapOldModifiers(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.AlphaComposite AlphaComposite(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.AlphaComposite AlphaComposite(int, float)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.AlphaComposite boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.AlphaComposite float getAlpha()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.AlphaComposite int getRule()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.AlphaComposite java.awt.AlphaComposite derive(float)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.AlphaComposite java.awt.AlphaComposite derive(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.AlphaComposite java.awt.AlphaComposite getInstance(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.AlphaComposite java.awt.AlphaComposite getInstance(int, float)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.AlphaComposite java.awt.CompositeContext createContext(java.awt.image.ColorModel, java.awt.image.ColorModel, java.awt.RenderingHints)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.AttributeValue int hashCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.AttributeValue java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.BasicStroke float getDashPhase()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.BasicStroke float getLineWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.BasicStroke float getMiterLimit()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.BasicStroke int getEndCap()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.BasicStroke int getLineJoin()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.BorderLayout BorderLayout()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.BorderLayout BorderLayout(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.BorderLayout float getLayoutAlignmentX(java.awt.Container)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.BorderLayout float getLayoutAlignmentY(java.awt.Container)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.BorderLayout int getHgap()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.BorderLayout int getVgap()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.BorderLayout java.awt.Component getChild(java.lang.String, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.BorderLayout java.awt.Dimension maximumLayoutSize(java.awt.Container)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.BorderLayout java.lang.Object getConstraints(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.BorderLayout void invalidateLayout(java.awt.Container)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.BorderLayout void removeLayoutComponent(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.BorderLayout void setHgap(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.BorderLayout void setVgap(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.BufferCapabilities BufferCapabilities(java.awt.ImageCapabilities, java.awt.ImageCapabilities, java.awt.BufferCapabilities.FlipContents)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.BufferCapabilities boolean isFullScreenRequired()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.BufferCapabilities boolean isMultiBufferAvailable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.BufferCapabilities java.awt.BufferCapabilities.FlipContents getFlipContents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.BufferCapabilities java.awt.ImageCapabilities getBackBufferCapabilities()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.BufferCapabilities java.awt.ImageCapabilities getFrontBufferCapabilities()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Button java.lang.String getActionCommand()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Button java.lang.String getLabel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Button javax.accessibility.AccessibleContext getAccessibleContext()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Button void addActionListener(java.awt.event.ActionListener)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Button void setActionCommand(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Button.AccessibleAWTButton AccessibleAWTButton(java.awt.Button)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Button.AccessibleAWTButton boolean setCurrentAccessibleValue(java.lang.Number)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Button.AccessibleAWTButton int getAccessibleActionCount()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Button.AccessibleAWTButton java.lang.Number getCurrentAccessibleValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Button.AccessibleAWTButton java.lang.Number getMaximumAccessibleValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Button.AccessibleAWTButton java.lang.Number getMinimumAccessibleValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Button.AccessibleAWTButton java.lang.String getAccessibleActionDescription(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Button.AccessibleAWTButton javax.accessibility.AccessibleAction getAccessibleAction()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Button.AccessibleAWTButton javax.accessibility.AccessibleRole getAccessibleRole()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Button.AccessibleAWTButton javax.accessibility.AccessibleValue getAccessibleValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Canvas boolean postsOldMouseEvents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Canvas java.awt.image.BufferStrategy getBufferStrategy()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Canvas javax.accessibility.AccessibleContext getAccessibleContext()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Canvas.AccessibleAWTCanvas AccessibleAWTCanvas(java.awt.Canvas)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Canvas.AccessibleAWTCanvas javax.accessibility.AccessibleRole getAccessibleRole()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.CardLayout float getLayoutAlignmentX(java.awt.Container)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.CardLayout float getLayoutAlignmentY(java.awt.Container)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.CardLayout int getHgap()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.CardLayout int getVgap()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.CardLayout java.awt.Dimension maximumLayoutSize(java.awt.Container)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.CardLayout void invalidateLayout(java.awt.Container)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.CardLayout void setHgap(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.CardLayout void setVgap(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.CardLayout.Card Card(java.awt.CardLayout, java.lang.String, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Checkbox boolean getState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Checkbox java.awt.CheckboxGroup getCheckboxGroup()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Checkbox java.lang.Object[] getSelectedObjects()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Checkbox java.lang.String getLabel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Checkbox void addItemListener(java.awt.event.ItemListener)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Checkbox.AccessibleAWTCheckbox boolean doAccessibleAction(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Checkbox.AccessibleAWTCheckbox boolean setCurrentAccessibleValue(java.lang.Number)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Checkbox.AccessibleAWTCheckbox int getAccessibleActionCount()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Checkbox.AccessibleAWTCheckbox java.lang.Number getCurrentAccessibleValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Checkbox.AccessibleAWTCheckbox java.lang.Number getMaximumAccessibleValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Checkbox.AccessibleAWTCheckbox java.lang.Number getMinimumAccessibleValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Checkbox.AccessibleAWTCheckbox java.lang.String getAccessibleActionDescription(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Checkbox.AccessibleAWTCheckbox javax.accessibility.AccessibleAction getAccessibleAction()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Checkbox.AccessibleAWTCheckbox javax.accessibility.AccessibleRole getAccessibleRole()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Checkbox.AccessibleAWTCheckbox javax.accessibility.AccessibleValue getAccessibleValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.CheckboxGroup CheckboxGroup()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.CheckboxGroup java.awt.Checkbox getCurrent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.CheckboxMenuItem boolean eventEnabled(java.awt.AWTEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.CheckboxMenuItem boolean getState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.CheckboxMenuItem java.lang.Object[] getSelectedObjects()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.CheckboxMenuItem javax.accessibility.AccessibleContext getAccessibleContext()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.CheckboxMenuItem void addItemListener(java.awt.event.ItemListener)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.CheckboxMenuItem.AccessibleAWTCheckboxMenuItem AccessibleAWTCheckboxMenuItem(java.awt.CheckboxMenuItem)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.CheckboxMenuItem.AccessibleAWTCheckboxMenuItem boolean doAccessibleAction(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.CheckboxMenuItem.AccessibleAWTCheckboxMenuItem boolean setCurrentAccessibleValue(java.lang.Number)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.CheckboxMenuItem.AccessibleAWTCheckboxMenuItem int getAccessibleActionCount()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.CheckboxMenuItem.AccessibleAWTCheckboxMenuItem java.lang.Number getCurrentAccessibleValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.CheckboxMenuItem.AccessibleAWTCheckboxMenuItem java.lang.Number getMaximumAccessibleValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.CheckboxMenuItem.AccessibleAWTCheckboxMenuItem java.lang.Number getMinimumAccessibleValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.CheckboxMenuItem.AccessibleAWTCheckboxMenuItem java.lang.String getAccessibleActionDescription(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.CheckboxMenuItem.AccessibleAWTCheckboxMenuItem javax.accessibility.AccessibleAction getAccessibleAction()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.CheckboxMenuItem.AccessibleAWTCheckboxMenuItem javax.accessibility.AccessibleRole getAccessibleRole()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.CheckboxMenuItem.AccessibleAWTCheckboxMenuItem javax.accessibility.AccessibleValue getAccessibleValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Choice int getSelectedIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Choice javax.accessibility.AccessibleContext getAccessibleContext()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Choice void addItemListener(java.awt.event.ItemListener)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Choice.AccessibleAWTChoice AccessibleAWTChoice(java.awt.Choice)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Choice.AccessibleAWTChoice boolean doAccessibleAction(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Choice.AccessibleAWTChoice int getAccessibleActionCount()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Choice.AccessibleAWTChoice java.lang.String getAccessibleActionDescription(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Choice.AccessibleAWTChoice javax.accessibility.AccessibleAction getAccessibleAction()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Choice.AccessibleAWTChoice javax.accessibility.AccessibleRole getAccessibleRole()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Color Color(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Color Color(int, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Color int getRGB()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Color int hashCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.ColorPaintContext ColorPaintContext(int, java.awt.image.ColorModel)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.ColorPaintContext int getRGB()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.ColorPaintContext void dispose()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component boolean action(java.awt.Event, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component boolean areFocusTraversalKeysSet(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component boolean areInputMethodsEnabled()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component boolean eventTypeEnabled(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component boolean getFocusTraversalKeysEnabled()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component boolean getIgnoreRepaint()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component boolean gotFocus(java.awt.Event, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component boolean inside(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component boolean isAutoFocusTransferOnDisposal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component boolean isBackgroundSet()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component boolean isCoalescingEnabled()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component boolean isCursorSet()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component boolean isDoubleBuffered()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component boolean isEnabled()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component boolean isEnabledImpl()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component boolean isFocusTraversable()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Component boolean isFocusTraversableOverridden()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component boolean isFontSet()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component boolean isForegroundSet()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component boolean isMaximumSizeSet()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component boolean isMinimumSizeSet()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component boolean isPreferredSizeSet()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component boolean isSameOrAncestorOf(java.awt.Component, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component boolean isValid()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component boolean isVisible()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component boolean isVisible_NoClientCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component boolean keyDown(java.awt.Event, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component boolean keyUp(java.awt.Event, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component boolean lostFocus(java.awt.Event, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component boolean mouseDown(java.awt.Event, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component boolean mouseDrag(java.awt.Event, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component boolean mouseEnter(java.awt.Event, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component boolean mouseExit(java.awt.Event, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component boolean mouseMove(java.awt.Event, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component boolean mouseUp(java.awt.Event, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component boolean postsOldMouseEvents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component float getAlignmentX()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component float getAlignmentY()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component int countHierarchyMembers()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component int getBaseline(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component int getHeight()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component int getWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component int getX()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component int getY()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component java.awt.AWTEvent coalesceEvents(java.awt.AWTEvent, java.awt.AWTEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component java.awt.Component.BaselineResizeBehavior getBaselineResizeBehavior()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component java.awt.ComponentOrientation getComponentOrientation()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component java.awt.Container getParent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component java.awt.Container getParent_NoClientCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component java.awt.Dimension size()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component java.awt.GraphicsConfiguration getGraphicsConfiguration()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component java.awt.GraphicsConfiguration getGraphicsConfiguration_NoClientCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component java.awt.Point location()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component java.awt.Point location_NoClientCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component java.awt.Rectangle bounds()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component java.awt.dnd.DropTarget getDropTarget()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component java.awt.im.InputMethodRequests getInputMethodRequests()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component java.awt.image.BufferStrategy getBufferStrategy()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component java.awt.peer.ComponentPeer getPeer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component java.lang.Object getObjectLock()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component java.lang.Object getTreeLock()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component java.lang.String constructComponentName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component java.security.AccessControlContext getAccessControlContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component javax.accessibility.AccessibleContext getAccessibleContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component void addComponentListener(java.awt.event.ComponentListener)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Component void addInputMethodListener(java.awt.event.InputMethodListener)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Component void autoProcessMouseWheel(java.awt.event.MouseWheelEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component void clearCurrentFocusCycleRootOnHide()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component void initializeFocusTraversalKeys()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Component void layout()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component void mixOnValidating()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component void paint(java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component void paintHeavyweightComponents(java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component void printHeavyweightComponents(java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component void setAutoFocusTransferOnDisposal(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Component void setIgnoreRepaint(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Component.AWTTreeLock AWTTreeLock()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component.AccessibleAWTComponent AccessibleAWTComponent(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Component.AccessibleAWTComponent int getAccessibleChildrenCount()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component.AccessibleAWTComponent java.lang.String getAccessibleDescription()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component.AccessibleAWTComponent java.lang.String getAccessibleName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component.AccessibleAWTComponent javax.accessibility.Accessible getAccessibleAt(java.awt.Point)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component.AccessibleAWTComponent javax.accessibility.Accessible getAccessibleChild(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component.AccessibleAWTComponent javax.accessibility.AccessibleComponent getAccessibleComponent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component.AccessibleAWTComponent javax.accessibility.AccessibleRole getAccessibleRole()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component.AccessibleAWTComponent.AccessibleAWTComponentHandler AccessibleAWTComponentHandler(java.awt.Component.AccessibleAWTComponent)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Component.AccessibleAWTComponent.AccessibleAWTComponentHandler void componentMoved(java.awt.event.ComponentEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component.AccessibleAWTComponent.AccessibleAWTComponentHandler void componentResized(java.awt.event.ComponentEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component.AccessibleAWTComponent.AccessibleAWTFocusHandler AccessibleAWTFocusHandler(java.awt.Component.AccessibleAWTComponent)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Component.BaselineResizeBehavior BaselineResizeBehavior(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Component.BltBufferStrategy boolean contentsRestored()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component.BltBufferStrategy java.awt.BufferCapabilities getCapabilities()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component.BltBufferStrategy java.awt.Image getBackBuffer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component.DummyRequestFocusController DummyRequestFocusController()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component.DummyRequestFocusController boolean acceptRequestFocus(java.awt.Component, java.awt.Component, boolean, boolean, sun.awt.CausedFocusEvent.Cause)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component.FlipBufferStrategy boolean contentsRestored()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component.FlipBufferStrategy java.awt.BufferCapabilities getCapabilities()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component.SingleBufferStrategy SingleBufferStrategy(java.awt.Component, java.awt.BufferCapabilities)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Component.SingleBufferStrategy boolean contentsLost()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component.SingleBufferStrategy boolean contentsRestored()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component.SingleBufferStrategy java.awt.BufferCapabilities getCapabilities()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Component.SingleBufferStrategy void show()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.ComponentOrientation ComponentOrientation(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.ComponentOrientation boolean isHorizontal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.ComponentOrientation boolean isLeftToRight()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.ComponentOrientation java.awt.ComponentOrientation getOrientation(java.util.Locale)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Container boolean areFocusTraversalKeysSet(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Container boolean isFocusCycleRoot()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Container boolean isFocusTraversalPolicyProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Container boolean isFocusTraversalPolicySet()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Container boolean isValidateRoot()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Container boolean postsOldMouseEvents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Container java.awt.LayoutManager getLayout()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Container void addContainerListener(java.awt.event.ContainerListener)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Container void checkAddToSelf(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Container void checkNotAWindow(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Container void initializeFocusTraversalKeys()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Container.AccessibleAWTContainer AccessibleAWTContainer(java.awt.Container)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Container.AccessibleAWTContainer.AccessibleContainerHandler AccessibleContainerHandler(java.awt.Container.AccessibleAWTContainer)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Container.DropTargetEventTargetFilter DropTargetEventTargetFilter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Container.MouseEventTargetFilter MouseEventTargetFilter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Container.MouseEventTargetFilter boolean accept(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Container.WakingRunnable WakingRunnable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Container.WakingRunnable void run()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.ContainerOrderFocusTraversalPolicy ContainerOrderFocusTraversalPolicy()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.ContainerOrderFocusTraversalPolicy boolean getImplicitDownCycleTraversal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.ContainerOrderFocusTraversalPolicy void setImplicitDownCycleTraversal(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Cursor Cursor(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Cursor int getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Cursor java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Cursor.CursorDisposer CursorDisposer(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.DefaultFocusTraversalPolicy DefaultFocusTraversalPolicy()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.DefaultKeyboardFocusManager void consumeNextKeyTyped(java.awt.event.KeyEvent)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.DefaultKeyboardFocusManager.TypeAheadMarker TypeAheadMarker(long, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Desktop.Action Action(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Dialog boolean isModal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Dialog boolean isModal_NoClientCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Dialog boolean isResizable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Dialog boolean isUndecorated()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Dialog java.awt.Dialog.ModalityType getModalityType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Dialog java.lang.String getTitle()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Dialog javax.accessibility.AccessibleContext getAccessibleContext()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Dialog.AccessibleAWTDialog AccessibleAWTDialog(java.awt.Dialog)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Dialog.AccessibleAWTDialog javax.accessibility.AccessibleRole getAccessibleRole()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Dialog.ModalExclusionType ModalExclusionType(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Dialog.ModalityType ModalityType(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Dimension Dimension()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Dimension Dimension(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Dimension Dimension(java.awt.Dimension)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Dimension boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Dimension double getHeight()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Dimension double getWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Dimension int hashCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Dimension java.awt.Dimension getSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Dimension void setSize(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.DisplayMode DisplayMode(int, int, int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.DisplayMode boolean equals(java.awt.DisplayMode)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.DisplayMode boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.DisplayMode int getBitDepth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.DisplayMode int getHeight()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.DisplayMode int getRefreshRate()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.DisplayMode int getWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.DisplayMode int hashCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Event Event(java.lang.Object, int, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Event Event(java.lang.Object, long, int, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Event Event(java.lang.Object, long, int, int, int, int, int, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Event boolean controlDown()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Event boolean isConsumed()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Event boolean metaDown()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Event boolean shiftDown()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Event char getKeyEventChar()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Event void consume()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Event void translate(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.EventDispatchThread java.awt.EventQueue getEventQueue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.EventDispatchThread void setEventQueue(java.awt.EventQueue)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.EventDispatchThread void stopDispatching()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.EventDispatchThread.HierarchyEventFilter HierarchyEventFilter(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.EventFilter.FilterAction FilterAction(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.EventQueue boolean noEvents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.EventQueue java.security.AccessControlContext getAccessControlContextFrom(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.EventQueue.1AWTInvocationLock 1AWTInvocationLock()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.FileDialog boolean postsOldMouseEvents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.FileDialog int getMode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.FileDialog java.io.FilenameFilter getFilenameFilter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.FileDialog java.lang.String getDirectory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.FileDialog java.lang.String getFile()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.FileDialog void setMode(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.FlowLayout boolean getAlignOnBaseline()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.FlowLayout int getAlignment()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.FlowLayout int getHgap()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.FlowLayout int getVgap()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.FlowLayout void addLayoutComponent(java.lang.String, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.FlowLayout void removeLayoutComponent(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.FlowLayout void setAlignOnBaseline(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.FlowLayout void setAlignment(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.FlowLayout void setHgap(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.FlowLayout void setVgap(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.FocusManager FocusManager()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.FocusTraversalPolicy FocusTraversalPolicy()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Font Font(java.lang.String, int, float)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Font Font(java.lang.String, int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Font boolean hasLayoutAttributes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Font boolean hasUniformLineMetrics()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Font boolean isBold()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Font boolean isItalic()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Font boolean isPlain()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Font boolean isTransformed()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Font float getSize2D()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Font int getSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Font int getStyle()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Font java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Font java.text.AttributedCharacterIterator.Attribute[] getAvailableAttributes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Font void initFromValues(sun.font.AttributeValues)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Font.FontAccessImpl FontAccessImpl()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Font.FontAccessImpl boolean isCreatedFont(java.awt.Font)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.FontFormatException FontFormatException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.FontMetrics FontMetrics(java.awt.Font)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.FontMetrics int getDescent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.FontMetrics int getLeading()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.FontMetrics int getMaxAdvance()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.FontMetrics java.awt.Font getFont()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.FontMetrics java.awt.font.FontRenderContext getFontRenderContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Frame boolean isResizable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Frame boolean isUndecorated()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Frame java.awt.MenuBar getMenuBar()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Frame java.lang.String getTitle()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Frame javax.accessibility.AccessibleContext getAccessibleContext()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Frame.AccessibleAWTFrame AccessibleAWTFrame(java.awt.Frame)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Frame.AccessibleAWTFrame javax.accessibility.AccessibleRole getAccessibleRole()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GradientPaint GradientPaint(float, float, java.awt.Color, float, float, java.awt.Color)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.GradientPaint GradientPaint(float, float, java.awt.Color, float, float, java.awt.Color, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.GradientPaint boolean isCyclic()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GradientPaint java.awt.Color getColor1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GradientPaint java.awt.Color getColor2()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GradientPaint java.awt.geom.Point2D getPoint1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GradientPaint java.awt.geom.Point2D getPoint2()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GradientPaintContext java.awt.image.ColorModel getColorModel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Graphics Graphics()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Graphics2D Graphics2D()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GraphicsCallback GraphicsCallback()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GraphicsCallback.PaintAllCallback PaintAllCallback()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GraphicsCallback.PaintAllCallback java.awt.GraphicsCallback.PaintAllCallback getInstance()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GraphicsCallback.PaintCallback PaintCallback()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GraphicsCallback.PaintCallback java.awt.GraphicsCallback.PaintCallback getInstance()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GraphicsCallback.PaintHeavyweightComponentsCallback PaintHeavyweightComponentsCallback()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GraphicsCallback.PaintHeavyweightComponentsCallback java.awt.GraphicsCallback.PaintHeavyweightComponentsCallback getInstance()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GraphicsCallback.PeerPaintCallback PeerPaintCallback()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GraphicsCallback.PeerPaintCallback java.awt.GraphicsCallback.PeerPaintCallback getInstance()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GraphicsCallback.PeerPrintCallback PeerPrintCallback()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GraphicsCallback.PeerPrintCallback java.awt.GraphicsCallback.PeerPrintCallback getInstance()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GraphicsCallback.PrintAllCallback PrintAllCallback()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GraphicsCallback.PrintAllCallback java.awt.GraphicsCallback.PrintAllCallback getInstance()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GraphicsCallback.PrintCallback PrintCallback()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GraphicsCallback.PrintCallback java.awt.GraphicsCallback.PrintCallback getInstance()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GraphicsCallback.PrintHeavyweightComponentsCallback PrintHeavyweightComponentsCallback()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GraphicsCallback.PrintHeavyweightComponentsCallback java.awt.GraphicsCallback.PrintHeavyweightComponentsCallback getInstance()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GraphicsConfigTemplate GraphicsConfigTemplate()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GraphicsConfiguration GraphicsConfiguration()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GraphicsConfiguration boolean isTranslucencyCapable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GraphicsConfiguration.DefaultBufferCapabilities DefaultBufferCapabilities(java.awt.ImageCapabilities)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.GraphicsDevice GraphicsDevice()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.GraphicsDevice boolean isDisplayChangeSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GraphicsDevice boolean isFullScreenSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GraphicsDevice int getAvailableAcceleratedMemory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GraphicsDevice void setDisplayMode(java.awt.DisplayMode)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GraphicsDevice.WindowTranslucency WindowTranslucency(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.GraphicsEnvironment GraphicsEnvironment()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GridBagConstraints GridBagConstraints()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.GridBagConstraints GridBagConstraints(int, int, int, int, double, double, int, int, java.awt.Insets, int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.GridBagConstraints boolean isVerticallyResizable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GridBagLayout float getLayoutAlignmentX(java.awt.Container)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GridBagLayout float getLayoutAlignmentY(java.awt.Container)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GridBagLayout java.awt.Dimension maximumLayoutSize(java.awt.Container)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GridBagLayout java.awt.Point getLayoutOrigin()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GridBagLayout java.awt.Point location(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GridBagLayout void addLayoutComponent(java.lang.String, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GridBagLayout void invalidateLayout(java.awt.Container)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GridBagLayoutInfo GridBagLayoutInfo(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.GridBagLayoutInfo boolean hasBaseline(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GridLayout GridLayout()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.GridLayout GridLayout(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.GridLayout GridLayout(int, int, int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.GridLayout int getColumns()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GridLayout int getHgap()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GridLayout int getRows()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GridLayout int getVgap()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GridLayout void addLayoutComponent(java.lang.String, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GridLayout void removeLayoutComponent(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.GridLayout void setColumns(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.GridLayout void setHgap(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.GridLayout void setRows(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.GridLayout void setVgap(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.HeadlessException HeadlessException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.HeadlessException HeadlessException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.IllegalComponentStateException IllegalComponentStateException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.IllegalComponentStateException IllegalComponentStateException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Image Image()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Image float getAccelerationPriority()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.ImageCapabilities ImageCapabilities(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.ImageCapabilities boolean isAccelerated()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.ImageCapabilities boolean isTrueVolatile()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.ImageMediaEntry ImageMediaEntry(java.awt.MediaTracker, java.awt.Image, int, int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.ImageMediaEntry boolean matches(java.awt.Image, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.ImageMediaEntry int parseflags(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.ImageMediaEntry java.lang.Object getMedia()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Insets Insets(int, int, int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Insets boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Insets int hashCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Insets void set(int, int, int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.JobAttributes JobAttributes()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.JobAttributes JobAttributes(java.awt.JobAttributes)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.JobAttributes boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.JobAttributes int getCopies()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.JobAttributes int getFromPage()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.JobAttributes int getMaxPage()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.JobAttributes int getMinPage()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.JobAttributes int getToPage()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.JobAttributes java.awt.JobAttributes.DefaultSelectionType getDefaultSelection()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.JobAttributes java.awt.JobAttributes.DestinationType getDestination()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.JobAttributes java.awt.JobAttributes.DialogType getDialog()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.JobAttributes java.awt.JobAttributes.MultipleDocumentHandlingType getMultipleDocumentHandling()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.JobAttributes java.awt.JobAttributes.SidesType getSides()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.JobAttributes java.lang.String getFileName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.JobAttributes java.lang.String getPrinter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.JobAttributes void set(java.awt.JobAttributes)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.JobAttributes void setCopies(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.JobAttributes void setCopiesToDefault()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.JobAttributes void setDefaultSelection(java.awt.JobAttributes.DefaultSelectionType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.JobAttributes void setDestination(java.awt.JobAttributes.DestinationType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.JobAttributes void setDialog(java.awt.JobAttributes.DialogType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.JobAttributes void setFileName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.JobAttributes void setFromPage(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.JobAttributes void setMaxPage(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.JobAttributes void setMinPage(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.JobAttributes void setMultipleDocumentHandling(java.awt.JobAttributes.MultipleDocumentHandlingType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.JobAttributes void setMultipleDocumentHandlingToDefault()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.JobAttributes void setPrinter(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.JobAttributes void setSides(java.awt.JobAttributes.SidesType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.JobAttributes void setSidesToDefault()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.JobAttributes void setToPage(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.KeyboardFocusManager java.awt.FocusTraversalPolicy getDefaultFocusTraversalPolicy()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.KeyboardFocusManager java.awt.SequencedEvent getCurrentSequencedEvent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.KeyboardFocusManager java.util.Set&lt;java.awt.AWTKeyStroke&gt; getDefaultFocusTraversalKeys(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.KeyboardFocusManager void clearMarkers()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.KeyboardFocusManager void setCurrentSequencedEvent(java.awt.SequencedEvent)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.KeyboardFocusManager.HeavyweightFocusRequest HeavyweightFocusRequest()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.KeyboardFocusManager.LightweightFocusRequest LightweightFocusRequest(java.awt.Component, boolean, sun.awt.CausedFocusEvent.Cause)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Label int getAlignment()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Label java.lang.String getText()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Label javax.accessibility.AccessibleContext getAccessibleContext()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Label.AccessibleAWTLabel AccessibleAWTLabel(java.awt.Label)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Label.AccessibleAWTLabel javax.accessibility.AccessibleRole getAccessibleRole()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.LightweightDispatcher LightweightDispatcher(java.awt.Container)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.LightweightDispatcher void enableEvents(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.List boolean allowsMultipleSelections()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.List int getRows()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.List int getVisibleIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.List void addActionListener(java.awt.event.ActionListener)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.List void addItemListener(java.awt.event.ItemListener)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.List.AccessibleAWTList javax.accessibility.Accessible getAccessibleAt(java.awt.Point)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.List.AccessibleAWTList javax.accessibility.AccessibleRole getAccessibleRole()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.List.AccessibleAWTList javax.accessibility.AccessibleSelection getAccessibleSelection()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.List.AccessibleAWTList void actionPerformed(java.awt.event.ActionEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.List.AccessibleAWTList void itemStateChanged(java.awt.event.ItemEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.List.AccessibleAWTList.AccessibleAWTListChild boolean contains(java.awt.Point)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.List.AccessibleAWTList.AccessibleAWTListChild boolean isFocusTraversable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.List.AccessibleAWTList.AccessibleAWTListChild boolean isShowing()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.List.AccessibleAWTList.AccessibleAWTListChild boolean isVisible()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.List.AccessibleAWTList.AccessibleAWTListChild int getAccessibleChildrenCount()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.List.AccessibleAWTList.AccessibleAWTListChild int getAccessibleIndexInParent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.List.AccessibleAWTList.AccessibleAWTListChild java.awt.Dimension getSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.List.AccessibleAWTList.AccessibleAWTListChild java.awt.Point getLocation()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.List.AccessibleAWTList.AccessibleAWTListChild java.awt.Point getLocationOnScreen()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.List.AccessibleAWTList.AccessibleAWTListChild java.awt.Rectangle getBounds()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.List.AccessibleAWTList.AccessibleAWTListChild javax.accessibility.Accessible getAccessibleAt(java.awt.Point)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.List.AccessibleAWTList.AccessibleAWTListChild javax.accessibility.Accessible getAccessibleChild(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.List.AccessibleAWTList.AccessibleAWTListChild javax.accessibility.AccessibleContext getAccessibleContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.List.AccessibleAWTList.AccessibleAWTListChild javax.accessibility.AccessibleRole getAccessibleRole()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.List.AccessibleAWTList.AccessibleAWTListChild void addFocusListener(java.awt.event.FocusListener)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.List.AccessibleAWTList.AccessibleAWTListChild void removeFocusListener(java.awt.event.FocusListener)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.List.AccessibleAWTList.AccessibleAWTListChild void requestFocus()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.List.AccessibleAWTList.AccessibleAWTListChild void setBounds(java.awt.Rectangle)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.List.AccessibleAWTList.AccessibleAWTListChild void setLocation(java.awt.Point)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.List.AccessibleAWTList.AccessibleAWTListChild void setSize(java.awt.Dimension)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MediaEntry MediaEntry(java.awt.MediaTracker, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.MediaEntry int getID()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MediaEntry void cancel()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.MediaTracker MediaTracker(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Menu boolean isTearOff()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Menu javax.accessibility.AccessibleContext getAccessibleContext()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Menu.AccessibleAWTMenu AccessibleAWTMenu(java.awt.Menu)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Menu.AccessibleAWTMenu javax.accessibility.AccessibleRole getAccessibleRole()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuBar java.awt.Menu getHelpMenu()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuBar javax.accessibility.AccessibleContext getAccessibleContext()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.MenuBar.AccessibleAWTMenuBar AccessibleAWTMenuBar(java.awt.MenuBar)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.MenuBar.AccessibleAWTMenuBar javax.accessibility.AccessibleRole getAccessibleRole()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent boolean eventEnabled(java.awt.AWTEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent int getAccessibleChildIndex(java.awt.MenuComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent java.awt.MenuContainer getParent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent java.awt.MenuContainer getParent_NoClientCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent java.awt.peer.MenuComponentPeer getPeer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent java.lang.Object getTreeLock()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent java.lang.String constructComponentName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent java.security.AccessControlContext getAccessControlContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent javax.accessibility.AccessibleContext getAccessibleContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent javax.accessibility.AccessibleStateSet getAccessibleStateSet()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent void processEvent(java.awt.AWTEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent void setName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.MenuComponent.AccessibleAWTMenuComponent AccessibleAWTMenuComponent(java.awt.MenuComponent)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.MenuComponent.AccessibleAWTMenuComponent boolean contains(java.awt.Point)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent.AccessibleAWTMenuComponent boolean isAccessibleChildSelected(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent.AccessibleAWTMenuComponent boolean isEnabled()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent.AccessibleAWTMenuComponent boolean isFocusTraversable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent.AccessibleAWTMenuComponent boolean isShowing()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent.AccessibleAWTMenuComponent boolean isVisible()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent.AccessibleAWTMenuComponent int getAccessibleChildrenCount()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent.AccessibleAWTMenuComponent int getAccessibleSelectionCount()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent.AccessibleAWTMenuComponent java.awt.Color getBackground()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent.AccessibleAWTMenuComponent java.awt.Color getForeground()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent.AccessibleAWTMenuComponent java.awt.Cursor getCursor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent.AccessibleAWTMenuComponent java.awt.Dimension getSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent.AccessibleAWTMenuComponent java.awt.FontMetrics getFontMetrics(java.awt.Font)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent.AccessibleAWTMenuComponent java.awt.Point getLocation()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent.AccessibleAWTMenuComponent java.awt.Point getLocationOnScreen()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent.AccessibleAWTMenuComponent java.awt.Rectangle getBounds()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent.AccessibleAWTMenuComponent java.lang.String getAccessibleDescription()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent.AccessibleAWTMenuComponent java.lang.String getAccessibleName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent.AccessibleAWTMenuComponent javax.accessibility.Accessible getAccessibleAt(java.awt.Point)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent.AccessibleAWTMenuComponent javax.accessibility.Accessible getAccessibleChild(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent.AccessibleAWTMenuComponent javax.accessibility.Accessible getAccessibleSelection(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent.AccessibleAWTMenuComponent javax.accessibility.AccessibleComponent getAccessibleComponent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent.AccessibleAWTMenuComponent javax.accessibility.AccessibleRole getAccessibleRole()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent.AccessibleAWTMenuComponent javax.accessibility.AccessibleSelection getAccessibleSelection()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent.AccessibleAWTMenuComponent void addAccessibleSelection(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent.AccessibleAWTMenuComponent void addFocusListener(java.awt.event.FocusListener)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent.AccessibleAWTMenuComponent void clearAccessibleSelection()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent.AccessibleAWTMenuComponent void removeAccessibleSelection(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent.AccessibleAWTMenuComponent void removeFocusListener(java.awt.event.FocusListener)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent.AccessibleAWTMenuComponent void requestFocus()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent.AccessibleAWTMenuComponent void selectAllAccessibleSelection()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent.AccessibleAWTMenuComponent void setBackground(java.awt.Color)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent.AccessibleAWTMenuComponent void setBounds(java.awt.Rectangle)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent.AccessibleAWTMenuComponent void setCursor(java.awt.Cursor)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent.AccessibleAWTMenuComponent void setEnabled(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent.AccessibleAWTMenuComponent void setForeground(java.awt.Color)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent.AccessibleAWTMenuComponent void setLocation(java.awt.Point)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent.AccessibleAWTMenuComponent void setSize(java.awt.Dimension)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuComponent.AccessibleAWTMenuComponent void setVisible(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuItem boolean eventEnabled(java.awt.AWTEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuItem boolean isEnabled()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuItem java.awt.MenuShortcut getShortcut()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuItem java.lang.String getActionCommand()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuItem java.lang.String getActionCommandImpl()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuItem java.lang.String getLabel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuItem javax.accessibility.AccessibleContext getAccessibleContext()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.MenuItem void addActionListener(java.awt.event.ActionListener)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.MenuItem void disableEvents(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.MenuItem void enableEvents(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.MenuItem void setActionCommand(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.MenuItem.AccessibleAWTMenuItem AccessibleAWTMenuItem(java.awt.MenuItem)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.MenuItem.AccessibleAWTMenuItem boolean setCurrentAccessibleValue(java.lang.Number)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuItem.AccessibleAWTMenuItem int getAccessibleActionCount()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuItem.AccessibleAWTMenuItem java.lang.Number getCurrentAccessibleValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuItem.AccessibleAWTMenuItem java.lang.Number getMaximumAccessibleValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuItem.AccessibleAWTMenuItem java.lang.Number getMinimumAccessibleValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuItem.AccessibleAWTMenuItem java.lang.String getAccessibleActionDescription(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuItem.AccessibleAWTMenuItem javax.accessibility.AccessibleAction getAccessibleAction()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuItem.AccessibleAWTMenuItem javax.accessibility.AccessibleRole getAccessibleRole()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuItem.AccessibleAWTMenuItem javax.accessibility.AccessibleValue getAccessibleValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuShortcut MenuShortcut(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.MenuShortcut MenuShortcut(int, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.MenuShortcut boolean usesShiftModifier()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuShortcut int getKey()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MenuShortcut int hashCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.ModalEventFilter ModalEventFilter(java.awt.Dialog)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.ModalEventFilter java.awt.Dialog getModalDialog()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.ModalEventFilter void disable()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.ModalEventFilter.ApplicationModalEventFilter ApplicationModalEventFilter(java.awt.Dialog)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.ModalEventFilter.ToolkitModalEventFilter ToolkitModalEventFilter(java.awt.Dialog)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.MouseInfo MouseInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MultipleGradientPaint float[] getFractions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MultipleGradientPaint int getTransparency()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MultipleGradientPaint java.awt.MultipleGradientPaint.ColorSpaceType getColorSpace()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MultipleGradientPaint java.awt.MultipleGradientPaint.CycleMethod getCycleMethod()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MultipleGradientPaint java.awt.geom.AffineTransform getTransform()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MultipleGradientPaint.ColorSpaceType ColorSpaceType(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.MultipleGradientPaint.CycleMethod CycleMethod(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.MultipleGradientPaintContext int convertEntireColorLinearRGBtoSRGB(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MultipleGradientPaintContext int indexIntoGradientsArrays(float)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.MultipleGradientPaintContext java.awt.image.ColorModel getColorModel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.PageAttributes PageAttributes(java.awt.PageAttributes)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.PageAttributes PageAttributes(java.awt.PageAttributes.ColorType, java.awt.PageAttributes.MediaType, java.awt.PageAttributes.OrientationRequestedType, java.awt.PageAttributes.OriginType, java.awt.PageAttributes.PrintQualityType, int[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.PageAttributes boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.PageAttributes int hashCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.PageAttributes int[] getPrinterResolution()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.PageAttributes java.awt.PageAttributes.ColorType getColor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.PageAttributes java.awt.PageAttributes.MediaType getMedia()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.PageAttributes java.awt.PageAttributes.OrientationRequestedType getOrientationRequested()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.PageAttributes java.awt.PageAttributes.OriginType getOrigin()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.PageAttributes java.awt.PageAttributes.PrintQualityType getPrintQuality()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.PageAttributes void set(java.awt.PageAttributes)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.PageAttributes void setColor(java.awt.PageAttributes.ColorType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.PageAttributes void setMedia(java.awt.PageAttributes.MediaType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.PageAttributes void setOrientationRequested(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.PageAttributes void setOrientationRequested(java.awt.PageAttributes.OrientationRequestedType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.PageAttributes void setOrientationRequestedToDefault()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.PageAttributes void setOrigin(java.awt.PageAttributes.OriginType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.PageAttributes void setPrintQuality(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.PageAttributes void setPrintQuality(java.awt.PageAttributes.PrintQualityType)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.PageAttributes void setPrintQualityToDefault()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.PageAttributes void setPrinterResolution(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.PageAttributes void setPrinterResolution(int[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.PageAttributes void setPrinterResolutionToDefault()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Panel javax.accessibility.AccessibleContext getAccessibleContext()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Panel.AccessibleAWTPanel AccessibleAWTPanel(java.awt.Panel)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Panel.AccessibleAWTPanel javax.accessibility.AccessibleRole getAccessibleRole()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.PeerFixer PeerFixer(java.awt.ScrollPane)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Point Point()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Point Point(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Point Point(java.awt.Point)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Point double getX()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Point double getY()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Point java.awt.Point getLocation()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Point void move(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Point void translate(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.PointerInfo PointerInfo(java.awt.GraphicsDevice, java.awt.Point)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.PointerInfo java.awt.GraphicsDevice getDevice()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.PointerInfo java.awt.Point getLocation()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Polygon Polygon()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Polygon Polygon(int[], int[], int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Polygon java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Polygon void calculateBounds(int[], int[], int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Polygon void invalidate()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Polygon void reset()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Polygon.PolygonPathIterator PolygonPathIterator(java.awt.Polygon, java.awt.Polygon, java.awt.geom.AffineTransform)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Polygon.PolygonPathIterator boolean isDone()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Polygon.PolygonPathIterator int getWindingRule()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Polygon.PolygonPathIterator void next()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.PopupMenu javax.accessibility.AccessibleContext getAccessibleContext()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.PopupMenu.AccessibleAWTPopupMenu AccessibleAWTPopupMenu(java.awt.PopupMenu)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.PopupMenu.AccessibleAWTPopupMenu javax.accessibility.AccessibleRole getAccessibleRole()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.PrintJob PrintJob()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Queue Queue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.RadialGradientPaint float getRadius()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Rectangle Rectangle()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Rectangle Rectangle(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Rectangle Rectangle(int, int, int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Rectangle Rectangle(java.awt.Dimension)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Rectangle Rectangle(java.awt.Point)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Rectangle Rectangle(java.awt.Point, java.awt.Dimension)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Rectangle Rectangle(java.awt.Rectangle)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Rectangle boolean contains(int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Rectangle boolean inside(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Rectangle boolean intersects(java.awt.Rectangle)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Rectangle boolean isEmpty()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Rectangle double getHeight()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Rectangle double getWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Rectangle double getX()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Rectangle double getY()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Rectangle int outcode(double, double)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Rectangle java.awt.Dimension getSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Rectangle java.awt.Point getLocation()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Rectangle java.awt.Rectangle getBounds()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Rectangle java.awt.Rectangle intersection(java.awt.Rectangle)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Rectangle java.awt.Rectangle union(java.awt.Rectangle)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Rectangle java.awt.geom.Rectangle2D getBounds2D()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Rectangle void move(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Rectangle void reshape(int, int, int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Rectangle void resize(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Rectangle void translate(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.RenderingHints.Key boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.RenderingHints.Key int intKey()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Robot boolean isAutoWaitForIdle()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Robot int getAutoDelay()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Robot void checkButtonsArgument(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Robot void checkDelayArgument(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Robot void checkKeycodeArgument(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Robot void checkValidRect(java.awt.Rectangle)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Robot void setAutoDelay(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Robot void setAutoWaitForIdle(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Robot.RobotDisposer RobotDisposer(java.awt.peer.RobotPeer)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.ScrollPane boolean isWheelScrollingEnabled()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.ScrollPane int getScrollbarDisplayPolicy()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.ScrollPane java.awt.Adjustable getHAdjustable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.ScrollPane java.awt.Adjustable getVAdjustable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.ScrollPane javax.accessibility.AccessibleContext getAccessibleContext()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.ScrollPane void setLayout(java.awt.LayoutManager)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.ScrollPane void setWheelScrollingEnabled(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.ScrollPane.AccessibleAWTScrollPane AccessibleAWTScrollPane(java.awt.ScrollPane)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.ScrollPane.AccessibleAWTScrollPane javax.accessibility.AccessibleRole getAccessibleRole()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.ScrollPane.PeerFixer PeerFixer(java.awt.ScrollPane, java.awt.ScrollPane)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.ScrollPaneAdjustable boolean getValueIsAdjusting()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.ScrollPaneAdjustable int getBlockIncrement()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.ScrollPaneAdjustable int getMaximum()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.ScrollPaneAdjustable int getMinimum()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.ScrollPaneAdjustable int getOrientation()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.ScrollPaneAdjustable int getUnitIncrement()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.ScrollPaneAdjustable int getValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.ScrollPaneAdjustable int getVisibleAmount()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.ScrollPaneAdjustable void addAdjustmentListener(java.awt.event.AdjustmentListener)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.ScrollPaneAdjustable void setBlockIncrement(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.ScrollPaneAdjustable void setMaximum(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.ScrollPaneAdjustable void setMinimum(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.ScrollPaneAdjustable void setVisibleAmount(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Scrollbar boolean getValueIsAdjusting()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Scrollbar int getLineIncrement()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Scrollbar int getMaximum()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Scrollbar int getMinimum()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Scrollbar int getOrientation()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Scrollbar int getPageIncrement()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Scrollbar int getValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Scrollbar int getVisible()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Scrollbar javax.accessibility.AccessibleContext getAccessibleContext()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Scrollbar void addAdjustmentListener(java.awt.event.AdjustmentListener)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Scrollbar.AccessibleAWTScrollBar AccessibleAWTScrollBar(java.awt.Scrollbar)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Scrollbar.AccessibleAWTScrollBar javax.accessibility.AccessibleRole getAccessibleRole()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Scrollbar.AccessibleAWTScrollBar javax.accessibility.AccessibleValue getAccessibleValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.SplashScreen SplashScreen(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.SystemColor SystemColor(byte)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.SystemColor java.lang.Object readResolve()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.SystemColor java.lang.Object writeReplace()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.TextArea int getColumns()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.TextArea int getRows()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.TextArea int getScrollbarVisibility()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.TextComponent boolean isEditable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.TextComponent int getIndexAtPoint(java.awt.Point)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.TextComponent java.awt.Rectangle getCharacterBounds(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.TextComponent void addTextListener(java.awt.event.TextListener)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.TextComponent.AccessibleAWTTextComponent javax.accessibility.AccessibleRole getAccessibleRole()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.TextComponent.AccessibleAWTTextComponent javax.accessibility.AccessibleText getAccessibleText()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.TextComponent.AccessibleAWTTextComponent javax.swing.text.AttributeSet getCharacterAttribute(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.TextField boolean echoCharIsSet()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.TextField char getEchoChar()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.TextField int getColumns()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.TextField void addActionListener(java.awt.event.ActionListener)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.TexturePaint java.awt.image.BufferedImage getImage()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.TexturePaintContext boolean isFilterableDCM(java.awt.image.ColorModel)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.TexturePaintContext boolean isFilterableICM(java.awt.image.ColorModel)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.TexturePaintContext boolean isMaskOK(int, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.TexturePaintContext double mod(double, double)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.TexturePaintContext int blend(int[], int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.TexturePaintContext int fractAsInt(double)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.TexturePaintContext java.awt.image.ColorModel getColorModel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Toolkit T createDragGestureRecognizer(java.lang.Class&lt;T&gt;, java.awt.dnd.DragSource, java.awt.Component, int, java.awt.dnd.DragGestureListener)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Toolkit boolean enabledOnToolkit(long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Toolkit boolean isAlwaysOnTopSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Toolkit int countAWTEventListeners(long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Toolkit java.awt.peer.MouseInfoPeer getMouseInfoPeer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Toolkit java.beans.PropertyChangeSupport createPropertyChangeSupport(java.awt.Toolkit)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Toolkit java.lang.Object lazilyLoadDesktopProperty(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Toolkit void initializeDesktopProperties()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Toolkit.DesktopPropertyChangeSupport DesktopPropertyChangeSupport(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Toolkit.SelectiveAWTEventListener SelectiveAWTEventListener(java.awt.Toolkit, java.awt.event.AWTEventListener, long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Toolkit.SelectiveAWTEventListener int[] getCalls()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Toolkit.SelectiveAWTEventListener java.awt.event.AWTEventListener getListener()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Toolkit.SelectiveAWTEventListener long getEventMask()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Toolkit.ToolkitEventMulticaster ToolkitEventMulticaster(java.awt.event.AWTEventListener, java.awt.event.AWTEventListener)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Toolkit.ToolkitEventMulticaster java.awt.event.AWTEventListener add(java.awt.event.AWTEventListener, java.awt.event.AWTEventListener)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.TrayIcon boolean isImageAutoSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.TrayIcon int getID()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.TrayIcon java.awt.Image getImage()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.TrayIcon java.awt.PopupMenu getPopupMenu()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.TrayIcon java.lang.String getActionCommand()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.TrayIcon java.lang.String getToolTip()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.TrayIcon java.security.AccessControlContext getAccessControlContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.TrayIcon void addActionListener(java.awt.event.ActionListener)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.TrayIcon void addMouseListener(java.awt.event.MouseListener)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.TrayIcon void addMouseMotionListener(java.awt.event.MouseMotionListener)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.TrayIcon void setActionCommand(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.TrayIcon void setID(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.TrayIcon.MessageType MessageType(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.WaitDispatchSupport WaitDispatchSupport(java.awt.EventDispatchThread)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.WaitDispatchSupport WaitDispatchSupport(java.awt.EventDispatchThread, java.awt.Conditional)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.WaitDispatchSupport java.lang.Object getTreeLock()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Window boolean dispatchMouseWheelToAncestor(java.awt.event.MouseWheelEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Window boolean getFocusableWindowState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Window boolean isAlwaysOnTop()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Window boolean isAutoRequestFocus()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Window boolean isDisposing()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Window boolean isFocusCycleRoot()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Window boolean isModalBlocked()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Window boolean isRecursivelyVisible()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Window boolean isShowing()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Window boolean isValidateRoot()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Window java.awt.Component getTemporaryLostComponent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Window java.awt.Container getContainer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Window java.awt.Container getFocusCycleRootAncestor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Window java.awt.Dialog getModalBlocker()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Window java.awt.Dialog.ModalExclusionType getModalExclusionType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Window java.awt.Point getLocationOnWindow()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Window java.awt.Window getOwner()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Window java.awt.Window getOwner_NoClientCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Window java.lang.String getWarningString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Window javax.accessibility.AccessibleContext getAccessibleContext()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Window void addWindowFocusListener(java.awt.event.WindowFocusListener)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Window void addWindowListener(java.awt.event.WindowListener)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Window void addWindowStateListener(java.awt.event.WindowStateListener)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Window void adjustDecendantsOnParent(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Window void adjustListeningChildrenOnParent(long, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Window void applyCompoundShape(sun.java2d.pipe.Region)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Window void applyCurrentShape()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Window void clearMostRecentFocusOwnerOnHide()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Window void deliverMouseWheelToAncestor(java.awt.event.MouseWheelEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Window void mixOnReshaping()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Window void postProcessKeyEvent(java.awt.event.KeyEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Window void setAutoRequestFocus(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Window void setFocusCycleRoot(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Window void updateZOrder()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Window.1DisposeAction 1DisposeAction(java.awt.Window)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Window.AccessibleAWTWindow AccessibleAWTWindow(java.awt.Window)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.Window.AccessibleAWTWindow javax.accessibility.AccessibleRole getAccessibleRole()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.awt.Window.Type Type(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
</root>
