<root>
  <item name="java.beans.beancontext.BeanContextChildSupport BeanContextChildSupport()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.beans.beancontext.BeanContextChildSupport BeanContextChildSupport(java.beans.beancontext.BeanContextChild)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.beans.beancontext.BeanContextChildSupport boolean validatePendingSetBeanContext(java.beans.beancontext.BeanContext)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextChildSupport java.beans.beancontext.BeanContext getBeanContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextChildSupport java.beans.beancontext.BeanContextChild getBeanContextChildPeer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextChildSupport void initializeBeanContextResources()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextChildSupport void releaseBeanContextResources()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextChildSupport void serviceAvailable(java.beans.beancontext.BeanContextServiceAvailableEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextChildSupport void serviceRevoked(java.beans.beancontext.BeanContextServiceRevokedEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextEvent BeanContextEvent(java.beans.beancontext.BeanContext)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.beans.beancontext.BeanContextEvent boolean isPropagated()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextEvent java.beans.beancontext.BeanContext getPropagatedFrom()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextEvent void setPropagatedFrom(java.beans.beancontext.BeanContext)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.beans.beancontext.BeanContextMembershipEvent BeanContextMembershipEvent(java.beans.beancontext.BeanContext, java.lang.Object[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.beans.beancontext.BeanContextMembershipEvent BeanContextMembershipEvent(java.beans.beancontext.BeanContext, java.util.Collection)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.beans.beancontext.BeanContextServiceAvailableEvent BeanContextServiceAvailableEvent(java.beans.beancontext.BeanContextServices, java.lang.Class)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.beans.beancontext.BeanContextServiceAvailableEvent java.lang.Class getServiceClass()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextServiceRevokedEvent BeanContextServiceRevokedEvent(java.beans.beancontext.BeanContextServices, java.lang.Class, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.beans.beancontext.BeanContextServiceRevokedEvent boolean isCurrentServiceInvalidNow()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextServiceRevokedEvent java.lang.Class getServiceClass()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextServicesSupport java.beans.beancontext.BeanContextServicesListener getChildBeanContextServicesListener(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextServicesSupport java.beans.beancontext.BeanContextServicesSupport.BCSSServiceProvider createBCSSServiceProvider(java.lang.Class, java.beans.beancontext.BeanContextServiceProvider)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextServicesSupport java.beans.beancontext.BeanContextSupport.BCSChild createBCSChild(java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextServicesSupport.BCSSChild BCSSChild(java.beans.beancontext.BeanContextServicesSupport, java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.beans.beancontext.BeanContextServicesSupport.BCSSChild.BCSSCServiceClassRef boolean isDelegated()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextServicesSupport.BCSSChild.BCSSCServiceClassRef int getDelegateRefs()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextServicesSupport.BCSSChild.BCSSCServiceClassRef int getRefs()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextServicesSupport.BCSSChild.BCSSCServiceClassRef int getServiceRefs()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextServicesSupport.BCSSChild.BCSSCServiceClassRef java.beans.beancontext.BeanContextServiceProvider getDelegateProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextServicesSupport.BCSSChild.BCSSCServiceClassRef java.beans.beancontext.BeanContextServiceProvider getServiceProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextServicesSupport.BCSSChild.BCSSCServiceClassRef java.lang.Class getServiceClass()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextServicesSupport.BCSSChild.BCSSCServiceClassRef void addRef(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.beans.beancontext.BeanContextServicesSupport.BCSSChild.BCSSCServiceClassRef void releaseRef(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.beans.beancontext.BeanContextServicesSupport.BCSSChild.BCSSCServiceRef BCSSCServiceRef(java.beans.beancontext.BeanContextServicesSupport.BCSSChild, java.beans.beancontext.BeanContextServicesSupport.BCSSChild.BCSSCServiceClassRef, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.beans.beancontext.BeanContextServicesSupport.BCSSChild.BCSSCServiceRef boolean isDelegated()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextServicesSupport.BCSSChild.BCSSCServiceRef int release()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.beans.beancontext.BeanContextServicesSupport.BCSSChild.BCSSCServiceRef java.beans.beancontext.BeanContextServicesSupport.BCSSChild.BCSSCServiceClassRef getServiceClassRef()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextServicesSupport.BCSSChild.BCSSCServiceRef void addRef()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.beans.beancontext.BeanContextServicesSupport.BCSSProxyServiceProvider BCSSProxyServiceProvider(java.beans.beancontext.BeanContextServicesSupport, java.beans.beancontext.BeanContextServices)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.beans.beancontext.BeanContextServicesSupport.BCSSServiceProvider BCSSServiceProvider(java.lang.Class, java.beans.beancontext.BeanContextServiceProvider)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.beans.beancontext.BeanContextServicesSupport.BCSSServiceProvider java.beans.beancontext.BeanContextServiceProvider getServiceProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextSupport boolean addAll(java.util.Collection)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextSupport boolean isDesignTime()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextSupport boolean isSerializing()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextSupport boolean removeAll(java.util.Collection)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextSupport boolean retainAll(java.util.Collection)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextSupport boolean validatePendingAdd(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextSupport boolean validatePendingRemove(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextSupport java.beans.PropertyChangeListener getChildPropertyChangeListener(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextSupport java.beans.VetoableChangeListener getChildVetoableChangeListener(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextSupport java.beans.Visibility getChildVisibility(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextSupport java.beans.beancontext.BeanContextMembershipListener getChildBeanContextMembershipListener(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextSupport java.beans.beancontext.BeanContextSupport.BCSChild createBCSChild(java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextSupport java.io.Serializable getChildSerializable(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextSupport java.util.Locale getLocale()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextSupport void bcsPreDeserializationHook(java.io.ObjectInputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextSupport void bcsPreSerializationHook(java.io.ObjectOutputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextSupport void childJustAddedHook(java.lang.Object, java.beans.beancontext.BeanContextSupport.BCSChild)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextSupport void childJustRemovedHook(java.lang.Object, java.beans.beancontext.BeanContextSupport.BCSChild)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextSupport void clear()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextSupport.BCSChild BCSChild(java.beans.beancontext.BeanContextSupport, java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.beans.beancontext.BeanContextSupport.BCSChild boolean isProxyPeer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextSupport.BCSChild boolean isRemovePending()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextSupport.BCSChild java.lang.Object getChild()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextSupport.BCSChild java.lang.Object getProxyPeer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="java.beans.beancontext.BeanContextSupport.BCSChild void setRemovePending(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.beans.beancontext.BeanContextSupport.BCSIterator BCSIterator(java.util.Iterator)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.beans.beancontext.BeanContextSupport.BCSIterator void remove()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
</root>
