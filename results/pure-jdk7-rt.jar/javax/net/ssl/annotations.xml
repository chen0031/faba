<root>
  <item name="javax.net.ssl.DefaultSSLServerSocketFactory DefaultSSLServerSocketFactory(java.lang.Exception)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.net.ssl.DefaultSSLServerSocketFactory java.lang.String[] getDefaultCipherSuites()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.DefaultSSLServerSocketFactory java.lang.String[] getSupportedCipherSuites()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.DefaultSSLSocketFactory DefaultSSLSocketFactory(java.lang.Exception)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.net.ssl.DefaultSSLSocketFactory java.lang.String[] getDefaultCipherSuites()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.DefaultSSLSocketFactory java.lang.String[] getSupportedCipherSuites()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.ExtendedSSLSession ExtendedSSLSession()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.HandshakeCompletedEvent HandshakeCompletedEvent(javax.net.ssl.SSLSocket, javax.net.ssl.SSLSession)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.net.ssl.HandshakeCompletedEvent javax.net.ssl.SSLSession getSession()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.HttpsURLConnection javax.net.ssl.HostnameVerifier getDefaultHostnameVerifier()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.HttpsURLConnection javax.net.ssl.HostnameVerifier getHostnameVerifier()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.HttpsURLConnection javax.net.ssl.SSLSocketFactory getSSLSocketFactory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.HttpsURLConnection void setHostnameVerifier(javax.net.ssl.HostnameVerifier)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.net.ssl.HttpsURLConnection.DefaultHostnameVerifier DefaultHostnameVerifier()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.HttpsURLConnection.DefaultHostnameVerifier boolean verify(java.lang.String, javax.net.ssl.SSLSession)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.KeyManagerFactory KeyManagerFactory(javax.net.ssl.KeyManagerFactorySpi, java.security.Provider, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.net.ssl.KeyManagerFactory java.lang.String getAlgorithm()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.KeyManagerFactory java.security.Provider getProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.KeyManagerFactorySpi KeyManagerFactorySpi()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.KeyStoreBuilderParameters KeyStoreBuilderParameters(java.security.KeyStore.Builder)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.net.ssl.KeyStoreBuilderParameters java.util.List&lt;java.security.KeyStore.Builder&gt; getParameters()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.SSLContext SSLContext(javax.net.ssl.SSLContextSpi, java.security.Provider, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.net.ssl.SSLContext java.lang.String getProtocol()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.SSLContext java.security.Provider getProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.SSLContextSpi SSLContextSpi()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.SSLEngine SSLEngine()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.net.ssl.SSLEngine SSLEngine(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.net.ssl.SSLEngine int getPeerPort()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.SSLEngine java.lang.String getPeerHost()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.SSLEngine javax.net.ssl.SSLSession getHandshakeSession()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.SSLEngineResult SSLEngineResult(javax.net.ssl.SSLEngineResult.Status, javax.net.ssl.SSLEngineResult.HandshakeStatus, int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.net.ssl.SSLEngineResult int bytesConsumed()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.SSLEngineResult int bytesProduced()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.SSLEngineResult javax.net.ssl.SSLEngineResult.HandshakeStatus getHandshakeStatus()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.SSLEngineResult javax.net.ssl.SSLEngineResult.Status getStatus()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.SSLEngineResult.HandshakeStatus HandshakeStatus(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.net.ssl.SSLEngineResult.Status Status(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.net.ssl.SSLException SSLException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.net.ssl.SSLHandshakeException SSLHandshakeException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.net.ssl.SSLKeyException SSLKeyException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.net.ssl.SSLParameters SSLParameters()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.SSLParameters boolean getNeedClientAuth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.SSLParameters boolean getWantClientAuth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.SSLParameters java.lang.String getEndpointIdentificationAlgorithm()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.SSLParameters java.security.AlgorithmConstraints getAlgorithmConstraints()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.SSLParameters void setAlgorithmConstraints(java.security.AlgorithmConstraints)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.net.ssl.SSLParameters void setEndpointIdentificationAlgorithm(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.net.ssl.SSLParameters void setNeedClientAuth(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.net.ssl.SSLParameters void setWantClientAuth(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.net.ssl.SSLPeerUnverifiedException SSLPeerUnverifiedException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.net.ssl.SSLProtocolException SSLProtocolException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.net.ssl.SSLServerSocketFactory SSLServerSocketFactory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.SSLSessionBindingEvent SSLSessionBindingEvent(javax.net.ssl.SSLSession, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.net.ssl.SSLSessionBindingEvent java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.SSLSocket javax.net.ssl.SSLSession getHandshakeSession()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.SSLSocketFactory SSLSocketFactory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.TrustManagerFactory TrustManagerFactory(javax.net.ssl.TrustManagerFactorySpi, java.security.Provider, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.net.ssl.TrustManagerFactory java.lang.String getAlgorithm()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.TrustManagerFactory java.security.Provider getProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.TrustManagerFactorySpi TrustManagerFactorySpi()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.X509ExtendedKeyManager X509ExtendedKeyManager()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.X509ExtendedKeyManager java.lang.String chooseEngineClientAlias(java.lang.String[], java.security.Principal[], javax.net.ssl.SSLEngine)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.X509ExtendedKeyManager java.lang.String chooseEngineServerAlias(java.lang.String, java.security.Principal[], javax.net.ssl.SSLEngine)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.X509ExtendedTrustManager X509ExtendedTrustManager()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
</root>
