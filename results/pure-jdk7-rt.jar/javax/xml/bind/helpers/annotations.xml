<root>
  <item name="javax.xml.bind.helpers.AbstractMarshallerImpl A getAdapter(java.lang.Class&lt;A&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.AbstractMarshallerImpl AbstractMarshallerImpl()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.xml.bind.helpers.AbstractMarshallerImpl boolean isFormattedOutput()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.AbstractMarshallerImpl boolean isFragment()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.AbstractMarshallerImpl java.lang.String getEncoding()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.AbstractMarshallerImpl java.lang.String getNoNSSchemaLocation()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.AbstractMarshallerImpl java.lang.String getSchemaLocation()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.AbstractMarshallerImpl javax.xml.bind.Marshaller.Listener getListener()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.AbstractMarshallerImpl javax.xml.bind.ValidationEventHandler getEventHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.AbstractMarshallerImpl javax.xml.bind.attachment.AttachmentMarshaller getAttachmentMarshaller()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.AbstractMarshallerImpl javax.xml.validation.Schema getSchema()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.AbstractMarshallerImpl void marshal(java.lang.Object, javax.xml.stream.XMLEventWriter)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.AbstractMarshallerImpl void marshal(java.lang.Object, javax.xml.stream.XMLStreamWriter)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.AbstractMarshallerImpl void setAdapter(java.lang.Class&lt;A&gt;, A)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.AbstractMarshallerImpl void setAttachmentMarshaller(javax.xml.bind.attachment.AttachmentMarshaller)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.AbstractMarshallerImpl void setEncoding(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.xml.bind.helpers.AbstractMarshallerImpl void setEventHandler(javax.xml.bind.ValidationEventHandler)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.xml.bind.helpers.AbstractMarshallerImpl void setFormattedOutput(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.xml.bind.helpers.AbstractMarshallerImpl void setFragment(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.xml.bind.helpers.AbstractMarshallerImpl void setListener(javax.xml.bind.Marshaller.Listener)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.AbstractMarshallerImpl void setNoNSSchemaLocation(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.xml.bind.helpers.AbstractMarshallerImpl void setSchema(javax.xml.validation.Schema)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.AbstractMarshallerImpl void setSchemaLocation(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.xml.bind.helpers.AbstractUnmarshallerImpl A getAdapter(java.lang.Class&lt;A&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.AbstractUnmarshallerImpl AbstractUnmarshallerImpl()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.xml.bind.helpers.AbstractUnmarshallerImpl boolean isValidating()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.AbstractUnmarshallerImpl java.lang.Object unmarshal(javax.xml.stream.XMLEventReader)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.AbstractUnmarshallerImpl java.lang.Object unmarshal(javax.xml.stream.XMLStreamReader)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.AbstractUnmarshallerImpl javax.xml.bind.JAXBElement&lt;T&gt; unmarshal(javax.xml.stream.XMLEventReader, java.lang.Class&lt;T&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.AbstractUnmarshallerImpl javax.xml.bind.JAXBElement&lt;T&gt; unmarshal(javax.xml.stream.XMLStreamReader, java.lang.Class&lt;T&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.AbstractUnmarshallerImpl javax.xml.bind.JAXBElement&lt;T&gt; unmarshal(javax.xml.transform.Source, java.lang.Class&lt;T&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.AbstractUnmarshallerImpl javax.xml.bind.JAXBElement&lt;T&gt; unmarshal(org.w3c.dom.Node, java.lang.Class&lt;T&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.AbstractUnmarshallerImpl javax.xml.bind.Unmarshaller.Listener getListener()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.AbstractUnmarshallerImpl javax.xml.bind.ValidationEventHandler getEventHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.AbstractUnmarshallerImpl javax.xml.bind.attachment.AttachmentUnmarshaller getAttachmentUnmarshaller()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.AbstractUnmarshallerImpl javax.xml.validation.Schema getSchema()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.AbstractUnmarshallerImpl void setAdapter(java.lang.Class&lt;A&gt;, A)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.AbstractUnmarshallerImpl void setAttachmentUnmarshaller(javax.xml.bind.attachment.AttachmentUnmarshaller)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.AbstractUnmarshallerImpl void setEventHandler(javax.xml.bind.ValidationEventHandler)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.xml.bind.helpers.AbstractUnmarshallerImpl void setListener(javax.xml.bind.Unmarshaller.Listener)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.AbstractUnmarshallerImpl void setSchema(javax.xml.validation.Schema)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.AbstractUnmarshallerImpl void setValidating(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.xml.bind.helpers.DefaultValidationEventHandler DefaultValidationEventHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.Messages Messages()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.ValidationEventImpl int getSeverity()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.ValidationEventImpl java.lang.String getMessage()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.ValidationEventImpl java.lang.Throwable getLinkedException()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.ValidationEventImpl javax.xml.bind.ValidationEventLocator getLocator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.ValidationEventImpl void setLinkedException(java.lang.Throwable)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.xml.bind.helpers.ValidationEventImpl void setLocator(javax.xml.bind.ValidationEventLocator)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.xml.bind.helpers.ValidationEventImpl void setMessage(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.xml.bind.helpers.ValidationEventLocatorImpl ValidationEventLocatorImpl()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.xml.bind.helpers.ValidationEventLocatorImpl int getColumnNumber()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.ValidationEventLocatorImpl int getLineNumber()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.ValidationEventLocatorImpl int getOffset()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.ValidationEventLocatorImpl java.lang.Object getObject()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.ValidationEventLocatorImpl java.net.URL getURL()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.ValidationEventLocatorImpl org.w3c.dom.Node getNode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.xml.bind.helpers.ValidationEventLocatorImpl void setColumnNumber(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.xml.bind.helpers.ValidationEventLocatorImpl void setLineNumber(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.xml.bind.helpers.ValidationEventLocatorImpl void setNode(org.w3c.dom.Node)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.xml.bind.helpers.ValidationEventLocatorImpl void setObject(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.xml.bind.helpers.ValidationEventLocatorImpl void setOffset(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.xml.bind.helpers.ValidationEventLocatorImpl void setURL(java.net.URL)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
</root>
