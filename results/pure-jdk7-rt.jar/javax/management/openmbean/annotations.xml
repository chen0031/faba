<root>
  <item name="javax.management.openmbean.ArrayType boolean isPrimitiveArray()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.management.openmbean.ArrayType int getDimension()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.management.openmbean.ArrayType java.lang.String getPrimitiveTypeKey(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.management.openmbean.ArrayType java.lang.String getPrimitiveTypeName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.management.openmbean.ArrayType javax.management.openmbean.OpenType&lt;?&gt; getElementOpenType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.management.openmbean.ArrayType javax.management.openmbean.SimpleType&lt;?&gt; getPrimitiveOpenType(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.management.openmbean.CompositeDataInvocationHandler CompositeDataInvocationHandler(javax.management.openmbean.CompositeData)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.management.openmbean.CompositeDataInvocationHandler CompositeDataInvocationHandler(javax.management.openmbean.CompositeData, com.sun.jmx.mbeanserver.MXBeanLookup)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.management.openmbean.CompositeDataInvocationHandler javax.management.openmbean.CompositeData getCompositeData()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.management.openmbean.CompositeDataSupport javax.management.openmbean.CompositeType getCompositeType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.management.openmbean.InvalidKeyException InvalidKeyException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.management.openmbean.InvalidKeyException InvalidKeyException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.management.openmbean.InvalidOpenTypeException InvalidOpenTypeException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.management.openmbean.InvalidOpenTypeException InvalidOpenTypeException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.management.openmbean.KeyAlreadyExistsException KeyAlreadyExistsException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.management.openmbean.KeyAlreadyExistsException KeyAlreadyExistsException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.management.openmbean.OpenDataException OpenDataException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.management.openmbean.OpenDataException OpenDataException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.management.openmbean.OpenMBeanAttributeInfoSupport T cast(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.management.openmbean.OpenMBeanAttributeInfoSupport boolean hasDefaultValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.management.openmbean.OpenMBeanAttributeInfoSupport boolean hasLegalValues()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.management.openmbean.OpenMBeanAttributeInfoSupport boolean hasMaxValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.management.openmbean.OpenMBeanAttributeInfoSupport boolean hasMinValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.management.openmbean.OpenMBeanAttributeInfoSupport java.lang.Comparable&lt;?&gt; getMaxValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.management.openmbean.OpenMBeanAttributeInfoSupport java.lang.Comparable&lt;?&gt; getMinValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.management.openmbean.OpenMBeanAttributeInfoSupport java.lang.Object getDefaultValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.management.openmbean.OpenMBeanAttributeInfoSupport java.util.Set&lt;?&gt; getLegalValues()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.management.openmbean.OpenMBeanAttributeInfoSupport javax.management.openmbean.OpenType&lt;?&gt; getOpenType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.management.openmbean.OpenMBeanConstructorInfoSupport javax.management.MBeanParameterInfo[] arrayCopyCast(javax.management.openmbean.OpenMBeanParameterInfo[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.management.openmbean.OpenMBeanInfoSupport javax.management.MBeanAttributeInfo[] attributeArray(javax.management.openmbean.OpenMBeanAttributeInfo[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.management.openmbean.OpenMBeanInfoSupport javax.management.MBeanConstructorInfo[] constructorArray(javax.management.openmbean.OpenMBeanConstructorInfo[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.management.openmbean.OpenMBeanInfoSupport javax.management.MBeanOperationInfo[] operationArray(javax.management.openmbean.OpenMBeanOperationInfo[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.management.openmbean.OpenMBeanOperationInfoSupport javax.management.MBeanParameterInfo[] arrayCopyCast(javax.management.openmbean.OpenMBeanParameterInfo[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.management.openmbean.OpenMBeanOperationInfoSupport javax.management.openmbean.OpenMBeanParameterInfo[] arrayCopyCast(javax.management.MBeanParameterInfo[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.management.openmbean.OpenMBeanOperationInfoSupport javax.management.openmbean.OpenType&lt;?&gt; getReturnOpenType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.management.openmbean.OpenMBeanParameterInfoSupport boolean hasDefaultValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.management.openmbean.OpenMBeanParameterInfoSupport boolean hasLegalValues()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.management.openmbean.OpenMBeanParameterInfoSupport boolean hasMaxValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.management.openmbean.OpenMBeanParameterInfoSupport boolean hasMinValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.management.openmbean.OpenMBeanParameterInfoSupport java.lang.Comparable&lt;?&gt; getMaxValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.management.openmbean.OpenMBeanParameterInfoSupport java.lang.Comparable&lt;?&gt; getMinValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.management.openmbean.OpenMBeanParameterInfoSupport java.lang.Object getDefaultValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.management.openmbean.OpenMBeanParameterInfoSupport java.util.Set&lt;?&gt; getLegalValues()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.management.openmbean.OpenMBeanParameterInfoSupport javax.management.openmbean.OpenType&lt;?&gt; getOpenType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.management.openmbean.OpenType boolean isArray()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.management.openmbean.OpenType java.lang.String getClassName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.management.openmbean.OpenType java.lang.String getDescription()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.management.openmbean.OpenType java.lang.String getTypeName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.management.openmbean.OpenType java.lang.String safeGetClassName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.management.openmbean.TabularDataSupport javax.management.openmbean.TabularType getTabularType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.management.openmbean.TabularType java.util.List&lt;java.lang.String&gt; getIndexNames()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.management.openmbean.TabularType javax.management.openmbean.CompositeType getRowType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
</root>
