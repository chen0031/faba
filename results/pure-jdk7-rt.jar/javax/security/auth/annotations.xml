<root>
  <item name="javax.security.auth.DestroyFailedException DestroyFailedException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.security.auth.DestroyFailedException DestroyFailedException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.security.auth.PrivateCredentialPermission java.lang.String getActions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.PrivateCredentialPermission java.lang.String getCredentialClass()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.PrivateCredentialPermission java.security.PermissionCollection newPermissionCollection()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.PrivateCredentialPermission.CredOwner CredOwner(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.security.auth.PrivateCredentialPermission.CredOwner boolean implies(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.RefreshFailedException RefreshFailedException()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.security.auth.RefreshFailedException RefreshFailedException(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.security.auth.Subject Subject()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.security.auth.Subject boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.Subject java.util.Set&lt;java.lang.Object&gt; getPrivateCredentials()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.Subject java.util.Set&lt;java.lang.Object&gt; getPublicCredentials()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.Subject java.util.Set&lt;java.security.Principal&gt; getPrincipals()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.Subject.AuthPermissionHolder AuthPermissionHolder()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.Subject.SecureSet SecureSet(javax.security.auth.Subject, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.security.auth.SubjectDomainCombiner java.security.ProtectionDomain[] optimize(java.security.ProtectionDomain[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
</root>
