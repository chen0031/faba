<root>
  <item name="javax.security.auth.kerberos.DelegationPermission boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.DelegationPermission boolean implies(java.security.Permission)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.DelegationPermission java.security.PermissionCollection newPermissionCollection()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.JavaxSecurityAuthKerberosAccessImpl JavaxSecurityAuthKerberosAccessImpl()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KerberosKey boolean isDestroyed()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KerberosKey int getKeyType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KerberosKey int getVersionNumber()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KerberosKey java.lang.String getFormat()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KerberosKey javax.security.auth.kerberos.KerberosPrincipal getPrincipal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KerberosPrincipal boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KerberosPrincipal int getNameType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KerberosPrincipal java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KerberosPrincipal java.lang.String getRealm()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KerberosPrincipal java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket boolean isDestroyed()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket boolean isForwardable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket boolean isForwarded()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket boolean isInitial()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket boolean isPostdated()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket boolean isProxiable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket boolean isProxy()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket boolean isRenewable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket int getSessionKeyType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket javax.security.auth.kerberos.KerberosPrincipal getClient()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket javax.security.auth.kerberos.KerberosPrincipal getServer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KeyImpl boolean isDestroyed()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KeyImpl int getKeyType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KeyImpl java.lang.String getFormat()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KeyTab KeyTab(java.io.File)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.security.auth.kerberos.KeyTab javax.security.auth.kerberos.KeyTab getInstance()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KeyTab javax.security.auth.kerberos.KeyTab getInstance(java.io.File)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KrbDelegationPermissionCollection KrbDelegationPermissionCollection()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.security.auth.kerberos.KrbServicePermissionCollection KrbServicePermissionCollection()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.security.auth.kerberos.ServicePermission int getMask()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.ServicePermission java.security.PermissionCollection newPermissionCollection()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.ServicePermission void init(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
</root>
