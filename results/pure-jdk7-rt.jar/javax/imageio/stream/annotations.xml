<root>
  <item name="javax.imageio.stream.FileCacheImageInputStream boolean isCached()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.stream.FileCacheImageInputStream boolean isCachedFile()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.stream.FileCacheImageInputStream boolean isCachedMemory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.stream.FileCacheImageInputStream void finalize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.stream.FileCacheImageInputStream.StreamDisposerRecord StreamDisposerRecord(java.io.File, java.io.RandomAccessFile)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.stream.FileCacheImageOutputStream boolean isCached()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.stream.FileCacheImageOutputStream boolean isCachedFile()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.stream.FileCacheImageOutputStream boolean isCachedMemory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.stream.FileImageInputStream void finalize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.stream.FileImageOutputStream void finalize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.stream.IIOByteBuffer IIOByteBuffer(byte[], int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.stream.IIOByteBuffer byte[] getData()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.stream.IIOByteBuffer int getLength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.stream.IIOByteBuffer int getOffset()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.stream.IIOByteBuffer void setData(byte[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.stream.IIOByteBuffer void setLength(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.stream.IIOByteBuffer void setOffset(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.stream.ImageInputStreamImpl boolean isCached()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.stream.ImageInputStreamImpl boolean isCachedFile()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.stream.ImageInputStreamImpl boolean isCachedMemory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.stream.ImageInputStreamImpl int getBitOffset()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.stream.ImageInputStreamImpl java.nio.ByteOrder getByteOrder()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.stream.ImageInputStreamImpl long getFlushedPosition()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.stream.ImageInputStreamImpl long getStreamPosition()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.stream.ImageInputStreamImpl long length()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.stream.ImageInputStreamImpl void checkClosed()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.stream.ImageInputStreamImpl void close()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.stream.ImageInputStreamImpl void seek(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.stream.ImageInputStreamImpl void setBitOffset(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.stream.ImageInputStreamImpl void setByteOrder(java.nio.ByteOrder)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.stream.ImageInputStreamImpl void toChars(byte[], char[], int, int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="1"/>
  </item>
  <item name="javax.imageio.stream.ImageInputStreamImpl void toInts(byte[], int[], int, int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="1"/>
  </item>
  <item name="javax.imageio.stream.ImageInputStreamImpl void toLongs(byte[], long[], int, int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="1"/>
  </item>
  <item name="javax.imageio.stream.ImageInputStreamImpl void toShorts(byte[], short[], int, int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="1"/>
  </item>
  <item name="javax.imageio.stream.MemoryCache MemoryCache()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.stream.MemoryCache long getLength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.stream.MemoryCacheImageInputStream boolean isCached()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.stream.MemoryCacheImageInputStream boolean isCachedFile()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.stream.MemoryCacheImageInputStream boolean isCachedMemory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.stream.MemoryCacheImageInputStream void finalize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.stream.MemoryCacheImageInputStream.StreamDisposerRecord StreamDisposerRecord(javax.imageio.stream.MemoryCache)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.stream.MemoryCacheImageOutputStream boolean isCached()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.stream.MemoryCacheImageOutputStream boolean isCachedFile()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.stream.MemoryCacheImageOutputStream boolean isCachedMemory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
</root>
