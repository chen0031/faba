<root>
  <item name="javax.imageio.spi.DigraphNode int getInDegree()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.spi.DigraphNode java.lang.Object getData()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.spi.DigraphNode void decrementInDegree()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.spi.DigraphNode void incrementInDegree()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.spi.FilterIterator boolean hasNext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.spi.FilterIterator void remove()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.spi.IIOServiceProvider IIOServiceProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.spi.IIOServiceProvider IIOServiceProvider(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.spi.IIOServiceProvider java.lang.String getVendorName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.spi.IIOServiceProvider java.lang.String getVersion()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.spi.IIOServiceProvider void onDeregistration(javax.imageio.spi.ServiceRegistry, java.lang.Class&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.spi.IIOServiceProvider void onRegistration(javax.imageio.spi.ServiceRegistry, java.lang.Class&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.spi.ImageInputStreamSpi ImageInputStreamSpi()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.spi.ImageInputStreamSpi ImageInputStreamSpi(java.lang.String, java.lang.String, java.lang.Class&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.spi.ImageInputStreamSpi boolean canUseCacheFile()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.spi.ImageInputStreamSpi boolean needsCacheFile()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.spi.ImageInputStreamSpi java.lang.Class&lt;?&gt; getInputClass()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.spi.ImageOutputStreamSpi ImageOutputStreamSpi()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.spi.ImageOutputStreamSpi ImageOutputStreamSpi(java.lang.String, java.lang.String, java.lang.Class&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.spi.ImageOutputStreamSpi boolean canUseCacheFile()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.spi.ImageOutputStreamSpi boolean needsCacheFile()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.spi.ImageOutputStreamSpi java.lang.Class&lt;?&gt; getOutputClass()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.spi.ImageReaderSpi ImageReaderSpi()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.spi.ImageReaderWriterSpi ImageReaderWriterSpi()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.spi.ImageReaderWriterSpi boolean isStandardImageMetadataFormatSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.spi.ImageReaderWriterSpi boolean isStandardStreamMetadataFormatSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.spi.ImageReaderWriterSpi java.lang.String getNativeImageMetadataFormatName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.spi.ImageReaderWriterSpi java.lang.String getNativeStreamMetadataFormatName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.spi.ImageReaderWriterSpi java.lang.String getPluginClassName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.spi.ImageTranscoderSpi ImageTranscoderSpi()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.spi.ImageTranscoderSpi ImageTranscoderSpi(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.spi.ImageWriterSpi ImageWriterSpi()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.spi.ImageWriterSpi boolean isFormatLossless()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.imageio.spi.PartialOrderIterator void remove()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
</root>
