<root>
  <item name="javax.swing.plaf.nimbus.AbstractRegionPainter AbstractRegionPainter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.AbstractRegionPainter float clamp(float)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.AbstractRegionPainter float decodeAnchorX(float, float)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.AbstractRegionPainter float decodeAnchorY(float, float)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.AbstractRegionPainter float decodeX(float)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.AbstractRegionPainter float decodeY(float)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.AbstractRegionPainter int clamp(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.AbstractRegionPainter java.lang.Object[] getExtendedCacheKeys(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext PaintContext(java.awt.Insets, java.awt.Dimension, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext PaintContext(java.awt.Insets, java.awt.Dimension, boolean, javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext.CacheMode, double, double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext.CacheMode CacheMode(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.ArrowButtonPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.ButtonPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.CheckBoxMenuItemPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.CheckBoxPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.ComboBoxArrowButtonEditableState ComboBoxArrowButtonEditableState()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.ComboBoxArrowButtonPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.ComboBoxEditableState ComboBoxEditableState()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.ComboBoxPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.ComboBoxTextFieldPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.DerivedColor DerivedColor(java.lang.String, float, float, float, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.DerivedColor float clamp(float)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.DerivedColor float getBrightnessOffset()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.DerivedColor float getHueOffset()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.DerivedColor float getSaturationOffset()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.DerivedColor int clamp(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.DerivedColor int getAlphaOffset()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.DerivedColor int getRGB()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.DerivedColor java.lang.String getUiDefaultParentName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.DerivedColor.UIResource UIResource(java.lang.String, float, float, float, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.DesktopIconPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.DesktopPanePainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.DropShadowEffect DropShadowEffect()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.DropShadowEffect javax.swing.plaf.nimbus.Effect.EffectType getEffectType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.EditorPanePainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.Effect Effect()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.Effect.ArrayCache ArrayCache()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.Effect.EffectType EffectType(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.EffectUtils EffectUtils()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.EffectUtils void blur(byte[], byte[], int, int, float[], int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="1"/>
  </item>
  <item name="javax.swing.plaf.nimbus.EffectUtils void blur(int[], int[], int, int, float[], int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="1"/>
  </item>
  <item name="javax.swing.plaf.nimbus.FileChooserPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.FormattedTextFieldPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.ImageCache boolean isImageCachable(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.ImageCache javax.swing.plaf.nimbus.ImageCache getInstance()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.ImageCache.PixelCountSoftReference PixelCountSoftReference(java.awt.Image, java.lang.ref.ReferenceQueue&lt;? super java.awt.Image&gt;, int, int, java.awt.GraphicsConfiguration, int, int, java.lang.Object[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.ImageScalingHelper ImageScalingHelper()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.ImageScalingHelper.PaintType PaintType(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.InnerShadowEffect InnerShadowEffect()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.InnerShadowEffect javax.swing.plaf.nimbus.Effect.EffectType getEffectType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.InternalFramePainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.InternalFrameTitlePaneCloseButtonPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.InternalFrameTitlePaneCloseButtonWindowNotFocusedState InternalFrameTitlePaneCloseButtonWindowNotFocusedState()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.InternalFrameTitlePaneIconifyButtonPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.InternalFrameTitlePaneIconifyButtonWindowNotFocusedState InternalFrameTitlePaneIconifyButtonWindowNotFocusedState()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.InternalFrameTitlePaneMaximizeButtonPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.InternalFrameTitlePaneMaximizeButtonWindowMaximizedState InternalFrameTitlePaneMaximizeButtonWindowMaximizedState()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.InternalFrameTitlePaneMaximizeButtonWindowNotFocusedState InternalFrameTitlePaneMaximizeButtonWindowNotFocusedState()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.InternalFrameTitlePaneMenuButtonPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.InternalFrameTitlePaneMenuButtonWindowNotFocusedState InternalFrameTitlePaneMenuButtonWindowNotFocusedState()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.InternalFrameTitlePaneWindowFocusedState InternalFrameTitlePaneWindowFocusedState()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.InternalFrameWindowFocusedState InternalFrameWindowFocusedState()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.LoweredBorder LoweredBorder()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.LoweredBorder boolean isBorderOpaque()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.LoweredBorder javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.MenuBarMenuPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.MenuBarPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.MenuItemPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.MenuPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.NimbusDefaults.ColorTree.Node void set(java.awt.Color, javax.swing.plaf.nimbus.NimbusDefaults.ColorTree.Node)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.NimbusDefaults.DefaultsListener DefaultsListener(javax.swing.plaf.nimbus.NimbusDefaults)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.NimbusDefaults.DerivedFont DerivedFont(java.lang.String, float, java.lang.Boolean, java.lang.Boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.NimbusDefaults.LazyPainter LazyPainter(java.lang.String, int, java.awt.Insets, java.awt.Dimension, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.NimbusDefaults.LazyPainter LazyPainter(java.lang.String, int, java.awt.Insets, java.awt.Dimension, boolean, javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext.CacheMode, double, double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.NimbusDefaults.PainterBorder PainterBorder(java.lang.String, java.awt.Insets)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.NimbusDefaults.PainterBorder boolean isBorderOpaque()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.NimbusIcon NimbusIcon(java.lang.String, java.lang.String, int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.NimbusLookAndFeel boolean shouldUpdateStyleOnAncestorChanged()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.NimbusLookAndFeel java.lang.String getDescription()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.NimbusLookAndFeel java.lang.String getID()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.NimbusLookAndFeel java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.NimbusLookAndFeel.DefaultsListener DefaultsListener(javax.swing.plaf.nimbus.NimbusLookAndFeel)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.NimbusLookAndFeel.LinkProperty LinkProperty(javax.swing.plaf.nimbus.NimbusLookAndFeel, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.NimbusLookAndFeel.NimbusProperty NimbusProperty(javax.swing.plaf.nimbus.NimbusLookAndFeel, java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.NimbusLookAndFeel.NimbusProperty NimbusProperty(javax.swing.plaf.nimbus.NimbusLookAndFeel, java.lang.String, java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.NimbusStyle boolean contains(java.lang.String[], java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.NimbusStyle javax.swing.plaf.nimbus.NimbusStyle.RuntimeState getNextState(javax.swing.plaf.nimbus.NimbusStyle.RuntimeState[], int[], int)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="1"/>
  </item>
  <item name="javax.swing.plaf.nimbus.NimbusStyle javax.swing.plaf.synth.SynthPainter getPainter(javax.swing.plaf.synth.SynthContext)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.NimbusStyle.CacheKey boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.NimbusStyle.RuntimeState java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.OptionPaneMessageAreaOptionPaneLabelPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.OptionPanePainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.PasswordFieldPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.PopupMenuPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.PopupMenuSeparatorPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.ProgressBarFinishedState ProgressBarFinishedState()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.ProgressBarIndeterminateState ProgressBarIndeterminateState()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.ProgressBarPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.RadioButtonMenuItemPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.RadioButtonPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.ScrollBarButtonPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.ScrollBarThumbPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.ScrollBarTrackPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.ScrollPanePainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.SeparatorPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.ShadowEffect ShadowEffect()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.ShadowEffect float getOpacity()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.ShadowEffect int getAngle()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.ShadowEffect int getDistance()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.ShadowEffect int getSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.ShadowEffect int getSpread()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.ShadowEffect java.awt.Color getColor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.SliderArrowShapeState SliderArrowShapeState()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.SliderThumbArrowShapeState SliderThumbArrowShapeState()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.SliderThumbPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.SliderTrackArrowShapeState SliderTrackArrowShapeState()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.SliderTrackPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.SpinnerNextButtonPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.SpinnerPanelSpinnerFormattedTextFieldPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.SpinnerPreviousButtonPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.SplitPaneDividerPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.SplitPaneDividerVerticalState SplitPaneDividerVerticalState()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.SplitPaneVerticalState SplitPaneVerticalState()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.State State(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.State java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.State java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.State.StandardState boolean isInState(javax.swing.JComponent, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.State.StandardState int getState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.SynthPainterImpl SynthPainterImpl(javax.swing.plaf.nimbus.NimbusStyle)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.SynthPainterImpl void paintTreeCellFocus(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.TabbedPaneTabAreaPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.TabbedPaneTabPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.TableEditorPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.TableHeaderPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.TableHeaderRendererPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.TableHeaderRendererSortedState TableHeaderRendererSortedState()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.TextAreaNotInScrollPaneState TextAreaNotInScrollPaneState()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.TextAreaPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.TextFieldPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.TextPanePainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.ToggleButtonPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.ToolBarButtonPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.ToolBarEastState ToolBarEastState()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.ToolBarNorthState ToolBarNorthState()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.ToolBarPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.ToolBarSeparatorPainter ToolBarSeparatorPainter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.ToolBarSeparatorPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.ToolBarSouthState ToolBarSouthState()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.ToolBarToggleButtonPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.ToolBarWestState ToolBarWestState()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.nimbus.ToolTipPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.TreeCellEditorPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.TreeCellPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.nimbus.TreePainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
</root>
