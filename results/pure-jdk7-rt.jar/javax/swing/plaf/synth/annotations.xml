<root>
  <item name="javax.swing.plaf.synth.ColorType int getID()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.ColorType java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.ImagePainter boolean getCenter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.ImagePainter boolean getPaintsCenter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.ImagePainter boolean getTiles()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle ParsedSynthStyle()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle javax.swing.plaf.synth.SynthPainter getPainter(javax.swing.plaf.synth.SynthContext)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle void setPainters(javax.swing.plaf.synth.ParsedSynthStyle.PainterInfo[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter DelegatingPainter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.PainterInfo boolean equalsPainter(javax.swing.plaf.synth.ParsedSynthStyle.PainterInfo)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.PainterInfo int getDirection()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.PainterInfo java.lang.String getMethod()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.PainterInfo javax.swing.plaf.synth.SynthPainter getPainter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.StateInfo StateInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.StateInfo javax.swing.plaf.synth.ParsedSynthStyle.PainterInfo[] getPainters()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.StateInfo void setPainters(javax.swing.plaf.synth.ParsedSynthStyle.PainterInfo[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.Region Region(java.lang.String, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.Region boolean isSubregion()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.Region java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.Region java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthArrowButton int getDirection()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthArrowButton java.lang.String getUIClassID()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthArrowButton void setFocusable(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthArrowButton.SynthArrowButtonUI SynthArrowButtonUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthArrowButton.SynthArrowButtonUI java.awt.Dimension getMaximumSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthArrowButton.SynthArrowButtonUI java.awt.Dimension getMinimumSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthBorder SynthBorder(javax.swing.plaf.synth.SynthUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthBorder SynthBorder(javax.swing.plaf.synth.SynthUI, java.awt.Insets)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthBorder boolean isBorderOpaque()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthButtonUI SynthButtonUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthButtonUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthCheckBoxMenuItemUI SynthCheckBoxMenuItemUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthCheckBoxMenuItemUI java.lang.String getPropertyPrefix()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthCheckBoxMenuItemUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthCheckBoxUI SynthCheckBoxUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthCheckBoxUI java.lang.String getPropertyPrefix()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthCheckBoxUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthColorChooserUI SynthColorChooserUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthColorChooserUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthColorChooserUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI.ButtonHandler void mouseClicked(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI.ButtonHandler void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI.ButtonHandler void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthContext SynthContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthContext int getComponentState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthContext javax.swing.JComponent getComponent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthContext javax.swing.plaf.synth.Region getRegion()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthContext javax.swing.plaf.synth.SynthStyle getStyle()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthContext void reset(javax.swing.JComponent, javax.swing.plaf.synth.Region, javax.swing.plaf.synth.SynthStyle, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthContext void setComponentState(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthContext void setStyle(javax.swing.plaf.synth.SynthStyle)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDefaultLookup SynthDefaultLookup()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopIconUI SynthDesktopIconUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopIconUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopIconUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopIconUI.Handler Handler(javax.swing.plaf.synth.SynthDesktopIconUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopPaneUI SynthDesktopPaneUI()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopPaneUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopPaneUI.SynthDesktopManager SynthDesktopManager(javax.swing.plaf.synth.SynthDesktopPaneUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopPaneUI.TaskBar void componentMoved(java.awt.event.ComponentEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthEditorPaneUI void paintBackground(java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthFormattedTextFieldUI java.lang.String getPropertyPrefix()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils SynthGraphicsUtils()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils void applyInsets(java.awt.Rectangle, java.awt.Insets, boolean)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="0"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils.SynthIconWrapper void paintIcon(java.awt.Component, java.awt.Graphics, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils.SynthIconWrapper void reset(sun.swing.plaf.synth.SynthIcon, javax.swing.plaf.synth.SynthContext)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane java.lang.String getUIClassID()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane.SynthTitlePaneLayout SynthTitlePaneLayout(javax.swing.plaf.synth.SynthInternalFrameTitlePane)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane.SynthTitlePaneLayout void addLayoutComponent(java.lang.String, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane.SynthTitlePaneLayout void removeLayoutComponent(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthLabelUI SynthLabelUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLabelUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthListUI SynthListUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthListUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthListUI.SynthListCellRenderer java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel boolean isNativeLookAndFeel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel boolean isSupportedLookAndFeel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel boolean shouldUpdateStyleOnAncestorChanged()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel java.lang.String getDescription()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel java.lang.String getID()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel.AATextListener boolean isUpdatePending()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel.Handler Handler(javax.swing.plaf.synth.SynthLookAndFeel)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuBarUI SynthMenuBarUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuBarUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuBarUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuItemLayoutHelper boolean alignAcceleratorText()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuItemLayoutHelper int getMaxAccOrArrowWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuItemLayoutHelper javax.swing.plaf.synth.SynthContext getAccContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuItemLayoutHelper javax.swing.plaf.synth.SynthContext getContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuItemLayoutHelper javax.swing.plaf.synth.SynthGraphicsUtils getAccGraphicsUtils()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuItemLayoutHelper javax.swing.plaf.synth.SynthGraphicsUtils getGraphicsUtils()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuItemLayoutHelper javax.swing.plaf.synth.SynthStyle getAccStyle()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuItemLayoutHelper javax.swing.plaf.synth.SynthStyle getStyle()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuItemUI SynthMenuItemUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuItemUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuLayout SynthMenuLayout(java.awt.Container, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuUI SynthMenuUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthOptionPaneUI SynthOptionPaneUI()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthOptionPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthOptionPaneUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter SynthPainter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintArrowButtonBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintArrowButtonBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintArrowButtonForeground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintButtonBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintButtonBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintCheckBoxBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintCheckBoxBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintCheckBoxMenuItemBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintCheckBoxMenuItemBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintColorChooserBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintColorChooserBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintComboBoxBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintComboBoxBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintDesktopIconBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintDesktopIconBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintDesktopPaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintDesktopPaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintEditorPaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintEditorPaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintFileChooserBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintFileChooserBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintFormattedTextFieldBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintFormattedTextFieldBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintInternalFrameBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintInternalFrameBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintInternalFrameTitlePaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintInternalFrameTitlePaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintLabelBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintLabelBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintListBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintListBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintMenuBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintMenuBarBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintMenuBarBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintMenuBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintMenuItemBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintMenuItemBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintOptionPaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintOptionPaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintPanelBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintPanelBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintPasswordFieldBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintPasswordFieldBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintPopupMenuBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintPopupMenuBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintProgressBarBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintProgressBarBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintProgressBarForeground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintRadioButtonBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintRadioButtonBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintRadioButtonMenuItemBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintRadioButtonMenuItemBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintRootPaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintRootPaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintScrollBarBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintScrollBarBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintScrollBarThumbBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintScrollBarThumbBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintScrollBarTrackBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintScrollBarTrackBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintScrollPaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintScrollPaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSeparatorBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSeparatorBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSeparatorForeground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSliderBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSliderBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSliderThumbBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSliderThumbBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSliderTrackBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSliderTrackBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSpinnerBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSpinnerBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSplitPaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSplitPaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSplitPaneDividerBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSplitPaneDividerForeground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSplitPaneDragDivider(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTabbedPaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTabbedPaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTabbedPaneContentBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTabbedPaneContentBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTabbedPaneTabAreaBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTabbedPaneTabAreaBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTabbedPaneTabBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTabbedPaneTabBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTableBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTableBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTableHeaderBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTableHeaderBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTextAreaBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTextAreaBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTextFieldBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTextFieldBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTextPaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTextPaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintToggleButtonBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintToggleButtonBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintToolBarBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintToolBarBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintToolBarContentBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintToolBarContentBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintToolBarDragWindowBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintToolBarDragWindowBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintToolTipBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintToolTipBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTreeBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTreeBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTreeCellBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTreeCellBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTreeCellFocus(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintViewportBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintViewportBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPanelUI SynthPanelUI()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPanelUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPanelUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthParser boolean isForwarding()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthParser.LazyImageIcon LazyImageIcon(java.net.URL)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPasswordFieldUI java.lang.String getPropertyPrefix()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPasswordFieldUI javax.swing.text.View create(javax.swing.text.Element)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPopupMenuUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthProgressBarUI SynthProgressBarUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthProgressBarUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthRadioButtonMenuItemUI SynthRadioButtonMenuItemUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthRadioButtonMenuItemUI java.lang.String getPropertyPrefix()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthRadioButtonMenuItemUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthRadioButtonUI SynthRadioButtonUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthRadioButtonUI java.lang.String getPropertyPrefix()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthRadioButtonUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthRootPaneUI SynthRootPaneUI()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthRootPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthRootPaneUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI SynthScrollBarUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI void configureScrollBarColors()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollPaneUI SynthScrollPaneUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollPaneUI.ViewportBorder boolean isBorderOpaque()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollPaneUI.ViewportBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets)">
    <annotation name="org.jetbrains.annotations.ParamChange" params="1"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollPaneUI.ViewportViewFocusHandler ViewportViewFocusHandler(javax.swing.plaf.synth.SynthScrollPaneUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSeparatorUI SynthSeparatorUI()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthSeparatorUI java.awt.Dimension getMaximumSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthSeparatorUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI SynthSliderUI(javax.swing.JSlider)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI javax.swing.plaf.basic.BasicSliderUI.TrackListener createTrackListener(javax.swing.JSlider)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI.SynthTrackListener SynthTrackListener(javax.swing.plaf.synth.SynthSliderUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSpinnerUI SynthSpinnerUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSpinnerUI java.awt.LayoutManager createLayout()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthSpinnerUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthSpinnerUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthSpinnerUI.EditorFocusHandler EditorFocusHandler(javax.swing.plaf.synth.SynthSpinnerUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSpinnerUI.SpinnerLayout SpinnerLayout()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSpinnerUI.SpinnerLayout void addLayoutComponent(java.lang.String, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSpinnerUI.SpinnerLayout void removeLayoutComponent(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSplitPaneUI SynthSplitPaneUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSplitPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthStyle SynthStyle()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthStyle boolean isOpaque(javax.swing.plaf.synth.SynthContext)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthStyle javax.swing.plaf.synth.SynthGraphicsUtils getGraphicsUtils(javax.swing.plaf.synth.SynthContext)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthStyle javax.swing.plaf.synth.SynthPainter getPainter(javax.swing.plaf.synth.SynthContext)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthStyleFactory SynthStyleFactory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI SynthTabbedPaneUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI java.awt.event.MouseListener createMouseListener()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableHeaderUI SynthTableHeaderUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableHeaderUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableUI SynthTableUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableUI.SynthTableCellRenderer boolean isOpaque()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableUI.SynthTableCellRenderer void setOpaque(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextAreaUI void paintBackground(java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextAreaUI.Handler Handler(javax.swing.plaf.synth.SynthTextAreaUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextFieldUI void paintBackground(java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextFieldUI.Handler Handler(javax.swing.plaf.synth.SynthTextFieldUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextPaneUI java.lang.String getPropertyPrefix()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthToggleButtonUI SynthToggleButtonUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToggleButtonUI java.lang.String getPropertyPrefix()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthToggleButtonUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI java.awt.LayoutManager createLayout()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI void installComponents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI void setBorderToNonRollover(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI void setBorderToNormal(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI void setBorderToRollover(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI void uninstallComponents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI.SynthToolBarLayoutManager SynthToolBarLayoutManager(javax.swing.plaf.synth.SynthToolBarUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI.SynthToolBarLayoutManager void addLayoutComponent(java.lang.String, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI.SynthToolBarLayoutManager void removeLayoutComponent(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolTipUI SynthToolTipUI()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolTipUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI SynthTreeUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI int getComponentState(javax.swing.JComponent, javax.swing.plaf.synth.Region)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI int getRowX(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI javax.swing.Icon getExpandedIcon()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI.ExpandedIconWrapper ExpandedIconWrapper(javax.swing.plaf.synth.SynthTreeUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI.SynthTreeCellRenderer java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthViewportUI SynthViewportUI()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthViewportUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthViewportUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthViewportUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val name="pure" val="true"/>
    </annotation>
  </item>
</root>
